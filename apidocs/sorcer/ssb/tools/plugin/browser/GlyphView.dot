#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.ssb.tools.plugin.browser.GlyphView
	c221776 [label=<<table title="sorcer.ssb.tools.plugin.browser.GlyphView" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./GlyphView.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GlyphView </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LAYER_COLOR : Color </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GlyphView(browser : ServiceBrowserUI) </td></tr>
<tr><td align="left" balign="left"> + paint(g : Graphics) </td></tr>
<tr><td align="left" balign="left"> + add(obj : Glyph) </td></tr>
		</table></td></tr>
		</table>>, URL="./GlyphView.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.ssb.tools.plugin.browser.GlyphView extends javax.swing.JComponent
	c221868:p -> c221776:p [dir=back,arrowtail=empty];
	// javax.swing.JComponent
	c221868 [label=<<table title="javax.swing.JComponent" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/javax/swing/JComponent.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> JComponent </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ui : ComponentUI </td></tr>
<tr><td align="left" balign="left"> # listenerList : EventListenerList </td></tr>
<tr><td align="left" balign="left"> + WHEN_FOCUSED : int </td></tr>
<tr><td align="left" balign="left"> + WHEN_ANCESTOR_OF_FOCUSED_COMPONENT : int </td></tr>
<tr><td align="left" balign="left"> + WHEN_IN_FOCUSED_WINDOW : int </td></tr>
<tr><td align="left" balign="left"> + UNDEFINED_CONDITION : int </td></tr>
<tr><td align="left" balign="left"> + TOOL_TIP_TEXT_KEY : String </td></tr>
<tr><td align="left" balign="left"> # accessibleContext : AccessibleContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JComponent() </td></tr>
<tr><td align="left" balign="left"> + setInheritsPopupMenu(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getInheritsPopupMenu() : boolean </td></tr>
<tr><td align="left" balign="left"> + setComponentPopupMenu(arg0 : JPopupMenu) </td></tr>
<tr><td align="left" balign="left"> + getComponentPopupMenu() : JPopupMenu </td></tr>
<tr><td align="left" balign="left"> + updateUI() </td></tr>
<tr><td align="left" balign="left"> # setUI(arg0 : ComponentUI) </td></tr>
<tr><td align="left" balign="left"> + getUIClassID() : String </td></tr>
<tr><td align="left" balign="left"> # getComponentGraphics(arg0 : Graphics) : Graphics </td></tr>
<tr><td align="left" balign="left"> # paintComponent(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> # paintChildren(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> # paintBorder(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + update(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + paint(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + printAll(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> # printComponent(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> # printChildren(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> # printBorder(arg0 : Graphics) </td></tr>
<tr><td align="left" balign="left"> + isPaintingTile() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPaintingForPrint() : boolean </td></tr>
<tr><td align="left" balign="left"> + isManagingFocus() : boolean </td></tr>
<tr><td align="left" balign="left"> + setNextFocusableComponent(arg0 : Component) </td></tr>
<tr><td align="left" balign="left"> + getNextFocusableComponent() : Component </td></tr>
<tr><td align="left" balign="left"> + setRequestFocusEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isRequestFocusEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + requestFocus() </td></tr>
<tr><td align="left" balign="left"> + requestFocus(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + requestFocusInWindow() : boolean </td></tr>
<tr><td align="left" balign="left"> # requestFocusInWindow(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + grabFocus() </td></tr>
<tr><td align="left" balign="left"> + setVerifyInputWhenFocusTarget(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getVerifyInputWhenFocusTarget() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFontMetrics(arg0 : Font) : FontMetrics </td></tr>
<tr><td align="left" balign="left"> + setPreferredSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + getPreferredSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + setMaximumSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + getMaximumSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + setMinimumSize(arg0 : Dimension) </td></tr>
<tr><td align="left" balign="left"> + getMinimumSize() : Dimension </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : int, arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + setBorder(arg0 : Border) </td></tr>
<tr><td align="left" balign="left"> + getBorder() : Border </td></tr>
<tr><td align="left" balign="left"> + getInsets() : Insets </td></tr>
<tr><td align="left" balign="left"> + getInsets(arg0 : Insets) : Insets </td></tr>
<tr><td align="left" balign="left"> + getAlignmentY() : float </td></tr>
<tr><td align="left" balign="left"> + setAlignmentY(arg0 : float) </td></tr>
<tr><td align="left" balign="left"> + getAlignmentX() : float </td></tr>
<tr><td align="left" balign="left"> + setAlignmentX(arg0 : float) </td></tr>
<tr><td align="left" balign="left"> + setInputVerifier(arg0 : InputVerifier) </td></tr>
<tr><td align="left" balign="left"> + getInputVerifier() : InputVerifier </td></tr>
<tr><td align="left" balign="left"> + getGraphics() : Graphics </td></tr>
<tr><td align="left" balign="left"> + setDebugGraphicsOptions(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getDebugGraphicsOptions() : int </td></tr>
<tr><td align="left" balign="left"> + registerKeyboardAction(arg0 : ActionListener, arg1 : String, arg2 : KeyStroke, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + registerKeyboardAction(arg0 : ActionListener, arg1 : KeyStroke, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + unregisterKeyboardAction(arg0 : KeyStroke) </td></tr>
<tr><td align="left" balign="left"> + getRegisteredKeyStrokes() : KeyStroke[] </td></tr>
<tr><td align="left" balign="left"> + getConditionForKeyStroke(arg0 : KeyStroke) : int </td></tr>
<tr><td align="left" balign="left"> + getActionForKeyStroke(arg0 : KeyStroke) : ActionListener </td></tr>
<tr><td align="left" balign="left"> + resetKeyboardActions() </td></tr>
<tr><td align="left" balign="left"> + setInputMap(arg0 : int, arg1 : InputMap) </td></tr>
<tr><td align="left" balign="left"> + getInputMap(arg0 : int) : InputMap </td></tr>
<tr><td align="left" balign="left"> + getInputMap() : InputMap </td></tr>
<tr><td align="left" balign="left"> + setActionMap(arg0 : ActionMap) </td></tr>
<tr><td align="left" balign="left"> + getActionMap() : ActionMap </td></tr>
<tr><td align="left" balign="left"> + getBaseline(arg0 : int, arg1 : int) : int </td></tr>
<tr><td align="left" balign="left"> + getBaselineResizeBehavior() : Component.BaselineResizeBehavior </td></tr>
<tr><td align="left" balign="left"> + requestDefaultFocus() : boolean </td></tr>
<tr><td align="left" balign="left"> + setVisible(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setEnabled(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + setForeground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + setBackground(arg0 : Color) </td></tr>
<tr><td align="left" balign="left"> + setFont(arg0 : Font) </td></tr>
<tr><td align="left" balign="left"> + getDefaultLocale() : Locale </td></tr>
<tr><td align="left" balign="left"> + setDefaultLocale(arg0 : Locale) </td></tr>
<tr><td align="left" balign="left"> # processComponentKeyEvent(arg0 : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> # processKeyEvent(arg0 : KeyEvent) </td></tr>
<tr><td align="left" balign="left"> # processKeyBinding(arg0 : KeyStroke, arg1 : KeyEvent, arg2 : int, arg3 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + setToolTipText(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getToolTipText() : String </td></tr>
<tr><td align="left" balign="left"> + getToolTipText(arg0 : MouseEvent) : String </td></tr>
<tr><td align="left" balign="left"> + getToolTipLocation(arg0 : MouseEvent) : Point </td></tr>
<tr><td align="left" balign="left"> + getPopupLocation(arg0 : MouseEvent) : Point </td></tr>
<tr><td align="left" balign="left"> + createToolTip() : JToolTip </td></tr>
<tr><td align="left" balign="left"> + scrollRectToVisible(arg0 : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + setAutoscrolls(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + getAutoscrolls() : boolean </td></tr>
<tr><td align="left" balign="left"> + setTransferHandler(arg0 : TransferHandler) </td></tr>
<tr><td align="left" balign="left"> + getTransferHandler() : TransferHandler </td></tr>
<tr><td align="left" balign="left"> # processMouseEvent(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> # processMouseMotionEvent(arg0 : MouseEvent) </td></tr>
<tr><td align="left" balign="left"> + enable() </td></tr>
<tr><td align="left" balign="left"> + disable() </td></tr>
<tr><td align="left" balign="left"> + getAccessibleContext() : AccessibleContext </td></tr>
<tr><td align="left" balign="left"> + getClientProperty(arg0 : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putClientProperty(arg0 : Object, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + setFocusTraversalKeys(arg0 : int, arg1 : Set&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + isLightweightComponent(arg0 : Component) : boolean </td></tr>
<tr><td align="left" balign="left"> + reshape(arg0 : int, arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + getBounds(arg0 : Rectangle) : Rectangle </td></tr>
<tr><td align="left" balign="left"> + getSize(arg0 : Dimension) : Dimension </td></tr>
<tr><td align="left" balign="left"> + getLocation(arg0 : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + getX() : int </td></tr>
<tr><td align="left" balign="left"> + getY() : int </td></tr>
<tr><td align="left" balign="left"> + getWidth() : int </td></tr>
<tr><td align="left" balign="left"> + getHeight() : int </td></tr>
<tr><td align="left" balign="left"> + isOpaque() : boolean </td></tr>
<tr><td align="left" balign="left"> + setOpaque(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + computeVisibleRect(arg0 : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + getVisibleRect() : Rectangle </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : boolean, arg2 : boolean) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + firePropertyChange(arg0 : String, arg1 : char, arg2 : char) </td></tr>
<tr><td align="left" balign="left"> # fireVetoableChange(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + addVetoableChangeListener(arg0 : VetoableChangeListener) </td></tr>
<tr><td align="left" balign="left"> + removeVetoableChangeListener(arg0 : VetoableChangeListener) </td></tr>
<tr><td align="left" balign="left"> + getVetoableChangeListeners() : VetoableChangeListener[] </td></tr>
<tr><td align="left" balign="left"> + getTopLevelAncestor() : Container </td></tr>
<tr><td align="left" balign="left"> + addAncestorListener(arg0 : AncestorListener) </td></tr>
<tr><td align="left" balign="left"> + removeAncestorListener(arg0 : AncestorListener) </td></tr>
<tr><td align="left" balign="left"> + getAncestorListeners() : AncestorListener[] </td></tr>
<tr><td align="left" balign="left"> + getListeners(arg0 : Class&lt;T&gt;) : T[] </td></tr>
<tr><td align="left" balign="left"> + addNotify() </td></tr>
<tr><td align="left" balign="left"> + removeNotify() </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : long, arg1 : int, arg2 : int, arg3 : int, arg4 : int) </td></tr>
<tr><td align="left" balign="left"> + repaint(arg0 : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + revalidate() </td></tr>
<tr><td align="left" balign="left"> + isValidateRoot() : boolean </td></tr>
<tr><td align="left" balign="left"> + isOptimizedDrawingEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> # isPaintingOrigin() : boolean </td></tr>
<tr><td align="left" balign="left"> + paintImmediately(arg0 : int, arg1 : int, arg2 : int, arg3 : int) </td></tr>
<tr><td align="left" balign="left"> + paintImmediately(arg0 : Rectangle) </td></tr>
<tr><td align="left" balign="left"> + setDoubleBuffered(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDoubleBuffered() : boolean </td></tr>
<tr><td align="left" balign="left"> + getRootPane() : JRootPane </td></tr>
<tr><td align="left" balign="left"> # paramString() : String </td></tr>
<tr><td align="left" balign="left"> + hide() </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/javax/swing/JComponent.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

