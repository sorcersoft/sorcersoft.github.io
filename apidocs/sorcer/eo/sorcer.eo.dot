#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.eo.operator
	c32254 [label=<<table title="sorcer.eo.operator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> operator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + operator() </td></tr>
<tr><td align="left" balign="left"> + path(attributes : List&lt;String&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + revalue(evaluation : Evaluation&lt;&gt;, path : String, entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + revalue(object : Object, entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + path(attributes : String[]) : String </td></tr>
<tr><td align="left" balign="left"> + subject(path : String, value : T) : operator.Complement&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + put(context : T, entries : Tuple2&lt;&gt;[]) : T </td></tr>
<tr><td align="left" balign="left"> + put(exertion : Exertion, entries : Tuple2&lt;String, ?&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + setContext(exertion : Exertion, context : Context&lt;&gt;) : Exertion </td></tr>
<tr><td align="left" balign="left"> + control(exertion : Exertion) : ControlContext </td></tr>
<tr><td align="left" balign="left"> + control(exertion : Exertion, childName : String) : ControlContext </td></tr>
<tr><td align="left" balign="left"> + cxt(entries : T[]) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + jCxt(job : Job) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + jobContext(job : Exertion) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + data(data : Object) : operator.DataEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + taskContext(path : String, job : Job) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + context(entries : T[]) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + names(list : List&lt;?&gt;) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + name(identifiable : Object) : String </td></tr>
<tr><td align="left" balign="left"> + names(array : Identifiable[]) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + attributes(entries : Entry&lt;&gt;[]) : List&lt;Entry&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + revaluable(evaluation : Revaluation, entries : Arg[]) : Revaluation </td></tr>
<tr><td align="left" balign="left"> + unrevaluable(evaluation : Revaluation) : Revaluation </td></tr>
<tr><td align="left" balign="left"> + substitute(evaluation : Evaluation&lt;&gt;, entries : Arg[]) : Evaluation&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + sig(serviceType : Class&lt;?&gt;, returnPath : ReturnPath&lt;&gt;) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(serviceType : Class&lt;?&gt;, providerName : String, parameters : Object[]) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, serviceType : Class&lt;?&gt;, version : String, providerName : String, parameters : Object[]) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, serviceType : Class&lt;?&gt;, version : String) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(selector : String) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(name : String, selector : String) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, serviceType : Class&lt;?&gt;, type : Signature.Type) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, serviceType : Class&lt;?&gt;, type : Strategy.Provision) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, serviceType : Class&lt;?&gt;, attributes : List&lt;Entry&gt;) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(serviceType : Class&lt;?&gt;) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, serviceType : Class&lt;?&gt;, resultPath : ReturnPath&lt;&gt;) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(exertion : Exertion, componentExertionName : String) : Signature </td></tr>
<tr><td align="left" balign="left"> + task(name : String, elems : T[]) : Task </td></tr>
<tr><td align="left" balign="left"> + selector(sig : Signature) : String </td></tr>
<tr><td align="left" balign="left"> + type(signature : Signature, type : Signature.Type) : Signature </td></tr>
<tr><td align="left" balign="left"> + sig(operation : String, object : Object, types : Class&lt;&gt;[]) : ObjectSignature </td></tr>
<tr><td align="left" balign="left"> + sig(selector : String, object : Object, types : Class&lt;?&gt;[], args : Object[]) : ObjectSignature </td></tr>
<tr><td align="left" balign="left"> + task(signature : ObjectSignature) : ObjectTask </td></tr>
<tr><td align="left" balign="left"> + task(signature : ObjectSignature, context : Context&lt;&gt;) : ObjectTask </td></tr>
<tr><td align="left" balign="left"> + task(name : String, signature : Signature, context : Context&lt;&gt;) : Task </td></tr>
<tr><td align="left" balign="left"> + task(signature : Signature, context : Context&lt;&gt;) : Task </td></tr>
<tr><td align="left" balign="left"> + batch(name : String, elems : T[]) : Task </td></tr>
<tr><td align="left" balign="left"> + srv(name : String, elems : T[]) : E </td></tr>
<tr><td align="left" balign="left"> + xrt(name : String, elems : T[]) : E </td></tr>
<tr><td align="left" balign="left"> + exertion(name : String, elems : T[]) : E </td></tr>
<tr><td align="left" balign="left"> + job(elems : T[]) : Job </td></tr>
<tr><td align="left" balign="left"> + get(context : Context&lt;&gt;) : Object </td></tr>
<tr><td align="left" balign="left"> + get(context : Context&lt;&gt;, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + get(exertion : Exertion) : Object </td></tr>
<tr><td align="left" balign="left"> + asis(evaluation : Object) : V </td></tr>
<tr><td align="left" balign="left"> + get(exertion : Exertion, component : String, path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + value(url : URL) : Object </td></tr>
<tr><td align="left" balign="left"> + value(evaluation : Evaluation&lt;T&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + value(evaluation : Evaluation&lt;T&gt;, evalSelector : String, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + url(model : Context&lt;&gt;, name : String) : Object </td></tr>
<tr><td align="left" balign="left"> + asis(mappable : Mappable&lt;&gt;, path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + get(mappable : Mappable&lt;&gt;, path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + exertions(xrt : Exertion) : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + exertion(xrt : Exertion, componentExertionName : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + trace(xrt : Exertion) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + print(obj : Object) </td></tr>
<tr><td align="left" balign="left"> + exec(context : Context&lt;&gt;, entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + execExertion(exertion : Exertion, path : String, entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + exertOpenTask(exertion : Exertion, entries : Arg[]) : Exertion </td></tr>
<tr><td align="left" balign="left"> + get(xrt : Exertion, path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + exceptions(exertion : Exertion) : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + exert(input : Task, entries : Entry&lt;&gt;[]) : Task </td></tr>
<tr><td align="left" balign="left"> + exert(input : Exertion, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + exert(input : T, transaction : Transaction, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + output(value : Object) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + self() : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + result(path : String, paths : String[]) : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + result(path : String, direction : Direction, paths : String[]) : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + result(path : String, type : Class&lt;&gt;, paths : String[]) : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + output(path : String, value : Object) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + out(path : String, value : Object) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + output(outExertion : Exertion, outPath : String) : operator.OutEndPoint </td></tr>
<tr><td align="left" balign="left"> + out(outExertion : Mappable&lt;&gt;, outPath : String) : operator.OutEndPoint </td></tr>
<tr><td align="left" balign="left"> + input(inExertion : Mappable&lt;&gt;, inPath : String) : operator.InEndPoint </td></tr>
<tr><td align="left" balign="left"> + in(inExertion : Exertion, inPath : String) : operator.InEndPoint </td></tr>
<tr><td align="left" balign="left"> + output(path : String, value : Object, index : int) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + out(path : String, value : Object, index : int) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbOutput(path : String, value : Object) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbOut(path : String, value : Object) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbOutput(path : String, value : Object, datasoreURL : URL) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbOut(path : String, value : Object, datasoreURL : URL) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + input(path : String) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + out(path : String) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + output(path : String) : OutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + in(path : String) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + at(path : String, value : Object) : Entry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + at(path : String, value : Object, index : int) : Entry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + input(path : String, value : Object) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + in(path : String, value : Object) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbInput(path : String, value : Object) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbIn(path : String, value : Object) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbIntput(path : String, value : Object, datasoreURL : URL) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + dbIn(path : String, value : Object, datasoreURL : URL) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + input(path : String, value : Object, index : int) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + in(path : String, value : Object, index : int) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + inout(path : String) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + inout(path : String, value : Object) : InEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + inout(path : String, value : Object, index : int) : InoutEntry&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + persistent(pipe : operator.Pipe) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + pipe(outEndPoint : operator.OutEndPoint, inEndPoint : operator.InEndPoint) : operator.Pipe </td></tr>
<tr><td align="left" balign="left"> + link(context : Context&lt;&gt;, path : String, linkedContext : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + link(context : Context&lt;&gt;, path : String, linkedContext : Context&lt;&gt;) : Object </td></tr>
<tr><td align="left" balign="left"> + strategy(entries : T[]) : ControlContext </td></tr>
<tr><td align="left" balign="left"> + dbURL() : URL </td></tr>
<tr><td align="left" balign="left"> + dsURL() : URL </td></tr>
<tr><td align="left" balign="left"> + dbURL(object : Object, dbUrl : URL) </td></tr>
<tr><td align="left" balign="left"> + dbURL(object : Object) : URL </td></tr>
<tr><td align="left" balign="left"> + store(object : Object) : URL </td></tr>
<tr><td align="left" balign="left"> + retrieve(url : URL) : Object </td></tr>
<tr><td align="left" balign="left"> + update(object : Object) : URL </td></tr>
<tr><td align="left" balign="left"> + list(url : URL) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + list(store : Store) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + delete(object : Object) : URL </td></tr>
<tr><td align="left" balign="left"> + clear(type : Store) : int </td></tr>
<tr><td align="left" balign="left"> + size(type : Store) : int </td></tr>
<tr><td align="left" balign="left"> + target(object : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + parameterTypes(parameterTypes : Class&lt;&gt;[]) : operator.ParameterTypes </td></tr>
<tr><td align="left" balign="left"> + parameterValues(args : Object[]) : operator.Args </td></tr>
<tr><td align="left" balign="left"> + args(args : Object[]) : operator.Args </td></tr>
<tr><td align="left" balign="left"> + args(path : String, args : Object[]) : operator.Args </td></tr>
<tr><td align="left" balign="left"> + providers(signature : Signature) : List&lt;Service&gt; </td></tr>
<tr><td align="left" balign="left"> + interfaces(obj : Object) : List&lt;Class&lt;?&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + provider(signature : Signature) : Object </td></tr>
<tr><td align="left" balign="left"> + instance(signature : ObjectSignature) : Object </td></tr>
<tr><td align="left" balign="left"> + instance(signature : ObjectSignature, context : Context&lt;&gt;) : Object </td></tr>
<tr><td align="left" balign="left"> + condition(condition : boolean) : Condition </td></tr>
<tr><td align="left" balign="left"> + opt(name : String, target : Exertion) : OptExertion </td></tr>
<tr><td align="left" balign="left"> + opt(name : String, condition : Condition, target : Exertion) : OptExertion </td></tr>
<tr><td align="left" balign="left"> + alt(name : String, invokers : OptExertion[]) : AltExertion </td></tr>
<tr><td align="left" balign="left"> + loop(name : String, condition : Condition, target : Exertion) : LoopExertion </td></tr>
<tr><td align="left" balign="left"> + exertion(mappable : Mappable&lt;&gt;, path : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + dispatcher(signature : Signature) : Signature </td></tr>
<tr><td align="left" balign="left"> + model(signature : Signature) : Signature </td></tr>
<tr><td align="left" balign="left"> + modelManager(signature : Signature) : Signature </td></tr>
<tr><td align="left" balign="left"> + optimizer(signature : Signature) : Signature </td></tr>
<tr><td align="left" balign="left"> + explorer(signature : Signature) : Signature </td></tr>
<tr><td align="left" balign="left"> + block(signature : Signature, context : Context&lt;&gt;, exertions : Exertion[]) : Block </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.Range
	c32255 [label=<<table title="sorcer.eo.operator.Range" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.Range.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Range </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + range : Integer[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + operator.Range(from : Integer, to : Integer) </td></tr>
<tr><td align="left" balign="left"> + operator.Range(range : Integer[]) </td></tr>
<tr><td align="left" balign="left"> + range() : Integer[] </td></tr>
<tr><td align="left" balign="left"> + from() : int </td></tr>
<tr><td align="left" balign="left"> + to() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.Range.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.Pipe
	c32256 [label=<<table title="sorcer.eo.operator.Pipe" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.Pipe.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Pipe </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.Pipe.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.target
	c32257 [label=<<table title="sorcer.eo.operator.target" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.target.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> target </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.target.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.result
	c32258 [label=<<table title="sorcer.eo.operator.result" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.result.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> result </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + returnPath() : Class&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.result.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.ParameterTypes
	c32259 [label=<<table title="sorcer.eo.operator.ParameterTypes" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.ParameterTypes.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ParameterTypes </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + operator.ParameterTypes(parameterTypes : Class&lt;&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + operator.ParameterTypes(path : String, parameterTypes : Class&lt;&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.ParameterTypes.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.Args
	c32260 [label=<<table title="sorcer.eo.operator.Args" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.Args.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Args </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + operator.Args(args : Object[]) </td></tr>
<tr><td align="left" balign="left"> + operator.Args(path : String, args : Object[]) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.Args.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.DataEntry<T2>
	c32261 [label=<<table title="sorcer.eo.operator.DataEntry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.DataEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DataEntry&lt;T2&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.DataEntry.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.eo.operator.Complement<T2>
	c32262 [label=<<table title="sorcer.eo.operator.Complement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./operator.Complement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Complement&lt;T2&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./operator.Complement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

