#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.junit.SorcerRunner
	c521544 [label=<<table title="sorcer.junit.SorcerRunner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./SorcerRunner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SorcerRunner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SorcerRunner(klass : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + SorcerRunner(klass : Class&lt;?&gt;, configuration : SorcerServiceConfiguration) </td></tr>
<tr><td align="left" balign="left"> + run(notifier : RunNotifier) </td></tr>
<tr><td align="left" balign="left"> # runChild(method : FrameworkMethod, notifier : RunNotifier) </td></tr>
		</table></td></tr>
		</table>>, URL="./SorcerRunner.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.junit.SorcerRunner extends org.junit.runners.BlockJUnit4ClassRunner
	c521697:p -> c521544:p [dir=back,arrowtail=empty];
	// org.junit.runners.BlockJUnit4ClassRunner
	c521697 [label=<<table title="org.junit.runners.BlockJUnit4ClassRunner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BlockJUnit4ClassRunner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BlockJUnit4ClassRunner(arg0 : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> # runChild(arg0 : FrameworkMethod, arg1 : RunNotifier) </td></tr>
<tr><td align="left" balign="left"> # describeChild(arg0 : FrameworkMethod) : Description </td></tr>
<tr><td align="left" balign="left"> # getChildren() : List&lt;FrameworkMethod&gt; </td></tr>
<tr><td align="left" balign="left"> # computeTestMethods() : List&lt;FrameworkMethod&gt; </td></tr>
<tr><td align="left" balign="left"> # collectInitializationErrors(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateNoNonStaticInnerClass(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateConstructor(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateOnlyOneConstructor(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateZeroArgConstructor(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateInstanceMethods(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateFields(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # validateTestMethods(arg0 : List&lt;Throwable&gt;) </td></tr>
<tr><td align="left" balign="left"> # createTest() : Object </td></tr>
<tr><td align="left" balign="left"> # testName(arg0 : FrameworkMethod) : String </td></tr>
<tr><td align="left" balign="left"> # methodBlock(arg0 : FrameworkMethod) : Statement </td></tr>
<tr><td align="left" balign="left"> # methodInvoker(arg0 : FrameworkMethod, arg1 : Object) : Statement </td></tr>
<tr><td align="left" balign="left"> # possiblyExpectingExceptions(arg0 : FrameworkMethod, arg1 : Object, arg2 : Statement) : Statement </td></tr>
<tr><td align="left" balign="left"> # withPotentialTimeout(arg0 : FrameworkMethod, arg1 : Object, arg2 : Statement) : Statement </td></tr>
<tr><td align="left" balign="left"> # withBefores(arg0 : FrameworkMethod, arg1 : Object, arg2 : Statement) : Statement </td></tr>
<tr><td align="left" balign="left"> # withAfters(arg0 : FrameworkMethod, arg1 : Object, arg2 : Statement) : Statement </td></tr>
<tr><td align="left" balign="left"> # rules(arg0 : Object) : List&lt;MethodRule&gt; </td></tr>
<tr><td align="left" balign="left"> # getTestRules(arg0 : Object) : List&lt;TestRule&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

