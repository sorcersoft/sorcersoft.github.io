#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.tools.shell.NetworkShell
	c220533 [label=<<table title="sorcer.tools.shell.NetworkShell" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NetworkShell.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NetworkShell </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + selectedRegistrar : int </td></tr>
<tr><td align="left" balign="left"> + COMPONENT : String </td></tr>
<tr><td align="left" balign="left"> + logger : Logger </td></tr>
<tr><td align="left" balign="left"> # instance : NetworkShell </td></tr>
<tr><td align="left" balign="left"> # groups : String[] </td></tr>
<tr><td align="left" balign="left"> + shellOutput : PrintStream </td></tr>
<tr><td align="left" balign="left"> + nshUrl : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + buildInstance(argv : String[]) : String[] </td></tr>
<tr><td align="left" balign="left"> + getInstance() : INetworkShell </td></tr>
<tr><td align="left" balign="left"> # ensureSecurityManager() </td></tr>
<tr><td align="left" balign="left"> + main(argv : String[]) </td></tr>
<tr><td align="left" balign="left"> + getUserName() : String </td></tr>
<tr><td align="left" balign="left"> + isDebug() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + startApplication(appPath : String) </td></tr>
<tr><td align="left" balign="left"> + setLookupDiscovery(ingroups : String[]) </td></tr>
<tr><td align="left" balign="left"> + getSelectedRegistrar() : ServiceRegistrar </td></tr>
<tr><td align="left" balign="left"> + discovered(evt : DiscoveryEvent) </td></tr>
<tr><td align="left" balign="left"> + discarded(evt : DiscoveryEvent) </td></tr>
<tr><td align="left" balign="left"> + enumerateCommands() </td></tr>
<tr><td align="left" balign="left"> + addToCommandTable(cmd : String, inCls : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getCmd() : String </td></tr>
<tr><td align="left" balign="left"> + getShellTokenizer() : StringTokenizer </td></tr>
<tr><td align="left" balign="left"> + getShellInputStream() : BufferedReader </td></tr>
<tr><td align="left" balign="left"> + getShellOutputStream() : PrintStream </td></tr>
<tr><td align="left" balign="left"> + getOutputStream() : PrintStream </td></tr>
<tr><td align="left" balign="left"> + setShellOutput(outputStream : PrintStream) </td></tr>
<tr><td align="left" balign="left"> + getDisco() : LookupDiscovery </td></tr>
<tr><td align="left" balign="left"> + getRegistrars() : ArrayList&lt;ServiceRegistrar&gt; </td></tr>
<tr><td align="left" balign="left"> + getConfiguration() : Configuration </td></tr>
<tr><td align="left" balign="left"> + getHomeDir() : String </td></tr>
<tr><td align="left" balign="left"> + setHomeDir(homeDir : String) </td></tr>
<tr><td align="left" balign="left"> + getCurrentDir() : File </td></tr>
<tr><td align="left" balign="left"> + setCurrentDir(currentDir : File) </td></tr>
<tr><td align="left" balign="left"> + getShellLog() : File </td></tr>
<tr><td align="left" balign="left"> + setShellLog(shellLog : File) </td></tr>
<tr><td align="left" balign="left"> + isInteractive() : boolean </td></tr>
<tr><td align="left" balign="left"> + getWebsterUrl() : String </td></tr>
<tr><td align="left" balign="left"> + initShell(args : String[]) : String[] </td></tr>
<tr><td align="left" balign="left"> + getGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + setGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + toArray(s : String, delim : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + arrayToRequest(array : Object) : String </td></tr>
<tr><td align="left" balign="left"> + getText(urlOrFilename : String) : String </td></tr>
<tr><td align="left" balign="left"> + huntForTheScriptFile(input : String) : File </td></tr>
<tr><td align="left" balign="left"> + getCommandTable() : TreeMap&lt;String, ShellCmd&gt; </td></tr>
<tr><td align="left" balign="left"> + getRequest() : String </td></tr>
<tr><td align="left" balign="left"> + setRequest(request : String) </td></tr>
<tr><td align="left" balign="left"> + printLookupAttributes(attributeSets : Entry[]) </td></tr>
<tr><td align="left" balign="left"> + getAppMap() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + appendApps(apps : String[]) </td></tr>
<tr><td align="left" balign="left"> + appendNishApps(apps : String[]) </td></tr>
<tr><td align="left" balign="left"> + getWebster() : Webster </td></tr>
<tr><td align="left" balign="left"> + toShortString(entry : AbstractEntry) : String </td></tr>
<tr><td align="left" balign="left"> + printSorcerServiceInfo(serviceInfo : SorcerServiceInfo) </td></tr>
<tr><td align="left" balign="left"> + addAlias(alias : String, command : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./NetworkShell.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.tools.shell.INetworkShell
	c220542 [label=<<table title="sorcer.tools.shell.INetworkShell" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./INetworkShell.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> INetworkShell </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addToCommandTable(cmd : String, inCls : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + addAlias(alias : String, command : String) </td></tr>
<tr><td align="left" balign="left"> + getCmd() : String </td></tr>
<tr><td align="left" balign="left"> + getCurrentDir() : File </td></tr>
<tr><td align="left" balign="left"> + getHomeDir() : String </td></tr>
<tr><td align="left" balign="left"> + setCurrentDir(file : File) </td></tr>
<tr><td align="left" balign="left"> + getSelectedRegistrar() : ServiceRegistrar </td></tr>
<tr><td align="left" balign="left"> + getOutputStream() : PrintStream </td></tr>
<tr><td align="left" balign="left"> + isDebug() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./INetworkShell.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.tools.shell.NetworkShell implements net.jini.discovery.DiscoveryListener
	c220847:p -> c220533:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.tools.shell.NetworkShell implements sorcer.tools.shell.INetworkShell
	c220542:p -> c220533:p [dir=back,arrowtail=empty,style=dashed];
	// net.jini.discovery.DiscoveryListener
	c220847 [label=<<table title="net.jini.discovery.DiscoveryListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/discovery/DiscoveryListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DiscoveryListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + discovered(arg0 : DiscoveryEvent) </td></tr>
<tr><td align="left" balign="left"> + discarded(arg0 : DiscoveryEvent) </td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/discovery/DiscoveryListener.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

