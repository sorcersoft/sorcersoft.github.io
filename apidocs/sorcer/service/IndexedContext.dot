#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.context.SharedIndexedContext<T>
	c174031 [label=<<table title="sorcer.core.context.SharedIndexedContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/SharedIndexedContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SharedIndexedContext&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SharedIndexedContext(spaceName : String) </td></tr>
<tr><td align="left" balign="left"> + SharedIndexedContext(spaceName : String, elements : T[]) </td></tr>
<tr><td align="left" balign="left"> + pathIndex(path : String) : int </td></tr>
<tr><td align="left" balign="left"> + add(e : T) : boolean </td></tr>
<tr><td align="left" balign="left"> + getValue(i : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(i : int, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + add(index : int, element : T) </td></tr>
<tr><td align="left" balign="left"> + addAll(c : Collection&lt;T&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(index : int, c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + get(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + indexOf(o : Object) : int </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(o : Object) : int </td></tr>
<tr><td align="left" balign="left"> + listIterator() : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator(index : int) : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + removeAll(c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + set(index : int, element : T) : Object </td></tr>
<tr><td align="left" balign="left"> + subList(fromIndex : int, toIndex : int) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(a : Object[]) : Object[] </td></tr>
<tr><td align="left" balign="left"> + getElements() : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + readValue(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + takeValue(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + writeValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + aliasValue(path : String, alias : String) : Object </td></tr>
<tr><td align="left" balign="left"> + share() </td></tr>
<tr><td align="left" balign="left"> + unshare() </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/SharedIndexedContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.ArrayContext
	c174035 [label=<<table title="sorcer.core.context.ArrayContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/ArrayContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # maxIndex : int </td></tr>
<tr><td align="left" balign="left"> + IDEX : String </td></tr>
<tr><td align="left" balign="left"> + VAL : String </td></tr>
<tr><td align="left" balign="left"> + VAL_ : String </td></tr>
<tr><td align="left" balign="left"> + IN : String </td></tr>
<tr><td align="left" balign="left"> + IN_ : String </td></tr>
<tr><td align="left" balign="left"> + OUT : String </td></tr>
<tr><td align="left" balign="left"> + OUT_ : String </td></tr>
<tr><td align="left" balign="left"> + COMMENT : String </td></tr>
<tr><td align="left" balign="left"> + DESCRIPTION : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayContext() </td></tr>
<tr><td align="left" balign="left"> + ArrayContext(name : String) </td></tr>
<tr><td align="left" balign="left"> + ArrayContext(name : String, subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + v(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + v(index : int, value : Object) </td></tr>
<tr><td align="left" balign="left"> + iv(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + iv(index : int, value : Object) : String </td></tr>
<tr><td align="left" balign="left"> + ov(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + ov(index : int, value : Object) : String </td></tr>
<tr><td align="left" balign="left"> + c(comment : String) </td></tr>
<tr><td align="left" balign="left"> + c() : String </td></tr>
<tr><td align="left" balign="left"> + vc(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + vc(index : int, comment : String) </td></tr>
<tr><td align="left" balign="left"> + ivc(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ivc(index : int, comment : String) </td></tr>
<tr><td align="left" balign="left"> + ovc(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ovc(index : int, comment : String) </td></tr>
<tr><td align="left" balign="left"> + d(description : String) </td></tr>
<tr><td align="left" balign="left"> + d() : String </td></tr>
<tr><td align="left" balign="left"> + vd(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + vd(index : int, description : String) </td></tr>
<tr><td align="left" balign="left"> + ivd(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ivd(index : int, description : String) </td></tr>
<tr><td align="left" balign="left"> + ovd(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ovd(index : int, description : String) </td></tr>
<tr><td align="left" balign="left"> + getInValues() : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getSortedInPaths() : String[] </td></tr>
<tr><td align="left" balign="left"> + civp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + covp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + divp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + dovp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ivp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ovp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ii(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + oi(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + vp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + cp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + dp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + getMaxIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getPath(selector : String, index : int) : String </td></tr>
<tr><td align="left" balign="left"> + getIndex(path : String) : int </td></tr>
<tr><td align="left" balign="left"> + getValue(i : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(i : int, value : Object) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/ArrayContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.ListContext<T>
	c174040 [label=<<table title="sorcer.core.context.ListContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/ListContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ListContext&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ListContext() </td></tr>
<tr><td align="left" balign="left"> + ListContext(name : String, subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + ListContext(elements : T[]) </td></tr>
<tr><td align="left" balign="left"> + pathFor(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + pathIndex(path : String) : int </td></tr>
<tr><td align="left" balign="left"> + add(e : T) : boolean </td></tr>
<tr><td align="left" balign="left"> + getValue(i : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(i : int, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + add(index : int, element : T) </td></tr>
<tr><td align="left" balign="left"> + addAll(c : Collection&lt;T&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(index : int, c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAll(c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + get(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + indexOf(o : Object) : int </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(o : Object) : int </td></tr>
<tr><td align="left" balign="left"> + listIterator() : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator(index : int) : ListIterator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + removeAll(c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(c : Collection&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + set(index : int, element : T) : Object </td></tr>
<tr><td align="left" balign="left"> + subList(fromIndex : int, toIndex : int) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(a : Object[]) : Object[] </td></tr>
<tr><td align="left" balign="left"> + getElements() : List&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/ListContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.IndexedContext
	c174067 [label=<<table title="sorcer.service.IndexedContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./IndexedContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IndexedContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + putValue(i : int, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + getValue(i : int) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="./IndexedContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.context.SharedIndexedContext<T> implements sorcer.service.IndexedContext
	c174067:p -> c174031:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.ArrayContext implements sorcer.service.IndexedContext
	c174067:p -> c174035:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.ListContext<T> implements sorcer.service.IndexedContext
	c174067:p -> c174040:p [dir=back,arrowtail=empty,style=dashed];
}

