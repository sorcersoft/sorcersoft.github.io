#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.context.ServiceContext<T>
	c249313 [label=<<table title="sorcer.core.context.ServiceContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/ServiceContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServiceContext&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # subjectPath : String </td></tr>
<tr><td align="left" balign="left"> # subjectValue : Object </td></tr>
<tr><td align="left" balign="left"> # returnPath : ReturnPath&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # returnJobPath : ReturnPath&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # execPath : ExecPath </td></tr>
<tr><td align="left" balign="left"> # contextChanged : boolean </td></tr>
<tr><td align="left" balign="left"> # argsPath : String </td></tr>
<tr><td align="left" balign="left"> # parameterTypesPath : String </td></tr>
<tr><td align="left" balign="left"> # targetPath : String </td></tr>
<tr><td align="left" balign="left"> # contextId : Uuid </td></tr>
<tr><td align="left" balign="left"> # parentPath : String </td></tr>
<tr><td align="left" balign="left"> # parentId : Uuid </td></tr>
<tr><td align="left" balign="left"> # isShared : boolean </td></tr>
<tr><td align="left" balign="left"> # creationDate : String </td></tr>
<tr><td align="left" balign="left"> # lastUpdateDate : String </td></tr>
<tr><td align="left" balign="left"> # description : String </td></tr>
<tr><td align="left" balign="left"> # scopeCode : int </td></tr>
<tr><td align="left" balign="left"> # ownerId : String </td></tr>
<tr><td align="left" balign="left"> # subjectId : String </td></tr>
<tr><td align="left" balign="left"> # project : String </td></tr>
<tr><td align="left" balign="left"> # accessClass : String </td></tr>
<tr><td align="left" balign="left"> # exportControl : String </td></tr>
<tr><td align="left" balign="left"> # goodUntilDate : String </td></tr>
<tr><td align="left" balign="left"> # domainId : String </td></tr>
<tr><td align="left" balign="left"> # subdomainId : String </td></tr>
<tr><td align="left" balign="left"> # domainName : String </td></tr>
<tr><td align="left" balign="left"> # subdomainName : String </td></tr>
<tr><td align="left" balign="left"> # isRevaluable : boolean </td></tr>
<tr><td align="left" balign="left"> # dbUrl : String </td></tr>
<tr><td align="left" balign="left"> # prefix : String </td></tr>
<tr><td align="left" balign="left"> # version : float </td></tr>
<tr><td align="left" balign="left"> # delPathIds : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # metacontext : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # blockScope : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # exertion : Exertion </td></tr>
<tr><td align="left" balign="left"> # currentSelector : String </td></tr>
<tr><td align="left" balign="left"> # currentPrefix : String </td></tr>
<tr><td align="left" balign="left"> + isPersistantTaskAssociated : boolean </td></tr>
<tr><td align="left" balign="left"> # principal : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + cntxtAccessor : ContextAccessor </td></tr>
<tr><td align="left" balign="left"> + EMPTY_LEAF : String </td></tr>
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceContext() </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(name : String) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(name : String, subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(cntxt : Context&lt;T&gt;) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(object : Object) </td></tr>
<tr><td align="left" balign="left"> + getUserName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setId(contextID : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getParentPath() : String </td></tr>
<tr><td align="left" balign="left"> + setParentPath(path : String) </td></tr>
<tr><td align="left" balign="left"> + getParentID() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setParentID(id : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getCreationDate() : String </td></tr>
<tr><td align="left" balign="left"> + setCreationDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getLastUpdateDate() : String </td></tr>
<tr><td align="left" balign="left"> + setLastUpdateDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + setDescription(text : String) </td></tr>
<tr><td align="left" balign="left"> + getScope() : int </td></tr>
<tr><td align="left" balign="left"> + setScopeCode(scope : int) </td></tr>
<tr><td align="left" balign="left"> + getOwnerID() : String </td></tr>
<tr><td align="left" balign="left"> + setOwnerID(id : String) </td></tr>
<tr><td align="left" balign="left"> + setSubjectID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubjectID() : String </td></tr>
<tr><td align="left" balign="left"> + getExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + setProject(projectName : String) </td></tr>
<tr><td align="left" balign="left"> + getProject() : String </td></tr>
<tr><td align="left" balign="left"> + setAccessClass(acessClass : String) </td></tr>
<tr><td align="left" balign="left"> + getAccessClass() : String </td></tr>
<tr><td align="left" balign="left"> + setExportControl(exportControl : String) </td></tr>
<tr><td align="left" balign="left"> + getExportControl() : String </td></tr>
<tr><td align="left" balign="left"> + getGoodUntilDate() : String </td></tr>
<tr><td align="left" balign="left"> + setGoodUntilDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getDomainID() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainID() : String </td></tr>
<tr><td align="left" balign="left"> + setSubdomainID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getDomainName() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainName() : String </td></tr>
<tr><td align="left" balign="left"> + setSubdomainName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + setPrincipal(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getDelPathIds() : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getVersion() : float </td></tr>
<tr><td align="left" balign="left"> + setVersion(version : float) </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue0(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + inPaths() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + outPaths() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getWeakValue(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + getValueEndsWith(name : String) : T </td></tr>
<tr><td align="left" balign="left"> + getValueStartsWith(name : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object, association : String) : Object </td></tr>
<tr><td align="left" balign="left"> + map(fromPath : String, toPath : String, toContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + isShared() : boolean </td></tr>
<tr><td align="left" balign="left"> + removeLink(path : String) </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, cntxt : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, cntxt : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, cntxt : Context&lt;&gt;) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, id : String, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, id : String, version : float, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getLink(path : String) : Link </td></tr>
<tr><td align="left" balign="left"> + getContextMapping(path : String) : Object[] </td></tr>
<tr><td align="left" balign="left"> + localAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # getDataAttributeMap(attributeName : String) : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setAttribute(descriptor : String) </td></tr>
<tr><td align="left" balign="left"> + setComponentAttribute(attribute : String) </td></tr>
<tr><td align="left" balign="left"> + setCompositeAttribute(descriptor : String) </td></tr>
<tr><td align="left" balign="left"> + isLocalAttribute(attribute : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalSingletonAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalMetaattribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSingletonAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isMetaattribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + getSingletonAttributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + getMetaattributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + mark(path : String, association : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addComponentAssociation(path : String, attribute : String, attributeValue : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addCompositeAssociation(path : String, metaattribute : String, metaattributeValue : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markedPaths(association : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + removeAttributeValue(path : String, attributeValue : String) </td></tr>
<tr><td align="left" balign="left"> + getLocalMetapath(metaattribute : String) : String </td></tr>
<tr><td align="left" balign="left"> + isValid(signature : Signature) : boolean </td></tr>
<tr><td align="left" balign="left"> + paths(regex : String) : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + contextPaths() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + contextValues() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + localLinkPaths() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getInPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getPars() : ParList </td></tr>
<tr><td align="left" balign="left"> + getOutPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getInValues() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutValues() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + linkPaths() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + links() : Enumeration&lt;Link&gt; </td></tr>
<tr><td align="left" balign="left"> + localLinks() : Enumeration&lt;Link&gt; </td></tr>
<tr><td align="left" balign="left"> + getSubcontext() : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getContext(path : String) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getTaskContext(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendNewEntries(context : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + append(context : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendContext(context : Context&lt;T&gt;) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + appendContext(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendContext(cntxt : Context&lt;&gt;, path : String, prefixContextName : boolean) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + removePath(path : String) </td></tr>
<tr><td align="left" balign="left"> + toString(cr : String, sb : StringBuilder, withMetacontext : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + toStringComplete(cr : String, sb : StringBuffer) : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toString(isHTML : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + toString(isHTML : boolean, withMetacontext : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + getMetacontext() : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isExportControlled() : boolean </td></tr>
<tr><td align="left" balign="left"> + connect(outPath : String, inPath : String, inContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + pipe(inPath : String, outPath : String, outContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + putInValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putOutValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putErrValue(path : String, value : T) : Object </td></tr>
<tr><td align="left" balign="left"> + getArgs() : Object </td></tr>
<tr><td align="left" balign="left"> + setArgs(args : Object[]) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getArgsPath() : String </td></tr>
<tr><td align="left" balign="left"> + setArgsPath(targetPath : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameterTypes() : Class&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> + setParameterTypes(types : Class&lt;&gt;[]) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameterTypesPath() : String </td></tr>
<tr><td align="left" balign="left"> + setParameterTypesPath(targetPath : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getTarget() : Object </td></tr>
<tr><td align="left" balign="left"> + setTarget(target : Object) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getTargetPath() : String </td></tr>
<tr><td align="left" balign="left"> + setTargetPath(targetPath : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getReturnPath() : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath() : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(path : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(returnPath : ReturnPath&lt;&gt;) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setExecPath(execPath : ExecPath) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getExecPath() : ExecPath </td></tr>
<tr><td align="left" balign="left"> + setReturnValue(value : Object) </td></tr>
<tr><td align="left" balign="left"> + getReturnJobPath() : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobPath() : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobPath(path : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobPath(returnPath : ReturnPath&lt;&gt;) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobValue(value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putInoutValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putInValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + putOutValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + putInoutValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + setIn(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setOut(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setInout(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isExportControlled(b : boolean) </td></tr>
<tr><td align="left" balign="left"> + removePathWithoutDeleted(path : String) </td></tr>
<tr><td align="left" balign="left"> + getTitle() : String </td></tr>
<tr><td align="left" balign="left"> + isLinked() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLinkedContext(path : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLinkedPath(path : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLinkedContext(link : Link) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # updateLinkedContext(link : Link) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPath(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, id : String, version : float, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + localSimpleAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + simpleAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + localCompositeAttributes() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + compositeAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes(path : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getNodeType(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + metaassociations(path : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + containsPath(path : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAssociation(association : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getPathsWithAssociation(association : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getSubjectPath() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectValue() : Object </td></tr>
<tr><td align="left" balign="left"> + setSubject(path : String, value : Object) </td></tr>
<tr><td align="left" balign="left"> + updateValue(value : T) </td></tr>
<tr><td align="left" balign="left"> + reportException(t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + reportException(message : String, t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + appendTrace(footprint : String) </td></tr>
<tr><td align="left" balign="left"> + getProvider() : Provider </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getMarkedValues(association : String) : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + setMetacontext(mc : Hashtable&lt;String, Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + get(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + checkpoint() </td></tr>
<tr><td align="left" balign="left"> + changed(aspect : Exec.State) </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + setOutValues(context : Context&lt;T&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPar(path : String) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getCurrentSelector() : String </td></tr>
<tr><td align="left" balign="left"> + setCurrentSelector(currentSelector : String) </td></tr>
<tr><td align="left" balign="left"> + getCurrentPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + setCurrentPrefix(currentPrefix : String) </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + getData() : Object </td></tr>
<tr><td align="left" balign="left"> + getPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + setPrefix(prefix : String) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + link(context : Context&lt;&gt;, atPath : String, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + addValue(value : Identifiable) : Object </td></tr>
<tr><td align="left" balign="left"> + putDbValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putDbValue(path : String, value : Object, datastoreUrl : URL) : Object </td></tr>
<tr><td align="left" balign="left"> + getURL(path : String) : URL </td></tr>
<tr><td align="left" balign="left"> + getDbUrl() : String </td></tr>
<tr><td align="left" balign="left"> + setDbUrl(dbUrl : String) </td></tr>
<tr><td align="left" balign="left"> + getContext(contextTemplate : Context&lt;T&gt;) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + addPar(p : Par&lt;&gt;) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendPar(p : Par&lt;&gt;) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addPar(path : String, value : Object) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isRevaluable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setRevaluable(isRevaluable : boolean) </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getBlockScope() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setBlockScope(blockScope : Context&lt;&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/ServiceContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.PositionalContext<T>
	c249316 [label=<<table title="sorcer.core.context.PositionalContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/PositionalContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PositionalContext&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PositionalContext() </td></tr>
<tr><td align="left" balign="left"> + PositionalContext(name : String) </td></tr>
<tr><td align="left" balign="left"> + PositionalContext(name : String, subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + getInValueAt(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getInoutValueAt(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getOutValueAt(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getValueAt(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getValuesAt(index : int) : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + putInValueAt(path : String, value : Object, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putInoutValueAt(path : String, value : Object, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putOutValueAt(path : String, value : Object, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putValueAt(path : String, value : Object, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
<tr><td align="left" balign="left"> + getTally() : int </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/PositionalContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.model.par.ParModel<T>
	c249332 [label=<<table title="sorcer.core.context.model.par.ParModel" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/model/par/ParModel.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ParModel&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ParModel() </td></tr>
<tr><td align="left" balign="left"> + ParModel(name : String) </td></tr>
<tr><td align="left" balign="left"> + ParModel(objects : Identifiable[]) </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
<tr><td align="left" balign="left"> + getPar(name : String) : Par&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + add(objects : List&lt;Identifiable&gt;) : ParModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + append(objects : Identifiable[]) : ParModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + add(objects : Identifiable[]) : ParModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + isContextChanged() : boolean </td></tr>
<tr><td align="left" balign="left"> + setContextChanged(contextChanged : boolean) </td></tr>
<tr><td align="left" balign="left"> + getVar(name : String) : Variability&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getVarPaths(var : Variability&lt;&gt;) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getMarkedVariables(sc : Context&lt;&gt;, association : String) : Variability&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> + markVar(cntxt : Context&lt;&gt;, path : String, var : Variability&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendNew(context : Context&lt;T&gt;) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/model/par/ParModel.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.model.par.Par<T>
	c249337 [label=<<table title="sorcer.core.context.model.par.Par" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/model/par/Par.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Par&lt;T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # value : T </td></tr>
<tr><td align="left" balign="left"> # scope : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # dbURL : URL </td></tr>
<tr><td align="left" balign="left"> # mappable : Mappable&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Par(parname : String) </td></tr>
<tr><td align="left" balign="left"> + Par(identifiable : Identifiable) </td></tr>
<tr><td align="left" balign="left"> + Par(parname : String, argument : T) </td></tr>
<tr><td align="left" balign="left"> + Par(parname : String, argument : Object, scope : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + Par(name : String, path : String, map : Mappable&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setClosure(scope : Context&lt;&gt;) </font></td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setValue(value : Object) </font></td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getValue(entries : Arg[]) : T </font></td></tr>
<tr><td align="left" balign="left"> + substitute(parameters : Arg[]) : Evaluation&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getScope() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setScope(scope : Context&lt;&gt;) </font></td></tr>
<tr><td align="left" balign="left"> + compareTo(o : T) : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getPerturbedValue(varName : String) : T </td></tr>
<tr><td align="left" balign="left"> + getPerturbation() : double </td></tr>
<tr><td align="left" balign="left"> + getType() : Variability.Type </td></tr>
<tr><td align="left" balign="left"> + getDescription() : ApplicationDescription </td></tr>
<tr><td align="left" balign="left"> + getValueType() : Class&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getArgs() : ArgSet </td></tr>
<tr><td align="left" balign="left"> + getArg(varName : String) : T </td></tr>
<tr><td align="left" balign="left"> + getContextable() : Mappable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isValueCurrent() : boolean </td></tr>
<tr><td align="left" balign="left"> + valueChanged(obj : Object) </td></tr>
<tr><td align="left" balign="left"> + valueChanged() </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : Principal </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getVariability(name : String) : Variability&lt;T&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getDbURL() : URL </font></td></tr>
<tr><td align="left" balign="left"> + getURL() : URL </td></tr>
<tr><td align="left" balign="left"> + setDbURL(dbURL : URL) </td></tr>
<tr><td align="left" balign="left"> + isPersistent() : boolean </td></tr>
<tr><td align="left" balign="left"> + setPersistent(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + getMappable() : Mappable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setMappable(mappable : Mappable&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + isMappable() : boolean </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
<tr><td align="left" balign="left"> + addArgs(set : ArgSet) </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(object : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + setScope(scope : Object) </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/model/par/Par.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.invoker.Invoker<T>
	c249366 [label=<<table title="sorcer.core.invoker.Invoker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/invoker/Invoker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Invoker&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # defaultName : String </td></tr>
<tr><td align="left" balign="left"> # count : int </td></tr>
<tr><td align="left" balign="left"> # id : Uuid </td></tr>
<tr><td align="left" balign="left"> # value : T </td></tr>
<tr><td align="left" balign="left"> # valueIsValid : boolean </td></tr>
<tr><td align="left" balign="left"> # invokeContext : ParModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # pars : ArgSet </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Invoker() </td></tr>
<tr><td align="left" balign="left"> + Invoker(name : String) </td></tr>
<tr><td align="left" balign="left"> + Invoker(context : ParModel&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + Invoker(context : ParModel&lt;&gt;, evaluator : Evaluator&lt;&gt;, pars : Par&lt;&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + Invoker(context : ParModel&lt;&gt;, evaluator : Evaluator&lt;&gt;, pars : ArgSet) </td></tr>
<tr><td align="left" balign="left"> + Invoker(evaluator : Evaluator&lt;&gt;, pars : ArgSet) </td></tr>
<tr><td align="left" balign="left"> + Invoker(evaluator : Evaluator&lt;&gt;, pars : Par&lt;&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + getPars() : ArgSet </td></tr>
<tr><td align="left" balign="left"> + setPars(pars : ArgSet) : Invoker&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setPars(pars : Arg[]) : Invoker&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + valueValid(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + valueValid() : boolean </td></tr>
<tr><td align="left" balign="left"> + valueChanged() </td></tr>
<tr><td align="left" balign="left"> + update(observable : Observable, obj : Object) </td></tr>
<tr><td align="left" balign="left"> + addPar(par : Object) : Invoker&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addPars(parSet : ArgSet) </td></tr>
<tr><td align="left" balign="left"> + addPars(parList : List&lt;Par&lt;&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + addPars(pars : Par&lt;&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + addPars(args : ArgList) </td></tr>
<tr><td align="left" balign="left"> + addPars(parLists : ArgList[]) </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : Evaluation&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getScope() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setScope(scope : Object) </td></tr>
<tr><td align="left" balign="left"> + getEvaluator() : Evaluator&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setEvaluator(evaluator : Evaluator&lt;&gt;) : Invoker&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + clearPars() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getId() : Object </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + evaluate(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + addArgs(set : ArgSet) </td></tr>
<tr><td align="left" balign="left"> + getArgs() : ArgSet </td></tr>
		</table></td></tr>
		</table>>, URL="../core/invoker/Invoker.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.invoker.MethodInvoking<T>
	c249369 [label=<<table title="sorcer.core.invoker.MethodInvoking" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/invoker/MethodInvoking.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MethodInvoking&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setParameterTypes(types : Class&lt;?&gt;[]) </td></tr>
<tr><td align="left" balign="left"> + setParameters(args : Object[]) </td></tr>
<tr><td align="left" balign="left"> + getParameters() : Object[] </td></tr>
<tr><td align="left" balign="left"> + evaluate(entries : Arg[]) : T </td></tr>
		</table></td></tr>
		</table>>, URL="../core/invoker/MethodInvoking.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.invoker.ScriptInvoking<T>
	c249370 [label=<<table title="sorcer.core.invoker.ScriptInvoking" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/invoker/ScriptInvoking.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ScriptInvoking&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../core/invoker/ScriptInvoking.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.invoker.ContextInvoking<T>
	c249371 [label=<<table title="sorcer.core.invoker.ContextInvoking" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/invoker/ContextInvoking.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ContextInvoking&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../core/invoker/ContextInvoking.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.invoker.CmdInvoking<T>
	c249372 [label=<<table title="sorcer.core.invoker.CmdInvoking" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/invoker/CmdInvoking.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CmdInvoking&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../core/invoker/CmdInvoking.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.invoker.ExertionInvoking<T>
	c249374 [label=<<table title="sorcer.core.invoker.ExertionInvoking" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/invoker/ExertionInvoking.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ExertionInvoking&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../core/invoker/ExertionInvoking.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Context<T>
	c249408 [label=<<table title="sorcer.service.Context" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Context.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Context&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PATH_PAR : String </td></tr>
<tr><td align="left" balign="left"> + CONTEXT_PARAMETER : String </td></tr>
<tr><td align="left" balign="left"> + PIPE : String </td></tr>
<tr><td align="left" balign="left"> + DIRECTION : String </td></tr>
<tr><td align="left" balign="left"> + OPP : String </td></tr>
<tr><td align="left" balign="left"> + INDEX : String </td></tr>
<tr><td align="left" balign="left"> + PATH : String </td></tr>
<tr><td align="left" balign="left"> + CONTEXT_ID : String </td></tr>
<tr><td align="left" balign="left"> + DATA_NODE_TYPE : String </td></tr>
<tr><td align="left" balign="left"> + VAR_NODE_TYPE : String </td></tr>
<tr><td align="left" balign="left"> + APPLICATION : String </td></tr>
<tr><td align="left" balign="left"> + FORMAT : String </td></tr>
<tr><td align="left" balign="left"> + MODIFIER : String </td></tr>
<tr><td align="left" balign="left"> + ACTION : String </td></tr>
<tr><td align="left" balign="left"> + PROVIDER_NAME : String </td></tr>
<tr><td align="left" balign="left"> + INTERFACE : String </td></tr>
<tr><td align="left" balign="left"> + SELECTOR : String </td></tr>
<tr><td align="left" balign="left"> + VAR : String </td></tr>
<tr><td align="left" balign="left"> + VT : String </td></tr>
<tr><td align="left" balign="left"> + DA_IN : String </td></tr>
<tr><td align="left" balign="left"> + DA_OUT : String </td></tr>
<tr><td align="left" balign="left"> + DA_INOUT : String </td></tr>
<tr><td align="left" balign="left"> + DA_ININ : String </td></tr>
<tr><td align="left" balign="left"> + DA_OUTOUT : String </td></tr>
<tr><td align="left" balign="left"> + SERVICE_CONTEXT : String </td></tr>
<tr><td align="left" balign="left"> + PAR_MODEL : String </td></tr>
<tr><td align="left" balign="left"> + EMPTY_LEAF : String </td></tr>
<tr><td align="left" balign="left"> + JOB : String </td></tr>
<tr><td align="left" balign="left"> + JOB_ : String </td></tr>
<tr><td align="left" balign="left"> + TASK : String </td></tr>
<tr><td align="left" balign="left"> + TASK_ : String </td></tr>
<tr><td align="left" balign="left"> + ID : String </td></tr>
<tr><td align="left" balign="left"> + JOB_COMMENTS : String </td></tr>
<tr><td align="left" balign="left"> + JOB_FEEDBACK : String </td></tr>
<tr><td align="left" balign="left"> + DSD_PATH : String </td></tr>
<tr><td align="left" balign="left"> + none : Object </td></tr>
<tr><td align="left" balign="left"> + PARAMETER_TYPES : String </td></tr>
<tr><td align="left" balign="left"> + PARAMETER_VALUES : String </td></tr>
<tr><td align="left" balign="left"> + TARGET : String </td></tr>
<tr><td align="left" balign="left"> + RETURN : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setId(contextId : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getWeakValue(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + getParentPath() : String </td></tr>
<tr><td align="left" balign="left"> + setParentPath(path : String) </td></tr>
<tr><td align="left" balign="left"> + getParentID() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setParentID(parentId : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getCreationDate() : String </td></tr>
<tr><td align="left" balign="left"> + setCreationDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getLastUpdateDate() : String </td></tr>
<tr><td align="left" balign="left"> + setLastUpdateDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + setDescription(date : String) </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + getScope() : int </td></tr>
<tr><td align="left" balign="left"> + setScopeCode(scope : int) </td></tr>
<tr><td align="left" balign="left"> + getOwnerID() : String </td></tr>
<tr><td align="left" balign="left"> + setOwnerID(id : String) </td></tr>
<tr><td align="left" balign="left"> + setSubjectID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubjectID() : String </td></tr>
<tr><td align="left" balign="left"> + setProject(projectName : String) </td></tr>
<tr><td align="left" balign="left"> + getProject() : String </td></tr>
<tr><td align="left" balign="left"> + setAccessClass(accessClass : String) </td></tr>
<tr><td align="left" balign="left"> + getAccessClass() : String </td></tr>
<tr><td align="left" balign="left"> + setExportControl(exportControl : String) </td></tr>
<tr><td align="left" balign="left"> + getExportControl() : String </td></tr>
<tr><td align="left" balign="left"> + getGoodUntilDate() : String </td></tr>
<tr><td align="left" balign="left"> + setGoodUntilDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getDomainID() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainID() : String </td></tr>
<tr><td align="left" balign="left"> + setSubdomainID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getDomainName() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainName() : String </td></tr>
<tr><td align="left" balign="left"> + setSubdomainName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + setPrincipal(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getVersion() : float </td></tr>
<tr><td align="left" balign="left"> + setVersion(version : float) </td></tr>
<tr><td align="left" balign="left"> + containsPath(path : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMetacontext() : Hashtable&lt;String, Map&lt;String, String&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setMetacontext(metacontext : Hashtable&lt;String, Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + getProvider() : Provider </td></tr>
<tr><td align="left" balign="left"> + getReturnPath() : ReturnPath&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getExecPath() : ExecPath </td></tr>
<tr><td align="left" balign="left"> + setExertion(task : Exertion) </td></tr>
<tr><td align="left" balign="left"> + getSubjectPath() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectValue() : Object </td></tr>
<tr><td align="left" balign="left"> + setSubject(path : String, value : Object) </td></tr>
<tr><td align="left" balign="left"> + reportException(t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + reportException(message : String, t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + appendTrace(footprint : String) </td></tr>
<tr><td align="left" balign="left"> + append(context : Context&lt;T&gt;) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + get(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + setReturnValue(value : Object) </td></tr>
<tr><td align="left" balign="left"> + putDbValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putDbValue(path : String, value : Object, datastoreUrl : URL) : Object </td></tr>
<tr><td align="left" balign="left"> + getURL(path : String) : URL </td></tr>
<tr><td align="left" balign="left"> + addValue(value : Identifiable) : Object </td></tr>
<tr><td align="left" balign="left"> + addPar(path : String, value : Object) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPar(path : String) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object, association : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, cntxt : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, cntxt : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, id : String, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, lnkedCntxtID : String, version : float, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + remove(path : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + connect(outPath : String, inPath : String, inContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + pipe(inPath : String, outPath : String, outContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + map(fromPath : String, toPath : String, toContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + removeLink(path : String) </td></tr>
<tr><td align="left" balign="left"> + getContextMapping(path : String) : Object[] </td></tr>
<tr><td align="left" balign="left"> + checkpoint() </td></tr>
<tr><td align="left" balign="left"> + mark(path : String, tuple : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markedPaths(association : String) : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getMarkedValues(association : String) : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + setAttribute(attribute : String) </td></tr>
<tr><td align="left" balign="left"> + isLocalAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalSingletonAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalMetaattribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSingletonAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isMetaattribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + getSingletonAttributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + getMetaattributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + removeAttributeValue(path : String, attributeValue : String) </td></tr>
<tr><td align="left" balign="left"> + getLocalMetapath(metaattributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + isValid(method : Signature) : boolean </td></tr>
<tr><td align="left" balign="left"> + contextPaths() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + paths(regex : String) : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + contextValues() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + localLinkPaths() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + linkPaths() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + links() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + localLinks() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + link(context : Context&lt;&gt;, atPath : String, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getLink(path : String) : Link </td></tr>
<tr><td align="left" balign="left"> + putInValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putOutValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putInoutValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putInValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + putOutValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + putInoutValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + setIn(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setOut(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setInout(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + removePath(path : String) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toString(isHTML : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + isExportControlled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isExportControlled(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + getPath(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + localSimpleAttributes() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + simpleAttributes() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + metaassociations(path : String) : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + localAttributes() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + localCompositeAttributes() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + compositeAttributes() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes(path : String) : Enumeration&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getData() : Object </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + getUserName() : String </td></tr>
<tr><td align="left" balign="left"> + getLinkedContext(link : Link) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(returnPath : ReturnPath&lt;&gt;) : Context&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./Context.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Exertion
	c249415 [label=<<table title="sorcer.service.Exertion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Exertion.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Exertion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + THIN : int </td></tr>
<tr><td align="left" balign="left"> + STANDARD : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getStatus() : int </td></tr>
<tr><td align="left" balign="left"> + getId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + getDeploymentId() : String </td></tr>
<tr><td align="left" balign="left"> + addExertion(component : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getDataContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + getContext(componentExertionName : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getTrace() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getControlContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getPar(path : String) : Arg </td></tr>
<tr><td align="left" balign="left"> + getProcessSignature() : Signature </td></tr>
<tr><td align="left" balign="left"> + getFlowType() : Strategy.Flow </td></tr>
<tr><td align="left" balign="left"> + getAccessType() : Strategy.Access </td></tr>
<tr><td align="left" balign="left"> + exert(txn : Transaction, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + exert(entries : Arg[]) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllNetSignatures() : List&lt;NetSignature&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllNetTaskSignatures() : List&lt;NetSignature&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getExertion(name : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isProvisionable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isWaitable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTask() : boolean </td></tr>
<tr><td align="left" balign="left"> + isBlock() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCmd() : boolean </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
<tr><td align="left" balign="left"> + setProvisionable(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : Exertion </td></tr>
<tr><td align="left" balign="left"> + isTree() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConditional() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCompound() : boolean </td></tr>
<tr><td align="left" balign="left"> + getIndex() : int </td></tr>
<tr><td align="left" balign="left"> + setIndex(i : int) </td></tr>
<tr><td align="left" balign="left"> + getMonitorSession() : MonitoringSession </td></tr>
		</table></td></tr>
		</table>>, URL="./Exertion.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Invocation<T>
	c249435 [label=<<table title="sorcer.service.Invocation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Invocation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Invocation&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
		</table></td></tr>
		</table>>, URL="./Invocation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.NetBlock
	c249600 [label=<<table title="sorcer.core.exertion.NetBlock" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/exertion/NetBlock.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NetBlock </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NetBlock() </td></tr>
<tr><td align="left" balign="left"> + NetBlock(name : String) </td></tr>
<tr><td align="left" balign="left"> + NetBlock(name : String, context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + NetBlock(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + NetBlock(name : String, principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getTemplate() : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + doBlock(txn : Transaction) : Block </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../core/exertion/NetBlock.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.NetTask
	c249603 [label=<<table title="sorcer.core.exertion.NetTask" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/exertion/NetTask.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NetTask </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NetTask() </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String) </td></tr>
<tr><td align="left" balign="left"> + NetTask(jobId : Uuid, jobState : int) </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String, description : String) </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String, signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String, description : String, signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String, signature : Signature, context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + NetTask(signature : Signature, context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String, description : String, signature : Signature, context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + NetTask(name : String, signatures : Signature[], context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + setService(provider : Service) </td></tr>
<tr><td align="left" balign="left"> + getService() : Service </td></tr>
<tr><td align="left" balign="left"> + doTask(txn : Transaction) : Task </td></tr>
<tr><td align="left" balign="left"> + getTemplate() : NetTask </td></tr>
<tr><td align="left" balign="left"> + getTemplate(provider : String) : NetTask </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../core/exertion/NetTask.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.NetJob
	c249610 [label=<<table title="sorcer.core.exertion.NetJob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/exertion/NetJob.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NetJob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NetJob() </td></tr>
<tr><td align="left" balign="left"> + NetJob(name : String) </td></tr>
<tr><td align="left" balign="left"> + NetJob(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + NetJob(name : String, principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getTemplate() : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + doJob(txn : Transaction) : Job </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../core/exertion/NetJob.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.context.ServiceContext<T> implements sorcer.service.Context<T>
	c249408:p -> c249313:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.ServiceContext<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249313:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.PositionalContext<T> extends sorcer.core.context.ServiceContext<T>
	c249313:p -> c249316:p [dir=back,arrowtail=empty];
	//sorcer.core.context.PositionalContext<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249316:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.ParModel<T> extends sorcer.core.context.ServiceContext<T>
	c249313:p -> c249332:p [dir=back,arrowtail=empty];
	//sorcer.core.context.model.par.ParModel<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249332:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249337:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.invoker.Invoker<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249366:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.invoker.MethodInvoking<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249369:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.invoker.ScriptInvoking<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249370:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.invoker.ContextInvoking<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249371:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.invoker.CmdInvoking<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249372:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.invoker.ExertionInvoking<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249374:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.Context<T> implements sorcer.service.Invocation<T>
	c249435:p -> c249408:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.Exertion implements sorcer.service.Invocation<T>
	c249435:p -> c249415:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.exertion.NetBlock implements sorcer.service.Invocation<T>
	c249435:p -> c249600:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.exertion.NetTask implements sorcer.service.Invocation<T>
	c249435:p -> c249603:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.exertion.NetJob implements sorcer.service.Invocation<T>
	c249435:p -> c249610:p [dir=back,arrowtail=empty,style=dashed];
}

