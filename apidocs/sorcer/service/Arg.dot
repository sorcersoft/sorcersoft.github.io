#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.util.Deployment
	c60943 [label=<<table title="sorcer.util.Deployment" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../util/Deployment.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Deployment </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Deployment(configs : String[]) </td></tr>
<tr><td align="left" balign="left"> + getConfigs() : String[] </td></tr>
<tr><td align="left" balign="left"> + setConfigs(configs : String[]) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="../util/Deployment.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Signature
	c61082 [label=<<table title="sorcer.service.Signature" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Signature.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Signature </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SRV : Signature.Type </td></tr>
<tr><td align="left" balign="left"> + PRE : Signature.Type </td></tr>
<tr><td align="left" balign="left"> + POST : Signature.Type </td></tr>
<tr><td align="left" balign="left"> + APD : Signature.Type </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getSelector() : String </td></tr>
<tr><td align="left" balign="left"> + getPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + getProviderName() : String </td></tr>
<tr><td align="left" balign="left"> + setProviderName(providerName : String) </td></tr>
<tr><td align="left" balign="left"> + getServiceType() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(path : ReturnPath&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(path : String) </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(path : String, direction : Direction) </td></tr>
<tr><td align="left" balign="left"> + getReturnPath() : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setServiceType(serviceType : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getType() : Signature.Type </td></tr>
<tr><td align="left" balign="left"> + setType(type : Signature.Type) : Signature </td></tr>
<tr><td align="left" balign="left"> + getCodebase() : String </td></tr>
<tr><td align="left" balign="left"> + setCodebase(urls : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./Signature.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.ReturnPath<T>
	c61099 [label=<<table title="sorcer.service.ReturnPath" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ReturnPath.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ReturnPath&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + path : String </td></tr>
<tr><td align="left" balign="left"> + direction : Direction </td></tr>
<tr><td align="left" balign="left"> + argPaths : String[] </td></tr>
<tr><td align="left" balign="left"> + type : Class&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ReturnPath() </td></tr>
<tr><td align="left" balign="left"> + ReturnPath(path : String, argPaths : String[]) </td></tr>
<tr><td align="left" balign="left"> + ReturnPath(path : String, direction : Direction) </td></tr>
<tr><td align="left" balign="left"> + ReturnPath(path : String, direction : Direction, argPaths : String[]) </td></tr>
<tr><td align="left" balign="left"> + ReturnPath(path : String, direction : Direction, returnType : Class&lt;T&gt;, argPaths : String[]) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + equals(o : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
		</table></td></tr>
		</table>>, URL="./ReturnPath.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Arg
	c61109 [label=<<table title="sorcer.service.Arg" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Arg.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Arg </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./Arg.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Strategy
	c61114 [label=<<table title="sorcer.service.Strategy" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Strategy.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Strategy </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + isWaitable() : boolean </td></tr>
<tr><td align="left" balign="left"> + getFlowType() : Strategy.Flow </td></tr>
<tr><td align="left" balign="left"> + getAccessType() : Strategy.Access </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getTrace() : List&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./Strategy.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.co.tuple.StrategyEntry
	c61126 [label=<<table title="sorcer.co.tuple.StrategyEntry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../co/tuple/StrategyEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StrategyEntry </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StrategyEntry(path : String, strategy : Strategy) </td></tr>
<tr><td align="left" balign="left"> + strategy() : Strategy </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="../co/tuple/StrategyEntry.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.co.tuple.OutEntry<T>
	c61127 [label=<<table title="sorcer.co.tuple.OutEntry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../co/tuple/OutEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OutEntry&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OutEntry(path : String, value : T, index : int) </td></tr>
<tr><td align="left" balign="left"> + OutEntry(path : String, value : T, isPersistant : boolean, index : int) </td></tr>
<tr><td align="left" balign="left"> + OutEntry(path : String, value : T, isPersistant : boolean, url : URL, index : int) </td></tr>
		</table></td></tr>
		</table>>, URL="../co/tuple/OutEntry.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.co.tuple.Entry<T>
	c61130 [label=<<table title="sorcer.co.tuple.Entry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../co/tuple/Entry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Entry&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + index : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Entry() </td></tr>
<tr><td align="left" balign="left"> + Entry(path : String) </td></tr>
<tr><td align="left" balign="left"> + Entry(path : String, value : T) </td></tr>
<tr><td align="left" balign="left"> + Entry(path : String, value : T, index : int) </td></tr>
<tr><td align="left" balign="left"> + index() : int </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : Evaluation&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="../co/tuple/Entry.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.co.tuple.InoutEntry<T>
	c61131 [label=<<table title="sorcer.co.tuple.InoutEntry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../co/tuple/InoutEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InoutEntry&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InoutEntry(path : String, value : T, index : int) </td></tr>
		</table></td></tr>
		</table>>, URL="../co/tuple/InoutEntry.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.co.tuple.InEntry<T>
	c61134 [label=<<table title="sorcer.co.tuple.InEntry" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../co/tuple/InEntry.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> InEntry&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + InEntry(path : String, value : T, index : int) </td></tr>
<tr><td align="left" balign="left"> + InEntry(path : String, value : T, isPersistant : boolean, index : int) </td></tr>
<tr><td align="left" balign="left"> + InEntry(path : String, value : T, isPersistant : boolean, url : URL, index : int) </td></tr>
		</table></td></tr>
		</table>>, URL="../co/tuple/InEntry.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.co.tuple.Tuple2<T1, T2>
	c61137 [label=<<table title="sorcer.co.tuple.Tuple2" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../co/tuple/Tuple2.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Tuple2&lt;T1, T2&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + _1 : T1 </td></tr>
<tr><td align="left" balign="left"> + _2 : T2 </td></tr>
<tr><td align="left" balign="left"> + isPersistant : boolean </td></tr>
<tr><td align="left" balign="left"> + datastoreURL : URL </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Tuple2() </td></tr>
<tr><td align="left" balign="left"> + Tuple2(x1 : T1, x2 : T2) </td></tr>
<tr><td align="left" balign="left"> + key() : T1 </td></tr>
<tr><td align="left" balign="left"> + path() : String </td></tr>
<tr><td align="left" balign="left"> + value() : T2 </td></tr>
<tr><td align="left" balign="left"> + strategy() : Strategy </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + equals(object : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + getId() : Object </td></tr>
		</table></td></tr>
		</table>>, URL="../co/tuple/Tuple2.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.model.par.Par<T>
	c61214 [label=<<table title="sorcer.core.context.model.par.Par" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/context/model/par/Par.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Par&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # value : T </td></tr>
<tr><td align="left" balign="left"> # scope : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # mappable : Mappable&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Par(parname : String) </td></tr>
<tr><td align="left" balign="left"> + Par(parname : String, argument : T) </td></tr>
<tr><td align="left" balign="left"> + Par(parname : String, argument : Object, scope : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + Par(name : String, path : String, map : Mappable&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setValue(value : Object) </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + substitute(parameters : Arg[]) : Evaluation&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getScope() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setScope(scope : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + compareTo(o : T) : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getArg(varName : String) : T </td></tr>
<tr><td align="left" balign="left"> + getContextable() : Mappable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : Principal </td></tr>
<tr><td align="left" balign="left"> + getDbURL() : URL </td></tr>
<tr><td align="left" balign="left"> + getURL() : URL </td></tr>
<tr><td align="left" balign="left"> + setDbURL(dbURL : URL) </td></tr>
<tr><td align="left" balign="left"> + isPersistent() : boolean </td></tr>
<tr><td align="left" balign="left"> + setPersistent(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + getMappable() : Mappable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setMappable(mappable : Mappable&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + isMappable() : boolean </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
		</table></td></tr>
		</table>>, URL="../core/context/model/par/Par.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.util.Deployment implements sorcer.service.Arg
	c61109:p -> c60943:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.Signature implements sorcer.service.Arg
	c61109:p -> c61082:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.ReturnPath<T> implements sorcer.service.Arg
	c61109:p -> c61099:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.Strategy implements sorcer.service.Arg
	c61109:p -> c61114:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.co.tuple.StrategyEntry implements sorcer.service.Arg
	c61109:p -> c61126:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.co.tuple.OutEntry<T> implements sorcer.service.Arg
	c61109:p -> c61127:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.co.tuple.Entry<T> extends sorcer.co.tuple.Tuple2<java.lang.String, T>
	c61137:p -> c61130:p [dir=back,arrowtail=empty];
	//sorcer.co.tuple.Entry<T> implements sorcer.service.Arg
	c61109:p -> c61130:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.co.tuple.InoutEntry<T> implements sorcer.service.Arg
	c61109:p -> c61131:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.co.tuple.InEntry<T> implements sorcer.service.Arg
	c61109:p -> c61134:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.co.tuple.Tuple2<T1, T2> implements sorcer.service.Arg
	c61109:p -> c61137:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Arg
	c61109:p -> c61214:p [dir=back,arrowtail=empty,style=dashed];
}

