#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.service.Job
	c316729 [label=<<table title="sorcer.service.Job" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Job.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Job </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # exertions : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + state : Integer </td></tr>
<tr><td align="left" balign="left"> # delegate : Job </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Job() </td></tr>
<tr><td align="left" balign="left"> + Job(name : String) </td></tr>
<tr><td align="left" balign="left"> + Job(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + Job(name : String, description : String) </td></tr>
<tr><td align="left" balign="left"> + Job(name : String, description : String, fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + getFidelity() : ServiceFidelity </td></tr>
<tr><td align="left" balign="left"> + isJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCompound() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasChild(childName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getChild(childName : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getLsbID() : long </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(ex : Exertion) : int </td></tr>
<tr><td align="left" balign="left"> + setExertionAt(ex : Exertion, i : int) </td></tr>
<tr><td align="left" balign="left"> + getMasterExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setRendezvousName(jobberName : String) </td></tr>
<tr><td align="left" balign="left"> + getProcessSignature() : Signature </td></tr>
<tr><td align="left" balign="left"> + addExertion(ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + addExertions(exertions : List&lt;Exertion&gt;) </td></tr>
<tr><td align="left" balign="left"> + setExertions(exertions : List&lt;Exertion&gt;) </td></tr>
<tr><td align="left" balign="left"> + addExertion(exertion : Exertion, priority : int) : Job </td></tr>
<tr><td align="left" balign="left"> + removeExertion(exertion : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) </td></tr>
<tr><td align="left" balign="left"> + get(index : int) : Exertion </td></tr>
<tr><td align="left" balign="left"> + doJob(txn : Transaction) : Job </td></tr>
<tr><td align="left" balign="left"> + undoJob() </td></tr>
<tr><td align="left" balign="left"> + setState(state : int) </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + getPrincipalID() : String </td></tr>
<tr><td align="left" balign="left"> + setPrincipalID(id : String) </td></tr>
<tr><td align="left" balign="left"> + setSubject(subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + setPrincipal(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getSubject() : Subject </td></tr>
<tr><td align="left" balign="left"> + getServiceID() : ServiceID </td></tr>
<tr><td align="left" balign="left"> + jobContextToString() : String </td></tr>
<tr><td align="left" balign="left"> + setMasterExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + setOwnerId(id : String) </td></tr>
<tr><td align="left" balign="left"> + getContextName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getExertions(exs : List&lt;Exertion&gt;) : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + isTree(visited : Set&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getExertion(index : int) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getJobContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getControlInfo() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + linkContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + linkControlContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getJobValue(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putJobValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + getReturnPath() : Signature.ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + getComponentContext(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getComponentControlContext(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getComponentExertion(path : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + applyFidelityContext(fiContext : FidelityContext) </td></tr>
<tr><td align="left" balign="left"> + reset(state : int) </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : ServiceExertion </td></tr>
		</table></td></tr>
		</table>>, URL="./Job.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.ServiceExertion
	c316730 [label=<<table title="sorcer.service.ServiceExertion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ServiceExertion.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ServiceExertion </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + debug : boolean </td></tr>
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # exertionId : Uuid </td></tr>
<tr><td align="left" balign="left"> # runtimeId : String </td></tr>
<tr><td align="left" balign="left"> # parentId : Uuid </td></tr>
<tr><td align="left" balign="left"> # parent : Exertion </td></tr>
<tr><td align="left" balign="left"> # ownerId : String </td></tr>
<tr><td align="left" balign="left"> # subjectId : String </td></tr>
<tr><td align="left" balign="left"> # subject : Subject </td></tr>
<tr><td align="left" balign="left"> # domainId : String </td></tr>
<tr><td align="left" balign="left"> # subdomainId : String </td></tr>
<tr><td align="left" balign="left"> # lsbId : Long </td></tr>
<tr><td align="left" balign="left"> # msbId : Long </td></tr>
<tr><td align="left" balign="left"> # sessionId : Uuid </td></tr>
<tr><td align="left" balign="left"> # index : Integer </td></tr>
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # description : String </td></tr>
<tr><td align="left" balign="left"> # project : String </td></tr>
<tr><td align="left" balign="left"> # goodUntilDate : String </td></tr>
<tr><td align="left" balign="left"> # accessClass : String </td></tr>
<tr><td align="left" balign="left"> # isExportControlled : Boolean </td></tr>
<tr><td align="left" balign="left"> # scopeCode : Integer </td></tr>
<tr><td align="left" balign="left"> # creationDate : Date </td></tr>
<tr><td align="left" balign="left"> # status : Integer </td></tr>
<tr><td align="left" balign="left"> # priority : Integer </td></tr>
<tr><td align="left" balign="left"> # fidelities : Map&lt;String, ServiceFidelity&gt; </td></tr>
<tr><td align="left" balign="left"> # fidelity : ServiceFidelity </td></tr>
<tr><td align="left" balign="left"> # selectedFidelitySelector : String </td></tr>
<tr><td align="left" balign="left"> # fidelityContexts : Map&lt;String, FidelityContext&gt; </td></tr>
<tr><td align="left" balign="left"> # dataContext : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + count : int </td></tr>
<tr><td align="left" balign="left"> # controlContext : ControlContext </td></tr>
<tr><td align="left" balign="left"> # setters : List&lt;Setter&gt; </td></tr>
<tr><td align="left" balign="left"> # principal : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> # isRevaluable : boolean </td></tr>
<tr><td align="left" balign="left"> # isProxy : boolean </td></tr>
<tr><td align="left" balign="left"> # scope : ParModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # dependers : List&lt;Invocation&lt;&gt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceExertion() </td></tr>
<tr><td align="left" balign="left"> + ServiceExertion(name : String) </td></tr>
<tr><td align="left" balign="left"> # init(name : String) </td></tr>
<tr><td align="left" balign="left"> + service(exertion : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + service(exertion : Exertion, txn : Transaction) : Exertion </td></tr>
<tr><td align="left" balign="left"> + invoke() : Object </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + exert(txn : Transaction, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + exert() : Exertion </td></tr>
<tr><td align="left" balign="left"> + exert(entries : Arg[]) : Exertion </td></tr>
<tr><td align="left" balign="left"> + exert(txn : Transaction, providerName : String, entries : Arg[]) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getSorcerPrincipal() : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + getPrincipalID() : String </td></tr>
<tr><td align="left" balign="left"> + setPrincipalID(id : String) </td></tr>
<tr><td align="left" balign="left"> + removeSignature(index : int) </td></tr>
<tr><td align="left" balign="left"> + setAccess(access : Strategy.Access) </td></tr>
<tr><td align="left" balign="left"> + setFlow(type : Strategy.Flow) </td></tr>
<tr><td align="left" balign="left"> + getFidelity() : ServiceFidelity </td></tr>
<tr><td align="left" balign="left"> + addSignatures(signatures : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + isBatch() : boolean </td></tr>
<tr><td align="left" balign="left"> + setFidelity(fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + putFidelity(fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + addFidelity(fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + setFidelity(name : String, fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + putFidelity(name : String, fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + addFidelity(name : String, fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + selectFidelity(entries : Arg[]) </td></tr>
<tr><td align="left" balign="left"> + selectFidelity(selector : String) </td></tr>
<tr><td align="left" balign="left"> + selectComponentFidelity(componetFiInfo : ComponentFidelityInfo) </td></tr>
<tr><td align="left" balign="left"> + applyFidelityContext(fiContext : FidelityContext) </td></tr>
<tr><td align="left" balign="left"> + selectFidelity() </td></tr>
<tr><td align="left" balign="left"> + setProcessSignature(signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + setService(provider : Service) </td></tr>
<tr><td align="left" balign="left"> + getService() : Service </td></tr>
<tr><td align="left" balign="left"> + getFlowType() : Strategy.Flow </td></tr>
<tr><td align="left" balign="left"> + setFlowType(flowType : Strategy.Flow) </td></tr>
<tr><td align="left" balign="left"> + getAccessType() : Strategy.Access </td></tr>
<tr><td align="left" balign="left"> + setAccessType(accessType : Strategy.Access) </td></tr>
<tr><td align="left" balign="left"> + getScopeCode() : int </td></tr>
<tr><td align="left" balign="left"> + setScopeCode(value : int) </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + setPrincipal(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getParentId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setParentId(parentId : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getOwnerId() : String </td></tr>
<tr><td align="left" balign="left"> + setOwnerId(id : String) </td></tr>
<tr><td align="left" balign="left"> + getStatus() : int </td></tr>
<tr><td align="left" balign="left"> + setStatus(value : int) </td></tr>
<tr><td align="left" balign="left"> + setSubjectId(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubjectId() : String </td></tr>
<tr><td align="left" balign="left"> + getSubject() : Subject </td></tr>
<tr><td align="left" balign="left"> + setSubject(subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + setProject(projectName : String) </td></tr>
<tr><td align="left" balign="left"> + getProject() : String </td></tr>
<tr><td align="left" balign="left"> + setAccessClass(s : String) </td></tr>
<tr><td align="left" balign="left"> + getAccessClass() : String </td></tr>
<tr><td align="left" balign="left"> + isExportControlled(b : boolean) </td></tr>
<tr><td align="left" balign="left"> + isExportControlled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getGoodUntilDate() : String </td></tr>
<tr><td align="left" balign="left"> + setGoodUntilDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + getDeploymentId(list : List&lt;Signature&gt;) : String </td></tr>
<tr><td align="left" balign="left"> + getDeploymentId() : String </td></tr>
<tr><td align="left" balign="left"> + getRuntimeId() : String </td></tr>
<tr><td align="left" balign="left"> + setRuntimeId(id : String) </td></tr>
<tr><td align="left" balign="left"> + setId(id : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getDomainId() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainId(domainId : String) </td></tr>
<tr><td align="left" balign="left"> + setSubdomainId(subdomaindId : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainId() : String </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getRendezvousName() : String </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + setDescription(description : String) </td></tr>
<tr><td align="left" balign="left"> + getIndex() : int </td></tr>
<tr><td align="left" balign="left"> + setIndex(i : int) </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setMonitored(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + isWaitable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setWait(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + hasChild(childName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMsbId() : long </td></tr>
<tr><td align="left" balign="left"> + setLsbId(leastSig : long) </td></tr>
<tr><td align="left" balign="left"> + setMsbId(mostSig : long) </td></tr>
<tr><td align="left" balign="left"> + setSessionId(id : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getSessionId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setContext(context : Context&lt;&gt;) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + setControlContext(context : ControlContext) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + updateStrategy(context : ControlContext) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + setPriority(p : int) </td></tr>
<tr><td align="left" balign="left"> + getPriority() : int </td></tr>
<tr><td align="left" balign="left"> + getProcessSignature() : Signature </td></tr>
<tr><td align="left" balign="left"> + getApdProcessSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getPreprocessSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getPostprocessSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + addSignature(signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + removeSignature(signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + getServiceType() : Class&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getSelector() : String </td></tr>
<tr><td align="left" balign="left"> + compareByIndex(e : Exertion) : int </td></tr>
<tr><td align="left" balign="left"> + isExecutable() : boolean </td></tr>
<tr><td align="left" balign="left"> + getParent() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setParent(parent : Exertion) </td></tr>
<tr><td align="left" balign="left"> + contextToString() : String </td></tr>
<tr><td align="left" balign="left"> + getExceptionCount() : int </td></tr>
<tr><td align="left" balign="left"> + getTrace() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + isTree() : boolean </td></tr>
<tr><td align="left" balign="left"> + getDataContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getControlContext() : ControlContext </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getContext(componentExertionName : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getControlContext(componentExertionName : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getControlInfo() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + startExecTime() </td></tr>
<tr><td align="left" balign="left"> + stopExecTime() </td></tr>
<tr><td align="left" balign="left"> + getExecTime() : String </td></tr>
<tr><td align="left" balign="left"> + setExecTimeRequested(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + isExecTimeRequested() : boolean </td></tr>
<tr><td align="left" balign="left"> + getPar(path : String) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + linkContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + linkControlContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isTree(visited : Set&lt;&gt;) : boolean </font></td></tr>
<tr><td align="left" balign="left"> + reportException(t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + addException(et : ThrowableTrace) </td></tr>
<tr><td align="left" balign="left"> + getInoker() : ExertInvoker </td></tr>
<tr><td align="left" balign="left"> + getInvoker(name : String) : ExertInvoker </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + getPersisters() : List&lt;Setter&gt; </td></tr>
<tr><td align="left" balign="left"> + addPersister(persister : Setter) </td></tr>
<tr><td align="left" balign="left"> + info() : String </td></tr>
<tr><td align="left" balign="left"> + isRevaluable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setRevaluable(isRevaluable : boolean) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getAllExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getDeployments() : List&lt;ServiceDeployment&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllNetSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllNetTaskSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getDeploymnets() : List&lt;ServiceDeployment&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptions(exs : List&lt;ThrowableTrace&gt;) : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllTaskSignatures() : List&lt;Signature&gt; </td></tr>
<tr><td align="left" balign="left"> + getAllDeployments() : List&lt;ServiceDeployment&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getExertions(exs : List&lt;Exertion&gt;) : List&lt;Exertion&gt; </font></td></tr>
<tr><td align="left" balign="left"> + updateValue(value : Object) </td></tr>
<tr><td align="left" balign="left"> + getExertion(componentExertionName : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + state() : String </td></tr>
<tr><td align="left" balign="left"> + isSpacable() : boolean </td></tr>
<tr><td align="left" balign="left"> + correctProcessSignature() : Signature </td></tr>
<tr><td align="left" balign="left"> + reset(state : int) </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + getScope() : ParModel&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setScope(scope : ParModel&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getDependers() : List&lt;Invocation&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setDependers(dependers : List&lt;Invocation&lt;&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + addDepender(depender : Invocation&lt;&gt;) : Exertion </td></tr>
<tr><td align="left" balign="left"> + addDependers(dependers : Invocation&lt;&gt;[]) : Exertion </td></tr>
<tr><td align="left" balign="left"> + asis() : Object </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getFidelities() : Map&lt;String, ServiceFidelity&gt; </td></tr>
<tr><td align="left" balign="left"> + setFidelities(fidelities : Map&lt;String, ServiceFidelity&gt;) </td></tr>
<tr><td align="left" balign="left"> + getSelectedFidelitySelector() : String </td></tr>
<tr><td align="left" balign="left"> + setSelectedFidelitySelector(selectedFidelitySelector : String) </td></tr>
<tr><td align="left" balign="left"> + getFidelityContexts() : Map&lt;String, FidelityContext&gt; </td></tr>
<tr><td align="left" balign="left"> + setFidelityContexts(fidelityContexts : Map&lt;String, FidelityContext&gt;) </td></tr>
<tr><td align="left" balign="left"> + getSetters() : List&lt;Setter&gt; </td></tr>
<tr><td align="left" balign="left"> + setSetters(setters : List&lt;Setter&gt;) </td></tr>
<tr><td align="left" balign="left"> + isConditional() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCompound() : boolean </td></tr>
<tr><td align="left" balign="left"> + isJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTask() : boolean </td></tr>
<tr><td align="left" balign="left"> + isBlock() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCmd() : boolean </td></tr>
<tr><td align="left" balign="left"> + isProvisionable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setProvisionable(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + isProxy() : boolean </td></tr>
<tr><td align="left" balign="left"> + setProxy(isProxy : boolean) </td></tr>
<tr><td align="left" balign="left"> + getComponentExertion(path : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getCreationDate() : Date </td></tr>
<tr><td align="left" balign="left"> + describe() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./ServiceExertion.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.CompoundExertion
	c316792 [label=<<table title="sorcer.service.CompoundExertion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CompoundExertion.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CompoundExertion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + size() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + get(index : int) : Exertion </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setExertionAt(ex : Exertion, i : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setExertions(exertions : List&lt;Exertion&gt;) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getExertions() : List&lt;Exertion&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + remove(index : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAllExertions() : List&lt;Exertion&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getChild(childName : String) : Exertion </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + applyFidelityContext(fiContext : FidelityContext) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./CompoundExertion.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.ObjectJob
	c316994 [label=<<table title="sorcer.core.exertion.ObjectJob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/exertion/ObjectJob.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ObjectJob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ObjectJob(name : String) </td></tr>
<tr><td align="left" balign="left"> + ObjectJob(name : String, signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + ObjectJob(name : String, signature : Signature, context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + doJob(txn : Transaction) : Job </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../core/exertion/ObjectJob.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.NetJob
	c316995 [label=<<table title="sorcer.core.exertion.NetJob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../core/exertion/NetJob.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NetJob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NetJob() </td></tr>
<tr><td align="left" balign="left"> + NetJob(name : String) </td></tr>
<tr><td align="left" balign="left"> + NetJob(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + NetJob(name : String, principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getTemplate() : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + doJob(txn : Transaction) : Job </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../core/exertion/NetJob.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.service.Job extends sorcer.service.ServiceExertion
	c316730:p -> c316729:p [dir=back,arrowtail=empty];
	//sorcer.service.Job implements sorcer.service.CompoundExertion
	c316792:p -> c316729:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.exertion.ObjectJob extends sorcer.service.Job
	c316729:p -> c316994:p [dir=back,arrowtail=empty];
	//sorcer.core.exertion.NetJob extends sorcer.service.Job
	c316729:p -> c316995:p [dir=back,arrowtail=empty];
}

