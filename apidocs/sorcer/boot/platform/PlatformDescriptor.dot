#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.boot.platform.PlatformDescriptor
	c341813 [label=<<table title="sorcer.boot.platform.PlatformDescriptor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./PlatformDescriptor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> PlatformDescriptor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PlatformDescriptor() </td></tr>
<tr><td align="left" balign="left"> + getPlatformServices() : ServiceDescriptor[] </td></tr>
<tr><td align="left" balign="left"> + getPlatformService() : ServiceDescriptor </td></tr>
		</table></td></tr>
		</table>>, URL="./PlatformDescriptor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.boot.platform.PlatformDescriptor extends groovy.lang.Script
	c341985:p -> c341813:p [dir=back,arrowtail=empty];
	// groovy.lang.Script
	c341985 [label=<<table title="groovy.lang.Script" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Script </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Script() </td></tr>
<tr><td align="left" balign="left"> # Script(arg0 : Binding) </td></tr>
<tr><td align="left" balign="left"> + getBinding() : Binding </td></tr>
<tr><td align="left" balign="left"> + setBinding(arg0 : Binding) </td></tr>
<tr><td align="left" balign="left"> + getProperty(arg0 : String) : Object </td></tr>
<tr><td align="left" balign="left"> + setProperty(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(arg0 : String, arg1 : Object) : Object </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + run() : Object </font></td></tr>
<tr><td align="left" balign="left"> + println() </td></tr>
<tr><td align="left" balign="left"> + print(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> + println(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> + printf(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + printf(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + evaluate(arg0 : String) : Object </td></tr>
<tr><td align="left" balign="left"> + evaluate(arg0 : File) : Object </td></tr>
<tr><td align="left" balign="left"> + run(arg0 : File, arg1 : String[]) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

