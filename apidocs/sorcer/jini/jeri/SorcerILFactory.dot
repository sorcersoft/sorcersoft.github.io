#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.jini.jeri.SorcerILFactory
	c549850 [label=<<table title="sorcer.jini.jeri.SorcerILFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./SorcerILFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SorcerILFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # serviceBeanMap : Map&lt;Class&lt;&gt;, Object&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SorcerILFactory() </td></tr>
<tr><td align="left" balign="left"> + SorcerILFactory(serviceBeans : Map&lt;&gt;, loader : ClassLoader) </td></tr>
<tr><td align="left" balign="left"> + SorcerILFactory(serverConstraints : MethodConstraints, permissionClass : Class&lt;&gt;, serviceBeans : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + SorcerILFactory(serverConstraints : MethodConstraints, permissionClass : Class&lt;&gt;, loader : ClassLoader, serviceBeans : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> # getExtraProxyInterfaces(impl : Remote) : Class&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> # createInvocationDispatcher(methods : Collection&lt;&gt;, impl : Remote, caps : ServerCapabilities) : InvocationDispatcher </td></tr>
<tr><td align="left" balign="left"> + setRemoteLogging(remoteLogging : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="./SorcerILFactory.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.jini.jeri.SorcerILFactory extends net.jini.jeri.BasicILFactory
	c550115:p -> c549850:p [dir=back,arrowtail=empty];
	// net.jini.jeri.BasicILFactory
	c550115 [label=<<table title="net.jini.jeri.BasicILFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/jeri/BasicILFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BasicILFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BasicILFactory() </td></tr>
<tr><td align="left" balign="left"> + BasicILFactory(arg0 : MethodConstraints, arg1 : Class&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + BasicILFactory(arg0 : MethodConstraints, arg1 : Class&lt;&gt;, arg2 : ClassLoader) </td></tr>
<tr><td align="left" balign="left"> # createInvocationHandler(arg0 : Class&lt;&gt;[], arg1 : Remote, arg2 : ObjectEndpoint) : InvocationHandler </td></tr>
<tr><td align="left" balign="left"> # getExtraProxyInterfaces(arg0 : Remote) : Class&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> # createInvocationDispatcher(arg0 : Collection&lt;&gt;, arg1 : Remote, arg2 : ServerCapabilities) : InvocationDispatcher </td></tr>
<tr><td align="left" balign="left"> + getServerConstraints() : MethodConstraints </td></tr>
<tr><td align="left" balign="left"> + getPermissionClass() : Class&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/jeri/BasicILFactory.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

