#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.provider.StaticServiceProvider
	c514061 [label=<<table title="sorcer.core.provider.StaticServiceProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./StaticServiceProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> StaticServiceProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # StaticServiceProvider() </td></tr>
<tr><td align="left" balign="left"> + StaticServiceProvider(args : String[], lifeCycle : LifeCycle) </td></tr>
		</table></td></tr>
		</table>>, URL="./StaticServiceProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.ServiceTasker
	c514063 [label=<<table title="sorcer.core.provider.ServiceTasker" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ServiceTasker.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServiceTasker </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceTasker() </td></tr>
<tr><td align="left" balign="left"> + ServiceTasker(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + execute(task : Exertion) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + execute(task : Exertion, transaction : Transaction) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + isAuthorized(subject : Subject, signature : Signature) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./ServiceTasker.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.ServiceProvider
	c514066 [label=<<table title="sorcer.core.provider.ServiceProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ServiceProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServiceProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DB_HOME : String </td></tr>
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> + COMPONENT : String </td></tr>
<tr><td align="left" balign="left"> # delegate : ProviderDelegate </td></tr>
<tr><td align="left" balign="left"> # scheduler : ScheduledExecutorService </td></tr>
<tr><td align="left" balign="left"> # attributes : Set&lt;Entry&gt; </td></tr>
<tr><td align="left" balign="left"> + theContextMap : HashMap&lt;String, Context&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + THREAD_MANAGEMNT : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceProvider() </td></tr>
<tr><td align="left" balign="left"> + ServiceProvider(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + ServiceProvider(providerPropertiesFile : String) </td></tr>
<tr><td align="left" balign="left"> + getGrants(cl : Class&lt;?&gt;, principals : Principal[]) : Permission[] </td></tr>
<tr><td align="left" balign="left"> + grantSupported() : boolean </td></tr>
<tr><td align="left" balign="left"> + getProxyVerifier() : TrustVerifier </td></tr>
<tr><td align="left" balign="left"> + getConstraints() : MethodConstraints </td></tr>
<tr><td align="left" balign="left"> + setConstraints(constraints : MethodConstraints) : RemoteMethodControl </td></tr>
<tr><td align="left" balign="left"> + getAdmin() : Object </td></tr>
<tr><td align="left" balign="left"> + setAdmin(proxy : Object) </td></tr>
<tr><td align="left" balign="left"> + getLookupAttributes() : Entry[] </td></tr>
<tr><td align="left" balign="left"> + addLookupAttributes(attrSets : Entry[]) </td></tr>
<tr><td align="left" balign="left"> + modifyLookupAttributes(attrSetTemplates : Entry[], attrSets : Entry[]) </td></tr>
<tr><td align="left" balign="left"> + getLookupGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + addLookupGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + removeLookupGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + setLookupGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + getLookupLocators() : LookupLocator[] </td></tr>
<tr><td align="left" balign="left"> + addLookupLocators(locators : LookupLocator[]) </td></tr>
<tr><td align="left" balign="left"> + removeLookupLocators(locators : LookupLocator[]) </td></tr>
<tr><td align="left" balign="left"> + setLookupLocators(locators : LookupLocator[]) </td></tr>
<tr><td align="left" balign="left"> + unregister(impl : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getServiceProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + getProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + getInner() : Remote </td></tr>
<tr><td align="left" balign="left"> + setInner(innerProxy : Object) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + init(configOptions : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + getMainUIDescriptor() : UIDescriptor </td></tr>
<tr><td align="left" balign="left"> + getServiceUIEntries() : UIDescriptor[] </td></tr>
<tr><td align="left" balign="left"> + getServiceComponents() : Map&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + setServiceComponents(serviceComponents : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + isSpaceSecurityEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> + getContext(context : Context&lt;?&gt;) : Context&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContextLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getProviderLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getRemoteLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + isReady(exertion : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> + getContextScript() : String </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getMethodContextScript(interfaceName : String, methodName : String) : String </td></tr>
<tr><td align="left" balign="left"> + currentContextList(interfaceName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + deleteContext(interfaceName : String, methodName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMethodContext(interfaceName : String, methodName : String) : Context&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + saveMethodContext(interfaceName : String, methodName : String, theContext : Context&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAccessorGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + setAccessorGroups(accessorGroups : String[]) </td></tr>
<tr><td align="left" balign="left"> + mutualExclusion() : boolean </td></tr>
<tr><td align="left" balign="left"> # doTimeKeeping(callTimeSec : double) </td></tr>
<tr><td align="left" balign="left"> # doThreadMonitor(serviceIdString : String) : String </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + init(propFile : String) </td></tr>
<tr><td align="left" balign="left"> + init(delegate : ProviderDelegate) </td></tr>
<tr><td align="left" balign="left"> + getProviderID() : ServiceID </td></tr>
<tr><td align="left" balign="left"> + serviceIDNotify(sid : ServiceID) </td></tr>
<tr><td align="left" balign="left"> + getDelegate() : ProviderDelegate </td></tr>
<tr><td align="left" balign="left"> + getLeastSignificantBits() : long </td></tr>
<tr><td align="left" balign="left"> + getMostSignificantBits() : long </td></tr>
<tr><td align="left" balign="left"> + isValidTask(task : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> + getInfo() : String </td></tr>
<tr><td align="left" balign="left"> + isValidMethod(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(method : String, context : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(methodName : String, ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + doExertion(exertion : Exertion, txn : Transaction) : Exertion </td></tr>
<tr><td align="left" balign="left"> # getControlFlownManager(exertion : Exertion) : ControlFlowManager </td></tr>
<tr><td align="left" balign="left"> + service(exertion : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + service(exertion : Exertion, txn : Transaction) : Exertion </td></tr>
<tr><td align="left" balign="left"> + dropTask(task : ServiceExertion) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + dropJob(job : Job) : Job </td></tr>
<tr><td align="left" balign="left"> + addAttribute(attributes : Entry) </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Entry[] </td></tr>
<tr><td align="left" balign="left"> + getProperties() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getProviderProperties() : Properties </td></tr>
<tr><td align="left" balign="left"> + getProviderConfiguration() : Configuration </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + getGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getId() : Object </td></tr>
<tr><td align="left" balign="left"> + getProviderName() : String </td></tr>
<tr><td align="left" balign="left"> + restore() </td></tr>
<tr><td align="left" balign="left"> + loadConfiguration(filename : String) </td></tr>
<tr><td align="left" balign="left"> + hangup() </td></tr>
<tr><td align="left" balign="left"> + getScratchDir() : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(scratchDirNamePrefix : String) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(context : Context&lt;&gt;, scratchDirNamePrefix : String) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(context : Context&lt;&gt;) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchURL(scratchFile : File) : URL </td></tr>
<tr><td align="left" balign="left"> + getProperty(key : String) : String </td></tr>
<tr><td align="left" balign="left"> + getProperty(key : String, defaultValue : String) : String </td></tr>
<tr><td align="left" balign="left"> + notifyInformation(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, message : String, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyExceptionWithStackTrace(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyWarning(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + stop(ref : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + suspend(ref : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + resume(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + step(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + isBusy() : boolean </td></tr>
<tr><td align="left" balign="left"> + destroyNode() </td></tr>
<tr><td align="left" balign="left"> + getReferentUuid() : Uuid </td></tr>
<tr><td align="left" balign="left"> + updatePolicy(policy : Policy) </td></tr>
<tr><td align="left" balign="left"> + loadContextDatabase() : boolean </td></tr>
<tr><td align="left" balign="left"> # setupThreadManager() </td></tr>
<tr><td align="left" balign="left"> + getJavaSystemProperties() : Properties </td></tr>
<tr><td align="left" balign="left"> + isContextValid(dataContext : Context&lt;?&gt;, forSignature : Signature) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + setServiceBeanListener(serviceBeanListener : IServiceBeanListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./ServiceProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.RemoteContextManagement
	c514073 [label=<<table title="sorcer.core.provider.RemoteContextManagement" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RemoteContextManagement.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RemoteContextManagement </td></tr>
		</table></td></tr>
		</table>>, URL="./RemoteContextManagement.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.AdministratableProvider
	c514077 [label=<<table title="sorcer.core.provider.AdministratableProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./AdministratableProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> AdministratableProvider </td></tr>
		</table></td></tr>
		</table>>, URL="./AdministratableProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.Provider
	c514080 [label=<<table title="sorcer.core.provider.Provider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Provider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Provider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProviderID() : ServiceID </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProviderName() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAttributes() : Entry[] </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProperties() : List&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProviderConfiguration() : Configuration </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + init() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + init(propFile : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + restore() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + mutualExclusion() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProperty(property : String) : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getGroups() : String[] </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getInfo() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getDescription() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isBusy() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + destroy() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + destroyNode() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyInformation(task : Exertion, message : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyException(task : Exertion, message : String, e : Exception) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyExceptionWithStackTrace(task : Exertion, e : Exception) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyException(task : Exertion, e : Exception) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyWarning(task : Exertion, message : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyFailure(task : Exertion, e : Exception) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + notifyFailure(task : Exertion, message : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getJavaSystemProperties() : Properties </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProxy() : Object </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isContextValid(dataContext : Context&lt;?&gt;, forSignature : Signature) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + updatePolicy(policy : Policy) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLogger() : Logger </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getContextLogger() : Logger </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProviderLogger() : Logger </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRemoteLogger() : Logger </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addAttribute(attribute : Entry) </font></td></tr>
		</table></td></tr>
		</table>>, URL="./Provider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.exertmonitor.ExertMonitor
	c514083 [label=<<table title="sorcer.core.provider.exertmonitor.ExertMonitor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./exertmonitor/ExertMonitor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExertMonitor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExertMonitor(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + register(lstnr : RemoteEventListener, ex : Exertion, duration : long) : Exertion </td></tr>
<tr><td align="left" balign="left"> + init(cookie : Uuid, mntrbl : Monitorable, duration : long, timeout : long) : Lease </td></tr>
<tr><td align="left" balign="left"> + init(cookie : Uuid, duration : long, timeout : long) </td></tr>
<tr><td align="left" balign="left"> + init(cookie : Uuid, mntrbl : Monitorable) : Lease </td></tr>
<tr><td align="left" balign="left"> + getState(cookie : Uuid) : int </td></tr>
<tr><td align="left" balign="left"> + getMonitorableExertionInfo(state : Exec.State, principal : Principal) : Map&lt;Uuid, ExertionInfo&gt; </td></tr>
<tr><td align="left" balign="left"> + getMonitorableExertion(id : Uuid, principal : Principal) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getMonitorableExertion(cookie : UEID, principal : Principal) : Exertion </td></tr>
<tr><td align="left" balign="left"> + update(cookie : Uuid, ctx : Context&lt;&gt;, controlContext : IControlContext, aspect : int) </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + persist(session : MonitorManagementSession) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSession(key : UuidKey) : MonitorSession </td></tr>
<tr><td align="left" balign="left"> + getSession(key : Uuid) : MonitorSession </td></tr>
		</table></td></tr>
		</table>>, URL="./exertmonitor/ExertMonitor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.proxy.Partnership
	c514089 [label=<<table title="sorcer.core.proxy.Partnership" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../proxy/Partnership.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Partnership </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setInner(inner : Object) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAdmin(admin : Object) </font></td></tr>
		</table></td></tr>
		</table>>, URL="../proxy/Partnership.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.proxy.Partner
	c514091 [label=<<table title="sorcer.core.proxy.Partner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../proxy/Partner.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Partner </td></tr>
		</table></td></tr>
		</table>>, URL="../proxy/Partner.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Identifiable
	c514192 [label=<<table title="sorcer.service.Identifiable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Identifiable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Identifiable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getId() : Object </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Identifiable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.cataloger.ServiceCataloger
	c514644 [label=<<table title="sorcer.core.provider.cataloger.ServiceCataloger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./cataloger/ServiceCataloger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServiceCataloger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + lookupMgr : ServiceDiscoveryManager </td></tr>
<tr><td align="left" balign="left"> + cache : LookupCache </td></tr>
<tr><td align="left" balign="left"> # cinfo : ServiceCataloger.CatalogerInfo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceCataloger() </td></tr>
<tr><td align="left" balign="left"> + ServiceCataloger(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + getLL() : LookupLocator[] </td></tr>
<tr><td align="left" balign="left"> + getGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + getTemplate() : ServiceTemplate </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + lookupItem(providerName : String, serviceTypes : Class&lt;&gt;[]) : ServiceItem </td></tr>
<tr><td align="left" balign="left"> + lookup(serviceTypes : Class&lt;&gt;[]) : Provider </td></tr>
<tr><td align="left" balign="left"> + lookup(providerName : String, serviceTypes : Class&lt;&gt;[]) : Provider </td></tr>
<tr><td align="left" balign="left"> + lookup(sid : ServiceID) : Provider </td></tr>
<tr><td align="left" balign="left"> + getProviderMethods() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + getProviderList() : String[] </td></tr>
<tr><td align="left" balign="left"> + getInterfaceList(providerName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getMethodsList(providerName : String, interfaceName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + deleteContext(providerName : String, interfaceName : String, methodName : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + getSavedContextList(providerName : String, interfaceName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getContext(providerName : String, interfaceName : String, methodName : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + saveContext(providerName : String, interfaceName : String, methodName : String, theContext : Context&lt;&gt;) : Boolean </td></tr>
<tr><td align="left" balign="left"> + exertService(providerName : String, serviceType : Class&lt;&gt;, methodName : String, theContext : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getContexts(serviceType : Class&lt;&gt;, method : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getServiceInfo() : String </td></tr>
<tr><td align="left" balign="left"> + lookup(tmpl : ServiceTemplate, maxMatches : int) : ServiceMatches </td></tr>
<tr><td align="left" balign="left"> + returnString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./cataloger/ServiceCataloger.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.provider.StaticServiceProvider extends sorcer.core.provider.ServiceProvider
	c514066:p -> c514061:p [dir=back,arrowtail=empty];
	//sorcer.core.provider.StaticServiceProvider implements sorcer.core.provider.AdministratableProvider
	c514077:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements net.jini.export.ProxyAccessor
	c514696:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements net.jini.security.proxytrust.ServerProxyTrust
	c514697:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements net.jini.core.constraint.RemoteMethodControl
	c514698:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements com.sun.jini.start.LifeCycle
	c514699:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements sorcer.core.proxy.Partner
	c514091:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements sorcer.core.proxy.Partnership
	c514089:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.StaticServiceProvider implements sorcer.core.provider.RemoteContextManagement
	c514073:p -> c514061:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceTasker extends sorcer.core.provider.ServiceProvider
	c514066:p -> c514063:p [dir=back,arrowtail=empty];
	//sorcer.core.provider.ServiceProvider implements sorcer.service.Identifiable
	c514192:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements sorcer.core.provider.Provider
	c514080:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements net.jini.lookup.ServiceIDListener
	c514700:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements net.jini.id.ReferentUuid
	c514701:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements sorcer.core.provider.AdministratableProvider
	c514077:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements net.jini.export.ProxyAccessor
	c514696:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements net.jini.security.proxytrust.ServerProxyTrust
	c514697:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements net.jini.core.constraint.RemoteMethodControl
	c514698:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements com.sun.jini.start.LifeCycle
	c514699:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements sorcer.core.proxy.Partner
	c514091:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements sorcer.core.proxy.Partnership
	c514089:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements sorcer.core.provider.RemoteContextManagement
	c514073:p -> c514066:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.exertmonitor.ExertMonitor extends sorcer.core.provider.ServiceProvider
	c514066:p -> c514083:p [dir=back,arrowtail=empty];
	//sorcer.core.provider.cataloger.ServiceCataloger extends sorcer.core.provider.ServiceProvider
	c514066:p -> c514644:p [dir=back,arrowtail=empty];
	//sorcer.core.provider.cataloger.ServiceCataloger implements sorcer.core.provider.AdministratableProvider
	c514077:p -> c514644:p [dir=back,arrowtail=empty,style=dashed];
	// net.jini.export.ProxyAccessor
	c514696 [label=<<table title="net.jini.export.ProxyAccessor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/export/ProxyAccessor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ProxyAccessor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProxy() : Object </font></td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/export/ProxyAccessor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.jini.core.constraint.RemoteMethodControl
	c514698 [label=<<table title="net.jini.core.constraint.RemoteMethodControl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/core/constraint/RemoteMethodControl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RemoteMethodControl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setConstraints(arg0 : MethodConstraints) : RemoteMethodControl </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getConstraints() : MethodConstraints </font></td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/core/constraint/RemoteMethodControl.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.jini.id.ReferentUuid
	c514701 [label=<<table title="net.jini.id.ReferentUuid" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/id/ReferentUuid.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ReferentUuid </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getReferentUuid() : Uuid </font></td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/id/ReferentUuid.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.jini.security.proxytrust.ServerProxyTrust
	c514697 [label=<<table title="net.jini.security.proxytrust.ServerProxyTrust" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/security/proxytrust/ServerProxyTrust.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ServerProxyTrust </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getProxyVerifier() : TrustVerifier </font></td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/security/proxytrust/ServerProxyTrust.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.sun.jini.start.LifeCycle
	c514699 [label=<<table title="com.sun.jini.start.LifeCycle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/com/sun/jini/start/LifeCycle.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LifeCycle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + unregister(arg0 : Object) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/com/sun/jini/start/LifeCycle.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.jini.lookup.ServiceIDListener
	c514700 [label=<<table title="net.jini.lookup.ServiceIDListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/lookup/ServiceIDListener.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ServiceIDListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + serviceIDNotify(arg0 : ServiceID) </font></td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/lookup/ServiceIDListener.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

