#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.provider.ProviderDelegate
	c253417 [label=<<table title="sorcer.core.provider.ProviderDelegate" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ProviderDelegate.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProviderDelegate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # config : ProviderDelegate.DeploymentConfiguration </td></tr>
<tr><td align="left" balign="left"> # groupsToDiscover : String[] </td></tr>
<tr><td align="left" balign="left"> # space : JavaSpace05 </td></tr>
<tr><td align="left" balign="left"> # tManager : TransactionManager </td></tr>
<tr><td align="left" balign="left"> # workerTransactional : boolean </td></tr>
<tr><td align="left" balign="left"> # spaceGroup : String </td></tr>
<tr><td align="left" balign="left"> # spaceName : String </td></tr>
<tr><td align="left" balign="left"> # publishedServiceTypes : Class&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> # serviceType : SorcerServiceInfo </td></tr>
<tr><td align="left" balign="left"> # idPersistent : boolean </td></tr>
<tr><td align="left" balign="left"> # matchInterfaceOnly : boolean </td></tr>
<tr><td align="left" balign="left"> # monitorable : boolean </td></tr>
<tr><td align="left" balign="left"> # notifying : boolean </td></tr>
<tr><td align="left" balign="left"> # spaceEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> # spaceReadiness : boolean </td></tr>
<tr><td align="left" balign="left"> # spaceSecurityEnabled : boolean </td></tr>
<tr><td align="left" balign="left"> + persister : Mandator </td></tr>
<tr><td align="left" balign="left"> # leaseManager : LeaseRenewalManager </td></tr>
<tr><td align="left" balign="left"> # provider : Provider </td></tr>
<tr><td align="left" balign="left"> # mutualExclusion : boolean </td></tr>
<tr><td align="left" balign="left"> # providerProxy : Remote </td></tr>
<tr><td align="left" balign="left"> + EXPORTER : String </td></tr>
<tr><td align="left" balign="left"> + BEANS : String </td></tr>
<tr><td align="left" balign="left"> + DATA_BEANS : String </td></tr>
<tr><td align="left" balign="left"> + SCRIPTLETS : String </td></tr>
<tr><td align="left" balign="left"> + BEAN_CLASSES : String </td></tr>
<tr><td align="left" balign="left"> + CONTEXT_MANAGER : String </td></tr>
<tr><td align="left" balign="left"> + SMART_PROXY : String </td></tr>
<tr><td align="left" balign="left"> + SERVER : String </td></tr>
<tr><td align="left" balign="left"> + SERVER_TYPE : String </td></tr>
<tr><td align="left" balign="left"> + REMOTE_LOGGING : String </td></tr>
<tr><td align="left" balign="left"> + REMOTE_LOGGER_MANAGER_NAME : String </td></tr>
<tr><td align="left" balign="left"> + REMOTE_LOGGER_NAME : String </td></tr>
<tr><td align="left" balign="left"> + REMOTE_LOGGER_LEVEL : String </td></tr>
<tr><td align="left" balign="left"> + REMOTE_CONTEXT_LOGGING : String </td></tr>
<tr><td align="left" balign="left"> + REMOTE_PROVIDER_LOGGING : String </td></tr>
<tr><td align="left" balign="left"> + PROVIDER_MONITORING : String </td></tr>
<tr><td align="left" balign="left"> + PROVIDER_NOTIFYING : String </td></tr>
<tr><td align="left" balign="left"> + SERVER_NAME : String </td></tr>
<tr><td align="left" balign="left"> + SERVER_EXPORTER : String </td></tr>
<tr><td align="left" balign="left"> + EXPORTER_INTERFACE : String </td></tr>
<tr><td align="left" balign="left"> + EXPORTER_PORT : String </td></tr>
<tr><td align="left" balign="left"> + KEEP_ALIVE_TIME : int </td></tr>
<tr><td align="left" balign="left"> + SPACE_ENABLED : String </td></tr>
<tr><td align="left" balign="left"> + SPACE_READINESS : String </td></tr>
<tr><td align="left" balign="left"> + MUTUAL_EXCLUSION : String </td></tr>
<tr><td align="left" balign="left"> + SPACE_SECURITY_ENABLED : String </td></tr>
<tr><td align="left" balign="left"> + WORKER_TRANSACTIONAL : String </td></tr>
<tr><td align="left" balign="left"> + WORKER_COUNT : String </td></tr>
<tr><td align="left" balign="left"> + WORKER_PER_INTERFACE_COUNT : String </td></tr>
<tr><td align="left" balign="left"> + SPACE_WORKER_QUEUE_SIZE : String </td></tr>
<tr><td align="left" balign="left"> + MAX_WORKER_POOL_SIZE : String </td></tr>
<tr><td align="left" balign="left"> + WORKER_TRANSACTION_LEASE_TIME : String </td></tr>
<tr><td align="left" balign="left"> + SPACE_TIMEOUT : String </td></tr>
<tr><td align="left" balign="left"> + INTERFACE_ONLY : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProviderDelegate() </td></tr>
<tr><td align="left" balign="left"> + init(provider : Provider) </td></tr>
<tr><td align="left" balign="left"> + init(provider : Provider, configFilename : String) </td></tr>
<tr><td align="left" balign="left"> # configure(jconfig : Configuration) </td></tr>
<tr><td align="left" balign="left"> + startSpaceTakers() </td></tr>
<tr><td align="left" balign="left"> + doTask(task : Task, transaction : Transaction) : Task </td></tr>
<tr><td align="left" balign="left"> # forwardTask(task : ServiceExertion, requestor : Provider) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + dropTask(entryTask : Exertion) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + doJob(job : Job) : Job </td></tr>
<tr><td align="left" balign="left"> + dropJob(job : Job) : Job </td></tr>
<tr><td align="left" balign="left"> + hangup() </td></tr>
<tr><td align="left" balign="left"> + isValidMethod(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + execTask(task : Task) : Task </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(selector : String, ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(selector : String, sc : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDataDir() : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir() : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(scratchDirNamePrefix : String) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(context : Context&lt;&gt;, scratchDirPrefix : String) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(context : Context&lt;&gt;) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchURL(scratchFile : File) : URL </td></tr>
<tr><td align="left" balign="left"> + getServiceType() : SorcerServiceInfo </td></tr>
<tr><td align="left" balign="left"> + getProviderProperties() : Properties </td></tr>
<tr><td align="left" balign="left"> + getProviderConfiguration() : Configuration </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + setProviderName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + addExtraLookupAttribute(extra : Entry) </td></tr>
<tr><td align="left" balign="left"> + getProperties() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Entry[] </td></tr>
<tr><td align="left" balign="left"> + restore() </td></tr>
<tr><td align="left" balign="left"> + getServiceID() : ServiceID </td></tr>
<tr><td align="left" balign="left"> + getServerUuid() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setServerUuid(serviceID : ServiceID) </td></tr>
<tr><td align="left" balign="left"> + setServerUuid(serverID : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getInfo() : String </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + fireEvent() </td></tr>
<tr><td align="left" balign="left"> + isValidTask(servicetask : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> # notify(task : Exertion, notificationType : int, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, message : String, e : Exception, fullStackTrace : boolean) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, message : String, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyExceptionWithStackTrace(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyInformation(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyWarning(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + changed(sc : Context&lt;&gt;, aspect : Object) </td></tr>
<tr><td align="left" balign="left"> + stop(ueid : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + suspend(ueid : UEID, subject : Subject) : boolean </td></tr>
<tr><td align="left" balign="left"> + getProviderConfig() : ProviderDelegate.DeploymentConfiguration </td></tr>
<tr><td align="left" balign="left"> + getDeploymentConfig() : Configuration </td></tr>
<tr><td align="left" balign="left"> + setJiniConfig(config : Configuration) </td></tr>
<tr><td align="left" balign="left"> + getProviderName() : String </td></tr>
<tr><td align="left" balign="left"> + getProvider() : Provider </td></tr>
<tr><td align="left" balign="left"> + mutualExlusion() : boolean </td></tr>
<tr><td align="left" balign="left"> + mutualExlusion(mutualExlusion : boolean) </td></tr>
<tr><td align="left" balign="left"> + isSpaceTransactional() : boolean </td></tr>
<tr><td align="left" balign="left"> + getProxyVerifier() : TrustVerifier </td></tr>
<tr><td align="left" balign="left"> + getAdmin() : Object </td></tr>
<tr><td align="left" balign="left"> + setAdmin(proxy : Object) </td></tr>
<tr><td align="left" balign="left"> + unexport(force : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + getProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + getInner() : Remote </td></tr>
<tr><td align="left" balign="left"> + setInner(innerProxy : Object) </td></tr>
<tr><td align="left" balign="left"> + toArray(arg : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getSmartProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + getPartner() : Remote </td></tr>
<tr><td align="left" balign="left"> + getProviderProxy() : Remote </td></tr>
<tr><td align="left" balign="left"> + isSpaceSecurityEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getServiceComponents() : Map&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setServiceComponents(serviceComponents : Map&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getContextLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getProviderLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getRemoteLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getHostAddress() : String </td></tr>
<tr><td align="left" balign="left"> + getHostName() : String </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> + spaceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSpaceHandlingPools() : List&lt;ExecutorService&gt; </td></tr>
<tr><td align="left" balign="left"> + getContextManager() : ContextManagement </td></tr>
<tr><td align="left" balign="left"> + getPublishedServiceTypes() : Class&lt;&gt;[] </td></tr>
		</table></td></tr>
		</table>>, URL="./ProviderDelegate.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

