#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.SorcerNotifierProtocol
	c402700 [label=<<table title="sorcer.core.SorcerNotifierProtocol" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../SorcerNotifierProtocol.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SorcerNotifierProtocol </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + register(listener : RemoteEventListener, handback : Object, regFor : Integer, userId : String, sessionJobs : Vector&lt;&gt;, sessionID : String) : Integer </td></tr>
<tr><td align="left" balign="left"> + register(listener : RemoteEventListener, regFor : Integer, userId : String, sessionJobs : Vector&lt;&gt;, sessionID : String) : Integer </td></tr>
<tr><td align="left" balign="left"> + register(listener : RemoteEventListener, regFor : Integer, userId : String, sessionJobs : Vector&lt;&gt;) : Integer </td></tr>
<tr><td align="left" balign="left"> + deleteListener(id : Integer, regFor : Integer) </td></tr>
<tr><td align="left" balign="left"> + notify(ev : RemoteEvent) </td></tr>
<tr><td align="left" balign="left"> + appendJobToSession(ownerID : String, jobID : String, sessionType : int, sessionID : String) </td></tr>
		</table></td></tr>
		</table>>, URL="../SorcerNotifierProtocol.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Service
	c402826 [label=<<table title="sorcer.service.Service" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Service.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Service </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + service(exertion : Exertion, txn : Transaction) : Exertion </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Service.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Monitorable
	c402831 [label=<<table title="sorcer.service.Monitorable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Monitorable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Monitorable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + stop(ref : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + suspend(ref : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + resume(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + step(ex : Exertion) </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Monitorable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.ServiceProvider
	c402941 [label=<<table title="sorcer.core.provider.ServiceProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ServiceProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServiceProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> + COMPONENT : String </td></tr>
<tr><td align="left" balign="left"> # delegate : ProviderDelegate </td></tr>
<tr><td align="left" balign="left"> # threadManager : TaskManager </td></tr>
<tr><td align="left" balign="left"> # attributes : Set&lt;Entry&gt; </td></tr>
<tr><td align="left" balign="left"> + theContextMap : HashMap&lt;String, Context&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + DB_HOME : String </td></tr>
<tr><td align="left" balign="left"> + THREAD_MANAGEMNT : String </td></tr>
<tr><td align="left" balign="left"> + MAX_THREADS : String </td></tr>
<tr><td align="left" balign="left"> + MANAGER_TIMEOUT : String </td></tr>
<tr><td align="left" balign="left"> + LOAD_FACTOR : String </td></tr>
<tr><td align="left" balign="left"> + WAIT_INCREMENT : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ServiceProvider() </td></tr>
<tr><td align="left" balign="left"> + ServiceProvider(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + ServiceProvider(providerPropertiesFile : String) </td></tr>
<tr><td align="left" balign="left"> + getGrants(cl : Class&lt;?&gt;, principals : Principal[]) : Permission[] </td></tr>
<tr><td align="left" balign="left"> + grant(cl : Class&lt;?&gt;, principals : Principal[], permissions : Permission[]) </td></tr>
<tr><td align="left" balign="left"> + grantSupported() : boolean </td></tr>
<tr><td align="left" balign="left"> + getProxyVerifier() : TrustVerifier </td></tr>
<tr><td align="left" balign="left"> + getConstraints() : MethodConstraints </td></tr>
<tr><td align="left" balign="left"> + setConstraints(constraints : MethodConstraints) : RemoteMethodControl </td></tr>
<tr><td align="left" balign="left"> + getAdmin() : Object </td></tr>
<tr><td align="left" balign="left"> + setAdmin(proxy : Object) </td></tr>
<tr><td align="left" balign="left"> + getLookupAttributes() : Entry[] </td></tr>
<tr><td align="left" balign="left"> + addLookupAttributes(attrSets : Entry[]) </td></tr>
<tr><td align="left" balign="left"> + modifyLookupAttributes(attrSetTemplates : Entry[], attrSets : Entry[]) </td></tr>
<tr><td align="left" balign="left"> + getLookupGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + addLookupGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + removeLookupGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + setLookupGroups(groups : String[]) </td></tr>
<tr><td align="left" balign="left"> + getLookupLocators() : LookupLocator[] </td></tr>
<tr><td align="left" balign="left"> + addLookupLocators(locators : LookupLocator[]) </td></tr>
<tr><td align="left" balign="left"> + removeLookupLocators(locators : LookupLocator[]) </td></tr>
<tr><td align="left" balign="left"> + setLookupLocators(locators : LookupLocator[]) </td></tr>
<tr><td align="left" balign="left"> + unregister(impl : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getServiceProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + getProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + getInner() : Remote </td></tr>
<tr><td align="left" balign="left"> + setInner(innerProxy : Object) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + init(configOptions : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + getMainUIDescriptor() : UIDescriptor </td></tr>
<tr><td align="left" balign="left"> + getServiceUIEntries() : UIDescriptor[] </td></tr>
<tr><td align="left" balign="left"> + getServiceComponents() : Map&lt;?, ?&gt; </td></tr>
<tr><td align="left" balign="left"> + setServiceComponents(serviceComponents : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + isSpaceSecurityEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> + getContext(context : Context&lt;?&gt;) : Context&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getContextLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getProviderLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getRemoteLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + isReady(exertion : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> + getContextScript() : String </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getMethodContextScript(interfaceName : String, methodName : String) : String </td></tr>
<tr><td align="left" balign="left"> + currentContextList(interfaceName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + deleteContext(interfaceName : String, methodName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMethodContext(interfaceName : String, methodName : String) : Context&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + saveMethodContext(interfaceName : String, methodName : String, theContext : Context&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAccessorGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + setAccessorGroups(accessorGroups : String[]) </td></tr>
<tr><td align="left" balign="left"> + mutualExclusion() : boolean </td></tr>
<tr><td align="left" balign="left"> # doTimeKeeping(callTimeSec : double) </td></tr>
<tr><td align="left" balign="left"> # doThreadMonitor(serviceIdString : String) : String </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + init(propFile : String) </td></tr>
<tr><td align="left" balign="left"> + init(delegate : ProviderDelegate) </td></tr>
<tr><td align="left" balign="left"> + getProviderID() : ServiceID </td></tr>
<tr><td align="left" balign="left"> + serviceIDNotify(sid : ServiceID) </td></tr>
<tr><td align="left" balign="left"> + getDelegate() : ProviderDelegate </td></tr>
<tr><td align="left" balign="left"> + getLeastSignificantBits() : long </td></tr>
<tr><td align="left" balign="left"> + getMostSignificantBits() : long </td></tr>
<tr><td align="left" balign="left"> + isValidTask(task : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> + getInfo() : String </td></tr>
<tr><td align="left" balign="left"> + isValidMethod(name : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(method : String, context : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + invokeMethod(methodName : String, ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + doExertion(exertion : Exertion, txn : Transaction) : Exertion </td></tr>
<tr><td align="left" balign="left"> + service(exertion : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + service(exertion : Exertion, txn : Transaction) : Exertion </td></tr>
<tr><td align="left" balign="left"> + dropTask(task : ServiceExertion) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + dropJob(job : Job) : Job </td></tr>
<tr><td align="left" balign="left"> + addAttribute(attributes : Entry) </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Entry[] </td></tr>
<tr><td align="left" balign="left"> + getProperties() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getProviderProperties() : Properties </td></tr>
<tr><td align="left" balign="left"> + getProviderConfiguration() : Configuration </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + getGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getId() : Object </td></tr>
<tr><td align="left" balign="left"> + getProviderName() : String </td></tr>
<tr><td align="left" balign="left"> + restore() </td></tr>
<tr><td align="left" balign="left"> + loadConfiguration(filename : String) </td></tr>
<tr><td align="left" balign="left"> + hangup() </td></tr>
<tr><td align="left" balign="left"> + getScratchDir() : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(scratchDirNamePrefix : String) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(context : Context&lt;&gt;, scratchDirNamePrefix : String) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchDir(context : Context&lt;&gt;) : File </td></tr>
<tr><td align="left" balign="left"> + getScratchURL(scratchFile : File) : URL </td></tr>
<tr><td align="left" balign="left"> + getProperty(key : String) : String </td></tr>
<tr><td align="left" balign="left"> + getProperty(key : String, defaultValue : String) : String </td></tr>
<tr><td align="left" balign="left"> + notifyInformation(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, message : String, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyExceptionWithStackTrace(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyWarning(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + stop(ref : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + suspend(ref : UEID, subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + resume(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + step(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + changed(context : Context&lt;?&gt;, aspect : Object) </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + isBusy() : boolean </td></tr>
<tr><td align="left" balign="left"> + destroyNode() </td></tr>
<tr><td align="left" balign="left"> + getReferentUuid() : Uuid </td></tr>
<tr><td align="left" balign="left"> + updatePolicy(policy : Policy) </td></tr>
<tr><td align="left" balign="left"> + loadContextDatabase() : boolean </td></tr>
<tr><td align="left" balign="left"> # setupThreadManager() </td></tr>
<tr><td align="left" balign="left"> + getJavaSystemProperties() : Properties </td></tr>
<tr><td align="left" balign="left"> + initSpaceSupport() </td></tr>
<tr><td align="left" balign="left"> + isContextValid(dataContext : Context&lt;?&gt;, forSignature : Signature) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + doMonitoredTask(task : Exertion, txn : Transaction) : Exertion </td></tr>
<tr><td align="left" balign="left"> + setServiceBeanListener(serviceBeanListener : IServiceBeanListener) </td></tr>
		</table></td></tr>
		</table>>, URL="./ServiceProvider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.Provider
	c402948 [label=<<table title="sorcer.core.provider.Provider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Provider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Provider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getProviderID() : ServiceID </td></tr>
<tr><td align="left" balign="left"> + getProviderName() : String </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Entry[] </td></tr>
<tr><td align="left" balign="left"> + getProperties() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getProviderConfiguration() : Configuration </td></tr>
<tr><td align="left" balign="left"> + init() </td></tr>
<tr><td align="left" balign="left"> + init(propFile : String) </td></tr>
<tr><td align="left" balign="left"> + restore() </td></tr>
<tr><td align="left" balign="left"> + mutualExclusion() : boolean </td></tr>
<tr><td align="left" balign="left"> + getProperty(property : String) : String </td></tr>
<tr><td align="left" balign="left"> + getGroups() : String[] </td></tr>
<tr><td align="left" balign="left"> + getInfo() : String </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + isBusy() : boolean </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + destroyNode() </td></tr>
<tr><td align="left" balign="left"> + notifyInformation(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, message : String, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyExceptionWithStackTrace(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyException(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyWarning(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, e : Exception) </td></tr>
<tr><td align="left" balign="left"> + notifyFailure(task : Exertion, message : String) </td></tr>
<tr><td align="left" balign="left"> + getJavaSystemProperties() : Properties </td></tr>
<tr><td align="left" balign="left"> + changed(ctx : Context&lt;?&gt;, aspect : Object) </td></tr>
<tr><td align="left" balign="left"> + getProxy() : Object </td></tr>
<tr><td align="left" balign="left"> + isContextValid(dataContext : Context&lt;?&gt;, forSignature : Signature) : boolean </td></tr>
<tr><td align="left" balign="left"> + updatePolicy(policy : Policy) </td></tr>
<tr><td align="left" balign="left"> + getLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getContextLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getProviderLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + getRemoteLogger() : Logger </td></tr>
<tr><td align="left" balign="left"> + addAttribute(attribute : Entry) </td></tr>
		</table></td></tr>
		</table>>, URL="./Provider.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.SorcerNotifierProtocol implements sorcer.core.provider.Provider
	c402948:p -> c402700:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.ServiceProvider implements sorcer.core.provider.Provider
	c402948:p -> c402941:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.Provider implements sorcer.service.Service
	c402826:p -> c402948:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.Provider implements sorcer.service.Monitorable
	c402831:p -> c402948:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.Provider implements net.jini.admin.Administrable
	c403423:p -> c402948:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.Provider implements java.rmi.Remote
	c403424:p -> c402948:p [dir=back,arrowtail=empty,style=dashed];
	// java.rmi.Remote
	c403424 [label=<<table title="java.rmi.Remote" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/rmi/Remote.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Remote </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/rmi/Remote.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// net.jini.admin.Administrable
	c403423 [label=<<table title="net.jini.admin.Administrable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="https://river.apache.org/doc/api/net/jini/admin/Administrable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Administrable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getAdmin() : Object </td></tr>
		</table></td></tr>
		</table>>, URL="https://river.apache.org/doc/api/net/jini/admin/Administrable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

