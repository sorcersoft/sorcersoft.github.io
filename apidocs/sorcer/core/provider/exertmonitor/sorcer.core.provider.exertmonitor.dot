#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.provider.exertmonitor.ExertMonitor
	c10682 [label=<<table title="sorcer.core.provider.exertmonitor.ExertMonitor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExertMonitor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExertMonitor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExertMonitor(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + register(lstnr : RemoteEventListener, ex : Exertion, duration : long) : Exertion </td></tr>
<tr><td align="left" balign="left"> + init(cookie : Uuid, mntrbl : Monitorable, duration : long, timeout : long) : Lease </td></tr>
<tr><td align="left" balign="left"> + init(cookie : Uuid, duration : long, timeout : long) </td></tr>
<tr><td align="left" balign="left"> + init(cookie : Uuid, mntrbl : Monitorable) : Lease </td></tr>
<tr><td align="left" balign="left"> + getState(cookie : Uuid) : int </td></tr>
<tr><td align="left" balign="left"> + getMonitorableExertionInfo(state : Exec.State, principal : Principal) : Map&lt;Uuid, ExertionInfo&gt; </td></tr>
<tr><td align="left" balign="left"> + getMonitorableExertion(id : Uuid, principal : Principal) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getMonitorableExertion(cookie : UEID, principal : Principal) : Exertion </td></tr>
<tr><td align="left" balign="left"> + update(cookie : Uuid, ctx : Context&lt;&gt;, controlContext : IControlContext, aspect : int) </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + persist(session : MonitorManagementSession) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSession(key : UuidKey) : MonitorSession </td></tr>
<tr><td align="left" balign="left"> + getSession(key : Uuid) : MonitorSession </td></tr>
		</table></td></tr>
		</table>>, URL="./ExertMonitor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.exertmonitor.MonitorSession
	c10683 [label=<<table title="sorcer.core.provider.exertmonitor.MonitorSession" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MonitorSession.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MonitorSession </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + mLandlord : MonitorLandlord </td></tr>
<tr><td align="left" balign="left"> + sessionManager : MonitoringManagement </td></tr>
<tr><td align="left" balign="left"> + eventPool : ExecutorService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MonitorSession(ex : Exertion, listener : RemoteEventListener, duration : long) </td></tr>
<tr><td align="left" balign="left"> + getListener() : RemoteEventListener </td></tr>
<tr><td align="left" balign="left"> + getSessions() : Map&lt;Uuid, MonitorManagementSession&gt; </td></tr>
<tr><td align="left" balign="left"> + init(executor : Monitorable, duration : long, timeout : long) : Lease </td></tr>
<tr><td align="left" balign="left"> + init(duration : long, timeout : long) </td></tr>
<tr><td align="left" balign="left"> + init(executor : Monitorable) : Lease </td></tr>
<tr><td align="left" balign="left"> + update(ctx : Context&lt;?&gt;, controlContext : IControlContext) </td></tr>
<tr><td align="left" balign="left"> + done(ctx : Context&lt;?&gt;, controlContext : IControlContext) </td></tr>
<tr><td align="left" balign="left"> + failed(ctx : Context&lt;?&gt;, controlContext : IControlContext) </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + isInitial() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInSpace() : boolean </td></tr>
<tr><td align="left" balign="left"> + isRunning() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDone() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSuspended() : boolean </td></tr>
<tr><td align="left" balign="left"> + isError() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFailed() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSessionResource(cookie : Uuid) : MonitorSession </td></tr>
<tr><td align="left" balign="left"> + setExpiration(expiration : long) </td></tr>
<tr><td align="left" balign="left"> + setTimeout(timeoutDuration : long) </td></tr>
<tr><td align="left" balign="left"> + getTimeout() : long </td></tr>
<tr><td align="left" balign="left"> + getExpiration() : long </td></tr>
<tr><td align="left" balign="left"> + leaseCancelled() </td></tr>
<tr><td align="left" balign="left"> + timedOut() </td></tr>
<tr><td align="left" balign="left"> + setCookie(cookie : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getCookie() : Uuid </td></tr>
<tr><td align="left" balign="left"> + getInitialExertion() : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + getRuntimeExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./MonitorSession.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.exertmonitor.IMonitorSession
	c10684 [label=<<table title="sorcer.core.provider.exertmonitor.IMonitorSession" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IMonitorSession.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IMonitorSession </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setExpiration(expiration : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setTimeout(timeoutDuration : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTimeout() : long </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getExpiration() : long </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + leaseCancelled() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + timedOut() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getCookie() : Uuid </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + toString() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getInitialExertion() : Exertion </font></td></tr>
		</table></td></tr>
		</table>>, URL="./IMonitorSession.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

