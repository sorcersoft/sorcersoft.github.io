#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.provider.exertmonitor.MonitorSession
	c209965 [label=<<table title="sorcer.core.provider.exertmonitor.MonitorSession" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./MonitorSession.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MonitorSession </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + mLandlord : MonitorLandlord </td></tr>
<tr><td align="left" balign="left"> + sessionManager : MonitoringManagement </td></tr>
<tr><td align="left" balign="left"> + eventPool : ExecutorService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MonitorSession(ex : Exertion, listener : RemoteEventListener, duration : long) </td></tr>
<tr><td align="left" balign="left"> + restore() </td></tr>
<tr><td align="left" balign="left"> + getListener() : RemoteEventListener </td></tr>
<tr><td align="left" balign="left"> + getSessions() : Map&lt;Uuid, MonitorSession&gt; </td></tr>
<tr><td align="left" balign="left"> + init(executor : Monitorable, duration : long, timeout : long) : Lease </td></tr>
<tr><td align="left" balign="left"> + init(duration : long, timeout : long) </td></tr>
<tr><td align="left" balign="left"> + init(executor : Monitorable) : Lease </td></tr>
<tr><td align="left" balign="left"> + update(ctx : Context&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + done(ctx : Context&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + failed(ctx : Context&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + isInitial() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInSpace() : boolean </td></tr>
<tr><td align="left" balign="left"> + isRunning() : boolean </td></tr>
<tr><td align="left" balign="left"> + isDone() : boolean </td></tr>
<tr><td align="left" balign="left"> + isSuspended() : boolean </td></tr>
<tr><td align="left" balign="left"> + isError() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFailed() : boolean </td></tr>
<tr><td align="left" balign="left"> + getSessionResource(cookie : Uuid) : MonitorSession </td></tr>
<tr><td align="left" balign="left"> + setExpiration(expiration : long) </td></tr>
<tr><td align="left" balign="left"> + setTimeout(timeoutDuration : long) </td></tr>
<tr><td align="left" balign="left"> + getTimeout() : long </td></tr>
<tr><td align="left" balign="left"> + getExpiration() : long </td></tr>
<tr><td align="left" balign="left"> + leaseCancelled() </td></tr>
<tr><td align="left" balign="left"> + timedOut() </td></tr>
<tr><td align="left" balign="left"> + setCookie(cookie : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getCookie() : Uuid </td></tr>
<tr><td align="left" balign="left"> + getInitialExertion() : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + getRuntimeExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./MonitorSession.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.exertmonitor.IMonitorSession
	c209966 [label=<<table title="sorcer.core.provider.exertmonitor.IMonitorSession" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./IMonitorSession.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IMonitorSession </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setExpiration(expiration : long) </td></tr>
<tr><td align="left" balign="left"> + setTimeout(timeoutDuration : long) </td></tr>
<tr><td align="left" balign="left"> + getTimeout() : long </td></tr>
<tr><td align="left" balign="left"> + getExpiration() : long </td></tr>
<tr><td align="left" balign="left"> + leaseCancelled() </td></tr>
<tr><td align="left" balign="left"> + timedOut() </td></tr>
<tr><td align="left" balign="left"> + getCookie() : Uuid </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getInitialExertion() : Exertion </td></tr>
		</table></td></tr>
		</table>>, URL="./IMonitorSession.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.exertmonitor.lease.MonitorLandlord.MonitorLeasedResource
	c210165 [label=<<table title="sorcer.core.provider.exertmonitor.lease.MonitorLandlord.MonitorLeasedResource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./lease/MonitorLandlord.MonitorLeasedResource.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MonitorLeasedResource </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + leaseCancelled() </td></tr>
<tr><td align="left" balign="left"> + setTimeout(timeoutDuration : long) </td></tr>
<tr><td align="left" balign="left"> + getTimeout() : long </td></tr>
<tr><td align="left" balign="left"> + timedOut() </td></tr>
		</table></td></tr>
		</table>>, URL="./lease/MonitorLandlord.MonitorLeasedResource.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.provider.exertmonitor.MonitorSession extends java.util.ArrayList<sorcer.core.provider.exertmonitor.MonitorSession>
	c210416:p -> c209965:p [dir=back,arrowtail=empty];
	//sorcer.core.provider.exertmonitor.MonitorSession implements sorcer.core.provider.exertmonitor.lease.MonitorLandlord.MonitorLeasedResource
	c210165:p -> c209965:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.exertmonitor.MonitorSession implements java.io.Serializable
	c210417:p -> c209965:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.provider.exertmonitor.MonitorSession implements sorcer.core.provider.exertmonitor.IMonitorSession
	c209966:p -> c209965:p [dir=back,arrowtail=empty,style=dashed];
	// java.io.Serializable
	c210417 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Serializable </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.ArrayList<E>
	c210416 [label=<<table title="java.util.ArrayList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayList&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayList(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + ArrayList() </td></tr>
<tr><td align="left" balign="left"> + ArrayList(arg0 : Collection&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + trimToSize() </td></tr>
<tr><td align="left" balign="left"> + ensureCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + set(arg0 : int, arg1 : E) : E </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : int, arg1 : E) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : int, arg1 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # removeRange(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + listIterator(arg0 : int) : ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator() : ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + subList(arg0 : int, arg1 : int) : List&lt;E&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

