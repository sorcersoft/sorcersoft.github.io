#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.provider.logger.RemoteLoggerManager
	c16520 [label=<<table title="sorcer.core.provider.logger.RemoteLoggerManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RemoteLoggerManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RemoteLoggerManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + logFile : RandomAccessFile </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RemoteLoggerManager(args : String[], lifeCycle : LifeCycle) </td></tr>
<tr><td align="left" balign="left"> + init(args : String[]) </td></tr>
<tr><td align="left" balign="left"> + getLogNames() : String[] </td></tr>
<tr><td align="left" balign="left"> + publish(record : LogRecord) </td></tr>
<tr><td align="left" balign="left"> + getLog(fileName : String) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + readConfiguration(is : InputStream) </td></tr>
<tr><td align="left" balign="left"> + getLoggers() : List&lt;LoggingConfig&gt; </td></tr>
<tr><td align="left" balign="left"> + getLoggerLevel(loggerName : String) : Level </td></tr>
<tr><td align="left" balign="left"> + deleteLog(loggerName : String) </td></tr>
<tr><td align="left" balign="left"> + getLogComments(filename : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./RemoteLoggerManager.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.logger.LogFileHandler
	c16521 [label=<<table title="sorcer.core.provider.logger.LogFileHandler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LogFileHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LogFileHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LogFileHandler(logFile : File) </td></tr>
<tr><td align="left" balign="left"> + publish(record : LogRecord) </td></tr>
<tr><td align="left" balign="left"> + openFile() </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
		</table></td></tr>
		</table>>, URL="./LogFileHandler.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.logger.RemoteHandler
	c16522 [label=<<table title="sorcer.core.provider.logger.RemoteHandler" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./RemoteHandler.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RemoteHandler </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RemoteHandler() </td></tr>
<tr><td align="left" balign="left"> + RemoteHandler(level : Level, name : String) </td></tr>
<tr><td align="left" balign="left"> + publish(record : LogRecord) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + flush() </td></tr>
		</table></td></tr>
		</table>>, URL="./RemoteHandler.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.logger.LoggingConfig
	c16523 [label=<<table title="sorcer.core.provider.logger.LoggingConfig" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LoggingConfig.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LoggingConfig </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LoggingConfig(logger : String, lev : Level) </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getLogger() : String </td></tr>
<tr><td align="left" balign="left"> + getLevel() : Level </td></tr>
<tr><td align="left" balign="left"> + setLevel(lev : Level) </td></tr>
		</table></td></tr>
		</table>>, URL="./LoggingConfig.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.provider.logger.LogFilter
	c16524 [label=<<table title="sorcer.core.provider.logger.LogFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./LogFilter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LogFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + levels : Level[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LogFilter(file : File) </td></tr>
<tr><td align="left" balign="left"> + LogFilter(input : List&lt;String&gt;) </td></tr>
<tr><td align="left" balign="left"> + textFilter(text : String, level : String) : List&lt;String&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./LogFilter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

