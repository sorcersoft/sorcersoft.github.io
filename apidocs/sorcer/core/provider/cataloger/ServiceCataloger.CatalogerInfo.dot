#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.provider.cataloger.ServiceCataloger.CatalogerInfo
	c410208 [label=<<table title="sorcer.core.provider.cataloger.ServiceCataloger.CatalogerInfo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ServiceCataloger.CatalogerInfo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CatalogerInfo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceCataloger.CatalogerInfo() </td></tr>
<tr><td align="left" balign="left"> + setCataloger(cataloger : Cataloger) </td></tr>
<tr><td align="left" balign="left"> + addObserver(observer : Observer) </td></tr>
<tr><td align="left" balign="left"> + put(key : ServiceCataloger.CatalogerInfo.InterfaceList, value : List&lt;ServiceItem&gt;) : List&lt;ServiceItem&gt; </td></tr>
<tr><td align="left" balign="left"> + get(interfaceList : ServiceCataloger.CatalogerInfo.InterfaceList) : List&lt;ServiceItem&gt; </td></tr>
<tr><td align="left" balign="left"> + getAll(interfaceList : ServiceCataloger.CatalogerInfo.InterfaceList) : List&lt;ServiceItem&gt; </td></tr>
<tr><td align="left" balign="left"> + addServiceItem(sItem : ServiceItem) </td></tr>
<tr><td align="left" balign="left"> + removeServiceItem(sItem : ServiceItem) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getServiceItem(interfaces : Class&lt;&gt;[], providerName : String) : ServiceItem </td></tr>
<tr><td align="left" balign="left"> + getServiceItem(serviceID : ServiceID) : ServiceItem </td></tr>
<tr><td align="left" balign="left"> + getServiceItems(interfaces : Class&lt;&gt;[], providerName : String, maxItems : int) : ServiceItem[] </td></tr>
<tr><td align="left" balign="left"> + getProviderMethods() : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + getInterfaceList(providerName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getMethodsList(providerName : String, interfaceName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getContext(providerName : String, interfaceName : String, methodName : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + saveContext(providerName : String, interfaceName : String, methodName : String, theContext : Context&lt;&gt;) : Boolean </td></tr>
<tr><td align="left" balign="left"> + deleteContext(providerName : String, interfaceName : String, methodName : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + getSavedContextList(providerName : String, interfaceName : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + exertService(providerName : String, serviceType : Class&lt;&gt;, methodName : String, theContext : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getContext(serviceType : Class&lt;&gt;, method : String) : Context&lt;&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./ServiceCataloger.CatalogerInfo.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.provider.cataloger.ServiceCataloger.CatalogerInfo extends java.util.concurrent.ConcurrentHashMap<sorcer.core.provider.cataloger.ServiceCataloger.CatalogerInfo.InterfaceList, java.util.List<net.jini.core.lookup.ServiceItem>>
	c410244:p -> c410208:p [dir=back,arrowtail=empty];
	//sorcer.core.provider.cataloger.ServiceCataloger.CatalogerInfo implements java.io.Serializable
	c410245:p -> c410208:p [dir=back,arrowtail=empty,style=dashed];
	// java.io.Serializable
	c410245 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Serializable </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.concurrent.ConcurrentHashMap<K, V>
	c410244 [label=<<table title="java.util.concurrent.ConcurrentHashMap" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConcurrentHashMap&lt;K, V&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConcurrentHashMap(arg0 : int, arg1 : float, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + ConcurrentHashMap(arg0 : int, arg1 : float) </td></tr>
<tr><td align="left" balign="left"> + ConcurrentHashMap(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + ConcurrentHashMap() </td></tr>
<tr><td align="left" balign="left"> + ConcurrentHashMap(arg0 : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : Object) : V </td></tr>
<tr><td align="left" balign="left"> + containsKey(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsValue(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + put(arg0 : K, arg1 : V) : V </td></tr>
<tr><td align="left" balign="left"> + putIfAbsent(arg0 : K, arg1 : V) : V </td></tr>
<tr><td align="left" balign="left"> + putAll(arg0 : Map&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : V </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object, arg1 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : K, arg1 : V, arg2 : V) : boolean </td></tr>
<tr><td align="left" balign="left"> + replace(arg0 : K, arg1 : V) : V </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + keySet() : Set&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + values() : Collection&lt;V&gt; </td></tr>
<tr><td align="left" balign="left"> + entrySet() : Set&lt;Map.Entry&lt;K, V&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + keys() : Enumeration&lt;K&gt; </td></tr>
<tr><td align="left" balign="left"> + elements() : Enumeration&lt;V&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ConcurrentHashMap.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

