#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.service.Evaluation<T>
	c404138 [label=<<table title="sorcer.service.Evaluation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Evaluation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Evaluation&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + asis() : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getValue(entries : Arg[]) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + substitute(entries : Arg[]) : Evaluation&lt;T&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Evaluation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Identity
	c404155 [label=<<table title="sorcer.service.Identity" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Identity.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Identity </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # id : Uuid </td></tr>
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # characteristicValue : Object </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Identity() </td></tr>
<tr><td align="left" balign="left"> + getId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setId(uuid : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getCharacteristicValue() : Object </td></tr>
<tr><td align="left" balign="left"> + setCharacteristicValue(characteristicValue : Object) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Identity.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Mappable<T>
	c404173 [label=<<table title="sorcer.service.Mappable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Mappable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Mappable&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getValue(path : String, args : Arg[]) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + asis(path : String) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + putValue(path : String, value : Object) : T </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Mappable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Invocation<T>
	c404175 [label=<<table title="sorcer.service.Invocation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Invocation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Invocation&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + invoke(context : Context&lt;T&gt;, entries : Arg[]) : T </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Invocation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Setter
	c404183 [label=<<table title="sorcer.service.Setter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Setter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Setter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setValue(value : Object) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isPersistent() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Setter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Scopable
	c404188 [label=<<table title="sorcer.service.Scopable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Scopable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Scopable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getScope() : Object </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setScope(scope : Object) </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Scopable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Arg
	c404197 [label=<<table title="sorcer.service.Arg" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/Arg.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Arg </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/Arg.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.modeling.Variability<T>
	c404213 [label=<<table title="sorcer.service.modeling.Variability" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../../service/modeling/Variability.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Variability&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getType() : Variability.Type </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getDescription() : ApplicationDescription </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getValueType() : Class&lt;?&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getArgs() : ArgSet </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addArgs(set : ArgSet) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getArg(varName : String) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isValueCurrent() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + valueChanged(obj : Object) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + valueChanged() </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../../service/modeling/Variability.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.model.par.Agent<T>
	c404362 [label=<<table title="sorcer.core.context.model.par.Agent" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Agent.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Agent&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Agent(name : String, agentURLs : URL[]) </td></tr>
<tr><td align="left" balign="left"> + Agent(name : String, className : String, agentURLs : URL[]) </td></tr>
<tr><td align="left" balign="left"> + evaluate(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="./Agent.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.model.par.Par<T>
	c404365 [label=<<table title="sorcer.core.context.model.par.Par" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Par.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Par&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # value : T </td></tr>
<tr><td align="left" balign="left"> # scope : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # mappable : Mappable&lt;&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Par(parname : String) </td></tr>
<tr><td align="left" balign="left"> + Par(identifiable : Identifiable) </td></tr>
<tr><td align="left" balign="left"> + Par(parname : String, argument : T) </td></tr>
<tr><td align="left" balign="left"> + Par(parname : String, argument : Object, scope : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + Par(name : String, path : String, map : Mappable&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + setValue(value : Object) </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + substitute(parameters : Arg[]) : Evaluation&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getScope() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setScope(scope : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + compareTo(o : T) : int </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getPerturbedValue(varName : String) : T </td></tr>
<tr><td align="left" balign="left"> + getPerturbation() : double </td></tr>
<tr><td align="left" balign="left"> + getType() : Variability.Type </td></tr>
<tr><td align="left" balign="left"> + getDescription() : ApplicationDescription </td></tr>
<tr><td align="left" balign="left"> + getValueType() : Class&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getArgs() : ArgSet </td></tr>
<tr><td align="left" balign="left"> + getArg(varName : String) : T </td></tr>
<tr><td align="left" balign="left"> + getContextable() : Mappable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isValueCurrent() : boolean </td></tr>
<tr><td align="left" balign="left"> + valueChanged(obj : Object) </td></tr>
<tr><td align="left" balign="left"> + valueChanged() </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : Principal </td></tr>
<tr><td align="left" balign="left"> + getDbURL() : URL </td></tr>
<tr><td align="left" balign="left"> + getURL() : URL </td></tr>
<tr><td align="left" balign="left"> + setDbURL(dbURL : URL) </td></tr>
<tr><td align="left" balign="left"> + isPersistent() : boolean </td></tr>
<tr><td align="left" balign="left"> + setPersistent(state : boolean) </td></tr>
<tr><td align="left" balign="left"> + getMappable() : Mappable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setMappable(mappable : Mappable&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + isMappable() : boolean </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
<tr><td align="left" balign="left"> + addArgs(set : ArgSet) </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + equals(object : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + setScope(scope : Object) </td></tr>
		</table></td></tr>
		</table>>, URL="./Par.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.service.Identity implements java.io.Serializable
	c404671:p -> c404155:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.Setter implements java.io.Serializable
	c404671:p -> c404183:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.modeling.Variability<T> implements sorcer.service.Evaluation<T>
	c404138:p -> c404213:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.modeling.Variability<T> implements sorcer.service.Setter
	c404183:p -> c404213:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.service.modeling.Variability<T> implements java.io.Serializable
	c404671:p -> c404213:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Agent<T> extends sorcer.core.context.model.par.Par<T>
	c404365:p -> c404362:p [dir=back,arrowtail=empty];
	//sorcer.core.context.model.par.Agent<T> implements java.io.Serializable
	c404671:p -> c404362:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> extends sorcer.service.Identity
	c404155:p -> c404365:p [dir=back,arrowtail=empty];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.modeling.Variability<T>
	c404213:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Arg
	c404197:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Mappable<T>
	c404173:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Evaluation<T>
	c404138:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Invocation<T>
	c404175:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Setter
	c404183:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements sorcer.service.Scopable
	c404188:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements java.lang.Comparable<T>
	c404672:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.context.model.par.Par<T> implements java.io.Serializable
	c404671:p -> c404365:p [dir=back,arrowtail=empty,style=dashed];
	// java.io.Serializable
	c404671 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Serializable </td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/io/Serializable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Comparable<T>
	c404672 [label=<<table title="java.lang.Comparable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Comparable&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + compareTo(arg0 : T) : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="http://docs.oracle.com/javase/7/docs/api/java/lang/Comparable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

