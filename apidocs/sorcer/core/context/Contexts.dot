#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.context.Contexts
	c190100 [label=<<table title="sorcer.core.context.Contexts" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./Contexts.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Contexts </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Contexts() </td></tr>
<tr><td align="left" balign="left"> + getValuesStartsWith(context : Context&lt;&gt;, subpath : String) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamedInValues(context : Context&lt;&gt;) : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamedOutValues(context : Context&lt;&gt;) : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getPrefixedInValues(context : Context&lt;&gt;) : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getKeysStartsWith(context : Context&lt;&gt;, subpath : String) : ArrayList&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + map(fromPath : String, fromContext : Context&lt;&gt;, toPath : String, toContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + getFormattedOut(sc : Context&lt;&gt;, isHTML : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + markIn(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markOut(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markInout(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markOutPipe(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markInPipe(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValueAt(cxt : Context&lt;&gt;, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getValuesAt(cxt : Context&lt;&gt;, index : int) : Object[] </td></tr>
<tr><td align="left" balign="left"> + getInValueAt(cxt : Context&lt;&gt;, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getOutValueAt(cxt : Context&lt;&gt;, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getInoutValueAt(cxt : Context&lt;&gt;, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putInValueAt(cntxt : Context&lt;&gt;, path : String, value : Object, index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + getContextNodes(context : Context&lt;&gt;) : ContextNode[] </td></tr>
<tr><td align="left" balign="left"> + getAllContextNodes(context : Context&lt;&gt;) : ContextNode[] </td></tr>
<tr><td align="left" balign="left"> + getTaskContextNodes(task : Exertion) : ContextNode[] </td></tr>
<tr><td align="left" balign="left"> + getMarkedConextNodes(sc : Context&lt;&gt;, association : String) : ContextNode[] </td></tr>
<tr><td align="left" balign="left"> + getMarkedValues(sc : Context&lt;&gt;, association : String) : Object[] </td></tr>
<tr><td align="left" balign="left"> + hasMarkedValue(sc : Context&lt;&gt;, association : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getMarkedValue(sc : Context&lt;&gt;, association : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getInPaths(cntxt : Context&lt;&gt;) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamedInPaths(cntxt : Context&lt;&gt;) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPrefixedInPaths(cntxt : Context&lt;&gt;) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPrefixedInPaths(cntxt : Context&lt;&gt;, prefixPath : String) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutPaths(cntxt : Context&lt;&gt;) : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getNamedOutPaths(cntxt : Context&lt;&gt;) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPrefixedOutPaths(cntxt : Context&lt;&gt;) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPrefixedOutPaths(cntxt : Context&lt;&gt;, prefix : String) : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getInPathsMap(cntxt : Context&lt;&gt;) : Map&lt;String, String&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutPathsMap(cntxt : Context&lt;&gt;) : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + copyValue(fromContext : Context&lt;&gt;, fromPath : String, toContext : Context&lt;&gt;, toPath : String) </td></tr>
<tr><td align="left" balign="left"> + putOutValue(cntxt : Context&lt;&gt;, path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putInValue(cntxt : Context&lt;&gt;, path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putOutValue(cntxt : Context&lt;&gt;, path : String, value : Object, association : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putInValue(cntxt : Context&lt;&gt;, path : String, value : Object, association : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getContextParameterPath(contextParameter : String) : String </td></tr>
<tr><td align="left" balign="left"> + getContextParameterID(contextParameter : String) : String </td></tr>
<tr><td align="left" balign="left"> + getMarkedPaths(cntxt : Context&lt;&gt;, association : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + checkIfPathBeginsWith(context : Context&lt;&gt;, path : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSimpleAssociations(context : Context&lt;&gt;, key : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getDirection(context : Context&lt;&gt;, path : String) : String </td></tr>
		</table></td></tr>
		</table>>, URL="./Contexts.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

