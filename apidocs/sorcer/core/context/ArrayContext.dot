#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.context.ServiceContext<T>
	c62178 [label=<<table title="sorcer.core.context.ServiceContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ServiceContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ServiceContext&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # subjectPath : String </td></tr>
<tr><td align="left" balign="left"> # subjectValue : Object </td></tr>
<tr><td align="left" balign="left"> # returnPath : ReturnPath&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # returnJobPath : ReturnPath&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> # execPath : ExecPath </td></tr>
<tr><td align="left" balign="left"> # contextChanged : boolean </td></tr>
<tr><td align="left" balign="left"> # argsPath : String </td></tr>
<tr><td align="left" balign="left"> # parameterTypesPath : String </td></tr>
<tr><td align="left" balign="left"> # targetPath : String </td></tr>
<tr><td align="left" balign="left"> # contextId : Uuid </td></tr>
<tr><td align="left" balign="left"> # parentPath : String </td></tr>
<tr><td align="left" balign="left"> # parentId : Uuid </td></tr>
<tr><td align="left" balign="left"> # isShared : boolean </td></tr>
<tr><td align="left" balign="left"> # creationDate : String </td></tr>
<tr><td align="left" balign="left"> # lastUpdateDate : String </td></tr>
<tr><td align="left" balign="left"> # description : String </td></tr>
<tr><td align="left" balign="left"> # scopeCode : int </td></tr>
<tr><td align="left" balign="left"> # ownerId : String </td></tr>
<tr><td align="left" balign="left"> # subjectId : String </td></tr>
<tr><td align="left" balign="left"> # project : String </td></tr>
<tr><td align="left" balign="left"> # accessClass : String </td></tr>
<tr><td align="left" balign="left"> # exportControl : String </td></tr>
<tr><td align="left" balign="left"> # goodUntilDate : String </td></tr>
<tr><td align="left" balign="left"> # domainId : String </td></tr>
<tr><td align="left" balign="left"> # subdomainId : String </td></tr>
<tr><td align="left" balign="left"> # domainName : String </td></tr>
<tr><td align="left" balign="left"> # subdomainName : String </td></tr>
<tr><td align="left" balign="left"> # isRevaluable : boolean </td></tr>
<tr><td align="left" balign="left"> # dbUrl : String </td></tr>
<tr><td align="left" balign="left"> # prefix : String </td></tr>
<tr><td align="left" balign="left"> # entryLists : List&lt;EntryList&gt; </td></tr>
<tr><td align="left" balign="left"> # version : float </td></tr>
<tr><td align="left" balign="left"> # delPathIds : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # metacontext : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # exertion : Exertion </td></tr>
<tr><td align="left" balign="left"> # currentSelector : String </td></tr>
<tr><td align="left" balign="left"> # currentPrefix : String </td></tr>
<tr><td align="left" balign="left"> + isPersistantTaskAssociated : boolean </td></tr>
<tr><td align="left" balign="left"> # principal : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + cntxtAccessor : ContextAccessor </td></tr>
<tr><td align="left" balign="left"> + EMPTY_LEAF : String </td></tr>
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ServiceContext() </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(name : String) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(name : String, subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(cntxt : Context&lt;T&gt;) </td></tr>
<tr><td align="left" balign="left"> + ServiceContext(object : Object) </td></tr>
<tr><td align="left" balign="left"> + isRevaluable() : boolean </td></tr>
<tr><td align="left" balign="left"> + setRevaluable(isRevaluable : boolean) </td></tr>
<tr><td align="left" balign="left"> + setName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getId() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setId(contextID : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getParentPath() : String </td></tr>
<tr><td align="left" balign="left"> + setParentPath(path : String) </td></tr>
<tr><td align="left" balign="left"> + getParentID() : Uuid </td></tr>
<tr><td align="left" balign="left"> + setParentID(id : Uuid) </td></tr>
<tr><td align="left" balign="left"> + getCreationDate() : String </td></tr>
<tr><td align="left" balign="left"> + setCreationDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getLastUpdateDate() : String </td></tr>
<tr><td align="left" balign="left"> + setLastUpdateDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getDescription() : String </td></tr>
<tr><td align="left" balign="left"> + setDescription(text : String) </td></tr>
<tr><td align="left" balign="left"> + getScope() : int </td></tr>
<tr><td align="left" balign="left"> + setScopeCode(scope : int) </td></tr>
<tr><td align="left" balign="left"> + getOwnerID() : String </td></tr>
<tr><td align="left" balign="left"> + setOwnerID(id : String) </td></tr>
<tr><td align="left" balign="left"> + setSubjectID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubjectID() : String </td></tr>
<tr><td align="left" balign="left"> + getExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + setProject(projectName : String) </td></tr>
<tr><td align="left" balign="left"> + getProject() : String </td></tr>
<tr><td align="left" balign="left"> + setAccessClass(acessClass : String) </td></tr>
<tr><td align="left" balign="left"> + getAccessClass() : String </td></tr>
<tr><td align="left" balign="left"> + setExportControl(exportControl : String) </td></tr>
<tr><td align="left" balign="left"> + getExportControl() : String </td></tr>
<tr><td align="left" balign="left"> + getGoodUntilDate() : String </td></tr>
<tr><td align="left" balign="left"> + setGoodUntilDate(date : String) </td></tr>
<tr><td align="left" balign="left"> + getDomainID() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainID() : String </td></tr>
<tr><td align="left" balign="left"> + setSubdomainID(id : String) </td></tr>
<tr><td align="left" balign="left"> + getDomainName() : String </td></tr>
<tr><td align="left" balign="left"> + setDomainName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getSubdomainName() : String </td></tr>
<tr><td align="left" balign="left"> + setSubdomainName(name : String) </td></tr>
<tr><td align="left" balign="left"> + getPrincipal() : SorcerPrincipal </td></tr>
<tr><td align="left" balign="left"> + setPrincipal(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getDelPathIds() : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getVersion() : float </td></tr>
<tr><td align="left" balign="left"> + setVersion(version : float) </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue0(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + inPaths() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + outPaths() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValueEndsWith(name : String) : T </td></tr>
<tr><td align="left" balign="left"> + getValueStartsWith(name : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : T </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object, association : String) : Object </td></tr>
<tr><td align="left" balign="left"> + map(fromPath : String, toPath : String, toContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + isShared() : boolean </td></tr>
<tr><td align="left" balign="left"> + removeLink(path : String) </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, cntxt : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, cntxt : Context&lt;&gt;, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, cntxt : Context&lt;&gt;) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, id : String, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + putLink(name : String, path : String, id : String, version : float, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getLink(path : String) : Link </td></tr>
<tr><td align="left" balign="left"> + getContextMapping(path : String) : Object[] </td></tr>
<tr><td align="left" balign="left"> + localAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # getDataAttributeMap(attributeName : String) : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setAttribute(descriptor : String) </td></tr>
<tr><td align="left" balign="left"> + setComponentAttribute(attribute : String) </td></tr>
<tr><td align="left" balign="left"> + setCompositeAttribute(descriptor : String) </td></tr>
<tr><td align="left" balign="left"> + isLocalAttribute(attribute : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalSingletonAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLocalMetaattribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isSingletonAttribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isMetaattribute(attributeName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getAttributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + getSingletonAttributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + getMetaattributeValue(path : String, attributeName : String) : String </td></tr>
<tr><td align="left" balign="left"> + mark(path : String, association : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addComponentAssociation(path : String, attribute : String, attributeValue : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addCompositeAssociation(path : String, metaattribute : String, metaattributeValue : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + markedPaths(association : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + removeAttributeValue(path : String, attributeValue : String) </td></tr>
<tr><td align="left" balign="left"> + getLocalMetapath(metaattribute : String) : String </td></tr>
<tr><td align="left" balign="left"> + isValid(signature : Signature) : boolean </td></tr>
<tr><td align="left" balign="left"> + paths(regex : String) : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + contextPaths() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + contextValues() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + localLinkPaths() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getInPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getPars() : ParList </td></tr>
<tr><td align="left" balign="left"> + getOutPaths() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getInValues() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getOutValues() : List&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + linkPaths() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + links() : Enumeration&lt;Link&gt; </td></tr>
<tr><td align="left" balign="left"> + localLinks() : Enumeration&lt;Link&gt; </td></tr>
<tr><td align="left" balign="left"> + getSubcontext() : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getContext(path : String) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getTaskContext(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + append(context : Context&lt;&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendContext(cntxt : Context&lt;T&gt;) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + appendContext(cntxt : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + appendContext(cntxt : Context&lt;&gt;, path : String, prefixContextName : boolean) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + removePath(path : String) </td></tr>
<tr><td align="left" balign="left"> + toString(cr : String, sb : StringBuilder, withMetacontext : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + toStringComplete(cr : String, sb : StringBuffer) : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + toString(isHTML : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + toString(isHTML : boolean, withMetacontext : boolean) : String </td></tr>
<tr><td align="left" balign="left"> + getMetacontext() : Hashtable&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isExportControlled() : boolean </td></tr>
<tr><td align="left" balign="left"> + connect(outPath : String, inPath : String, inContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + pipe(inPath : String, outPath : String, outContext : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + putInValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putOutValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putErrValue(path : String, value : T) : Object </td></tr>
<tr><td align="left" balign="left"> + getArgs() : Object </td></tr>
<tr><td align="left" balign="left"> + setArgs(args : Object[]) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getArgsPath() : String </td></tr>
<tr><td align="left" balign="left"> + setArgsPath(targetPath : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameterTypes() : Class&lt;&gt;[] </td></tr>
<tr><td align="left" balign="left"> + setParameterTypes(types : Class&lt;&gt;[]) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getParameterTypesPath() : String </td></tr>
<tr><td align="left" balign="left"> + setParameterTypesPath(targetPath : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getTarget() : Object </td></tr>
<tr><td align="left" balign="left"> + setTarget(target : Object) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getTargetPath() : String </td></tr>
<tr><td align="left" balign="left"> + setTargetPath(targetPath : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getReturnPath() : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath() : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(path : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnPath(returnPath : ReturnPath&lt;&gt;) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setExecPath(execPath : ExecPath) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getExecPath() : ExecPath </td></tr>
<tr><td align="left" balign="left"> + setReturnValue(value : Object) </td></tr>
<tr><td align="left" balign="left"> + getReturnJobPath() : ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobPath() : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobPath(path : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobPath(returnPath : ReturnPath&lt;&gt;) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setReturnJobValue(value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putInoutValue(path : String, value : T) : T </td></tr>
<tr><td align="left" balign="left"> + putInValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + putOutValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + putInoutValue(path : String, value : T, association : String) : T </td></tr>
<tr><td align="left" balign="left"> + setIn(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setOut(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + setInout(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isExportControlled(b : boolean) </td></tr>
<tr><td align="left" balign="left"> + removePathWithoutDeleted(path : String) </td></tr>
<tr><td align="left" balign="left"> + getTitle() : String </td></tr>
<tr><td align="left" balign="left"> + isLinked() : boolean </td></tr>
<tr><td align="left" balign="left"> + isLinkedContext(path : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + isLinkedPath(path : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLinkedContext(link : Link) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # updateLinkedContext(link : Link) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPath(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + putLink(path : String, id : String, version : float, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + localSimpleAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + simpleAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + localCompositeAttributes() : Enumeration&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + compositeAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes() : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getAttributes(path : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getNodeType(obj : Object) : String </td></tr>
<tr><td align="left" balign="left"> + metaassociations(path : String) : Enumeration&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + containsPath(path : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + containsAssociation(association : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getPathsWithAssociation(association : String) : String[] </td></tr>
<tr><td align="left" balign="left"> + getSubjectPath() : String </td></tr>
<tr><td align="left" balign="left"> + getSubjectValue() : Object </td></tr>
<tr><td align="left" balign="left"> + setSubject(path : String, value : Object) </td></tr>
<tr><td align="left" balign="left"> + updateValue(value : T) </td></tr>
<tr><td align="left" balign="left"> + reportException(t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + reportException(message : String, t : Throwable) </td></tr>
<tr><td align="left" balign="left"> + appendTrace(footprint : String) </td></tr>
<tr><td align="left" balign="left"> + getProvider() : Provider </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getMarkedValues(association : String) : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + setMetacontext(mc : Hashtable&lt;String, Map&lt;String, String&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + get(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + checkpoint() </td></tr>
<tr><td align="left" balign="left"> + changed(aspect : ExecState.Category) </td></tr>
<tr><td align="left" balign="left"> + asis(path : String) : T </td></tr>
<tr><td align="left" balign="left"> + setOutValues(context : Context&lt;T&gt;) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getPar(path : String) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getValue(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + getCurrentSelector() : String </td></tr>
<tr><td align="left" balign="left"> + setCurrentSelector(currentSelector : String) </td></tr>
<tr><td align="left" balign="left"> + getCurrentPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + setCurrentPrefix(currentPrefix : String) </td></tr>
<tr><td align="left" balign="left"> + asis() : T </td></tr>
<tr><td align="left" balign="left"> + getData() : Object </td></tr>
<tr><td align="left" balign="left"> + getPrefix() : String </td></tr>
<tr><td align="left" balign="left"> + setPrefix(prefix : String) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + link(context : Context&lt;&gt;, atPath : String, offset : String) : Object </td></tr>
<tr><td align="left" balign="left"> + addValue(value : Identifiable) : Object </td></tr>
<tr><td align="left" balign="left"> + putDbValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putDbValue(path : String, value : Object, datastoreUrl : URL) : Object </td></tr>
<tr><td align="left" balign="left"> + getURL(path : String) : URL </td></tr>
<tr><td align="left" balign="left"> + getDbUrl() : String </td></tr>
<tr><td align="left" balign="left"> + setDbUrl(dbUrl : String) </td></tr>
<tr><td align="left" balign="left"> + getEntryLists() : List&lt;EntryList&gt; </td></tr>
<tr><td align="left" balign="left"> + setEntryLists(entryLists : List&lt;EntryList&gt;) </td></tr>
<tr><td align="left" balign="left"> + getEntryList(type : EntryList.Type) : EntryList </td></tr>
<tr><td align="left" balign="left"> + getContext(contextTemplate : Context&lt;T&gt;) : Context&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + addPar(p : Par&lt;&gt;) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + addPar(path : String, value : Object) : Par&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + invoke(entries : Arg[]) : T </td></tr>
<tr><td align="left" balign="left"> + invoke(context : Context&lt;&gt;, entries : Arg[]) : T </td></tr>
		</table></td></tr>
		</table>>, URL="./ServiceContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.context.ArrayContext
	c62184 [label=<<table title="sorcer.core.context.ArrayContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ArrayContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # maxIndex : int </td></tr>
<tr><td align="left" balign="left"> + IDEX : String </td></tr>
<tr><td align="left" balign="left"> + VAL : String </td></tr>
<tr><td align="left" balign="left"> + VAL_ : String </td></tr>
<tr><td align="left" balign="left"> + IN : String </td></tr>
<tr><td align="left" balign="left"> + IN_ : String </td></tr>
<tr><td align="left" balign="left"> + OUT : String </td></tr>
<tr><td align="left" balign="left"> + OUT_ : String </td></tr>
<tr><td align="left" balign="left"> + COMMENT : String </td></tr>
<tr><td align="left" balign="left"> + DESCRIPTION : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayContext() </td></tr>
<tr><td align="left" balign="left"> + ArrayContext(name : String) </td></tr>
<tr><td align="left" balign="left"> + ArrayContext(name : String, subjectPath : String, subjectValue : Object) </td></tr>
<tr><td align="left" balign="left"> + v(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + v(index : int, value : Object) </td></tr>
<tr><td align="left" balign="left"> + iv(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + iv(index : int, value : Object) : String </td></tr>
<tr><td align="left" balign="left"> + ov(index : int) : Object </td></tr>
<tr><td align="left" balign="left"> + ov(index : int, value : Object) : String </td></tr>
<tr><td align="left" balign="left"> + c(comment : String) </td></tr>
<tr><td align="left" balign="left"> + c() : String </td></tr>
<tr><td align="left" balign="left"> + vc(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + vc(index : int, comment : String) </td></tr>
<tr><td align="left" balign="left"> + ivc(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ivc(index : int, comment : String) </td></tr>
<tr><td align="left" balign="left"> + ovc(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ovc(index : int, comment : String) </td></tr>
<tr><td align="left" balign="left"> + d(description : String) </td></tr>
<tr><td align="left" balign="left"> + d() : String </td></tr>
<tr><td align="left" balign="left"> + vd(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + vd(index : int, description : String) </td></tr>
<tr><td align="left" balign="left"> + ivd(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ivd(index : int, description : String) </td></tr>
<tr><td align="left" balign="left"> + ovd(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ovd(index : int, description : String) </td></tr>
<tr><td align="left" balign="left"> + getInValues() : List&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getSortedInPaths() : String[] </td></tr>
<tr><td align="left" balign="left"> + civp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + covp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + divp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + dovp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ivp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ovp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + ii(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + oi(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + vp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + cp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + dp(index : int) : String </td></tr>
<tr><td align="left" balign="left"> + getMaxIndex() : int </td></tr>
<tr><td align="left" balign="left"> + getPath(selector : String, index : int) : String </td></tr>
<tr><td align="left" balign="left"> + getIndex(path : String) : int </td></tr>
<tr><td align="left" balign="left"> + getValue(i : int) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(i : int, value : Object) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="./ArrayContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.IndexedContext
	c62216 [label=<<table title="sorcer.service.IndexedContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/IndexedContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IndexedContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + putValue(i : int, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + getValue(i : int) : Object </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/IndexedContext.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.context.ArrayContext extends sorcer.core.context.ServiceContext
	c62178:p -> c62184:p [dir=back,arrowtail=empty];
	//sorcer.core.context.ArrayContext implements sorcer.service.IndexedContext
	c62216:p -> c62184:p [dir=back,arrowtail=empty,style=dashed];
}

