#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.dispatch.CatalogBlockDispatcher
	c44124 [label=<<table title="sorcer.core.dispatch.CatalogBlockDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CatalogBlockDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CatalogBlockDispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CatalogBlockDispatcher(block : Exertion, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # doExec() </td></tr>
<tr><td align="left" balign="left"> # beforeExec(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # afterExec(result : Exertion) </td></tr>
<tr><td align="left" balign="left"> # getInputExertions() : List&lt;Exertion&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./CatalogBlockDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ExertionDispatcherFactory
	c44125 [label=<<table title="sorcer.core.dispatch.ExertionDispatcherFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExertionDispatcherFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExertionDispatcherFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + catalog : Cataloger </td></tr>
<tr><td align="left" balign="left"> + LEASE_RENEWAL_PERIOD : long </td></tr>
<tr><td align="left" balign="left"> + DEFAULT_TIMEOUT_PERIOD : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ExertionDispatcherFactory(loki : LokiMemberUtil) </td></tr>
<tr><td align="left" balign="left"> + getFactory() : DispatcherFactory </td></tr>
<tr><td align="left" balign="left"> + getFactory(loki : LokiMemberUtil) : DispatcherFactory </td></tr>
<tr><td align="left" balign="left"> + createDispatcher(exertion : Exertion, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider) : Dispatcher </td></tr>
<tr><td align="left" balign="left"> # isSpaceSequential(exertion : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> + createDispatcher(exertion : Exertion, provider : Provider, config : String[]) : Dispatcher </td></tr>
<tr><td align="left" balign="left"> + createDispatcher(task : Task, provider : Provider, config : String[]) : SpaceTaskDispatcher </td></tr>
		</table></td></tr>
		</table>>, URL="./ExertionDispatcherFactory.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ExertionSorter
	c44126 [label=<<table title="sorcer.core.dispatch.ExertionSorter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExertionSorter.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExertionSorter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExertionSorter(topLevelJob : Exertion) </td></tr>
<tr><td align="left" balign="left"> + getSortedJob() : Exertion </td></tr>
		</table></td></tr>
		</table>>, URL="./ExertionSorter.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.SpaceSequentialDispatcher
	c44127 [label=<<table title="sorcer.core.dispatch.SpaceSequentialDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SpaceSequentialDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SpaceSequentialDispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SpaceSequentialDispatcher(job : Exertion, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, myMemberUtil : LokiMemberUtil, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # dispatchExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # waitForExertion(exertion : Exertion) </td></tr>
		</table></td></tr>
		</table>>, URL="./SpaceSequentialDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ProviderProvisionManager
	c44128 [label=<<table title="sorcer.core.dispatch.ProviderProvisionManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProviderProvisionManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProviderProvisionManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # servicesToProvision : Set&lt;ProviderProvisionManager.SignatureElement&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ProviderProvisionManager() </td></tr>
<tr><td align="left" balign="left"> + getInstance() : ProviderProvisionManager </td></tr>
<tr><td align="left" balign="left"> + add(exertion : Exertion, spaceExertDispatcher : SpaceParallelDispatcher) </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
		</table></td></tr>
		</table>>, URL="./ProviderProvisionManager.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ProviderProvisionManager.ProvisionThread
	c44129 [label=<<table title="sorcer.core.dispatch.ProviderProvisionManager.ProvisionThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProviderProvisionManager.ProvisionThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProvisionThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # ProvisionThread() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./ProviderProvisionManager.ProvisionThread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.SortingException
	c44130 [label=<<table title="sorcer.core.dispatch.SortingException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SortingException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SortingException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SortingException() </td></tr>
<tr><td align="left" balign="left"> + SortingException(msg : String) </td></tr>
<tr><td align="left" balign="left"> + SortingException(exception : Exception) </td></tr>
<tr><td align="left" balign="left"> + SortingException(msg : String, exception : Exception) </td></tr>
		</table></td></tr>
		</table>>, URL="./SortingException.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.CatalogExertDispatcher
	c44131 [label=<<table title="sorcer.core.dispatch.CatalogExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CatalogExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> CatalogExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CatalogExertDispatcher(job : Exertion, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # execExertion(ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> # afterExec(ex : Exertion, result : Exertion) </td></tr>
<tr><td align="left" balign="left"> # execTask(task : Task) : Task </td></tr>
<tr><td align="left" balign="left"> # execServiceTask(task : Task) : Task </td></tr>
<tr><td align="left" balign="left"> # execJob(job : Job) : Job </td></tr>
		</table></td></tr>
		</table>>, URL="./CatalogExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.CatalogSequentialDispatcher
	c44132 [label=<<table title="sorcer.core.dispatch.CatalogSequentialDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CatalogSequentialDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CatalogSequentialDispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CatalogSequentialDispatcher(job : Exertion, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # doExec() </td></tr>
<tr><td align="left" balign="left"> # dispatchExertion(se : ServiceExertion) </td></tr>
<tr><td align="left" balign="left"> # getInputExertions() : List&lt;Exertion&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./CatalogSequentialDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.SpaceTaskDispatcher
	c44133 [label=<<table title="sorcer.core.dispatch.SpaceTaskDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SpaceTaskDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SpaceTaskDispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SpaceTaskDispatcher(task : Task, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, myMemberUtil : LokiMemberUtil, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # getInputExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> # handleResult(results : Collection&lt;ExertionEnvelop&gt;) </td></tr>
		</table></td></tr>
		</table>>, URL="./SpaceTaskDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.CatalogParallelDispatcher
	c44134 [label=<<table title="sorcer.core.dispatch.CatalogParallelDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CatalogParallelDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CatalogParallelDispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # executor : ExecutorService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CatalogParallelDispatcher(job : Job, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> + exec() </td></tr>
<tr><td align="left" balign="left"> + doExec() </td></tr>
<tr><td align="left" balign="left"> # getInputExertions() : List&lt;Exertion&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./CatalogParallelDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.CatalogParallelDispatcher.ExecExertion
	c44135 [label=<<table title="sorcer.core.dispatch.CatalogParallelDispatcher.ExecExertion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CatalogParallelDispatcher.ExecExertion.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ExecExertion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExecExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + call() : Exertion </td></tr>
		</table></td></tr>
		</table>>, URL="./CatalogParallelDispatcher.ExecExertion.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.DispatcherException
	c44136 [label=<<table title="sorcer.core.dispatch.DispatcherException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DispatcherException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DispatcherException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DispatcherException() </td></tr>
<tr><td align="left" balign="left"> + DispatcherException(msg : String) </td></tr>
<tr><td align="left" balign="left"> + DispatcherException(msg : String, t : Throwable) </td></tr>
		</table></td></tr>
		</table>>, URL="./DispatcherException.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ExertDispatcher
	c44137 [label=<<table title="sorcer.core.dispatch.ExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # xrt : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> # masterXrt : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> # inputXrts : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> # state : int </td></tr>
<tr><td align="left" balign="left"> # isMonitored : boolean </td></tr>
<tr><td align="left" balign="left"> # sharedContexts : Set&lt;Context&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # runningExertionIDs : List&lt;Uuid&gt; </td></tr>
<tr><td align="left" balign="left"> # subject : Subject </td></tr>
<tr><td align="left" balign="left"> # provider : Provider </td></tr>
<tr><td align="left" balign="left"> # dispatchers : Map&lt;Uuid, Dispatcher&gt; </td></tr>
<tr><td align="left" balign="left"> # disatchGroup : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> # providerProvisionManager : ProviderProvisionManager </td></tr>
<tr><td align="left" balign="left"> # provisionManager : ProvisionManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExertDispatcher(exertion : Exertion, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> + getDispatchers() : Map&lt;Uuid, Dispatcher&gt; </td></tr>
<tr><td align="left" balign="left"> + getProvider() : Provider </td></tr>
<tr><td align="left" balign="left"> + setProvider(provider : Provider) </td></tr>
<tr><td align="left" balign="left"> + exec() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # doExec() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # getInputExertions() : List&lt;Exertion&gt; </font></td></tr>
<tr><td align="left" balign="left"> # beforeParent(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # beforeExec(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # afterExec(result : Exertion) </td></tr>
<tr><td align="left" balign="left"> + getResult() : DispatchResult </td></tr>
<tr><td align="left" balign="left"> # checkProvision() </td></tr>
<tr><td align="left" balign="left"> + getExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + setState(state : int) </td></tr>
<tr><td align="left" balign="left"> # collectResults() </td></tr>
<tr><td align="left" balign="left"> # collectOutputs(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # updateInputs(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # updateInputs(toContext : ServiceContext&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> # getSharedContext(path : String, id : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> # reconcileInputExertions(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + getLrm() : LeaseRenewalManager </td></tr>
<tr><td align="left" balign="left"> + setLrm(lrm : LeaseRenewalManager) </td></tr>
		</table></td></tr>
		</table>>, URL="./ExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ExertDispatcher.CollectResultThread
	c44138 [label=<<table title="sorcer.core.dispatch.ExertDispatcher.CollectResultThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ExertDispatcher.CollectResultThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CollectResultThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # CollectResultThread() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="./ExertDispatcher.CollectResultThread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.DispatcherFactory
	c44139 [label=<<table title="sorcer.core.dispatch.DispatcherFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./DispatcherFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DispatcherFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + createDispatcher(exertion : Exertion, provider : Provider, config : String[]) : Dispatcher </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + createDispatcher(Task : Task, provider : Provider, config : String[]) : SpaceTaskDispatcher </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + createDispatcher(exertion : Exertion, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider) : Dispatcher </font></td></tr>
		</table></td></tr>
		</table>>, URL="./DispatcherFactory.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.SpaceParallelDispatcher
	c44140 [label=<<table title="sorcer.core.dispatch.SpaceParallelDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SpaceParallelDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SpaceParallelDispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # space : JavaSpace05 </td></tr>
<tr><td align="left" balign="left"> # doneExertionIndex : int </td></tr>
<tr><td align="left" balign="left"> # loki : LokiMemberUtil </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SpaceParallelDispatcher(exertion : Exertion, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, loki : LokiMemberUtil, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # getInputExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + doExec() </td></tr>
<tr><td align="left" balign="left"> # dispatchExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + collectResults() </td></tr>
<tr><td align="left" balign="left"> # getTemplate(state : int) : ExertionEnvelop </td></tr>
<tr><td align="left" balign="left"> # handleResult(results : Collection&lt;ExertionEnvelop&gt;) </td></tr>
<tr><td align="left" balign="left"> # addPoison(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # changeDoneExertionIndex(index : int) </td></tr>
<tr><td align="left" balign="left"> # preExecExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # writeEnvelop(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # takeEnvelop(template : Entry) : ExertionEnvelop </td></tr>
<tr><td align="left" balign="left"> # postExecExertion(ex : Exertion, result : Exertion) </td></tr>
<tr><td align="left" balign="left"> # handleError(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # executeMasterExertion() </td></tr>
		</table></td></tr>
		</table>>, URL="./SpaceParallelDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.BlockThread
	c44141 [label=<<table title="sorcer.core.dispatch.BlockThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./BlockThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BlockThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BlockThread(block : Block, provider : Provider) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + getBlock() : Block </td></tr>
<tr><td align="left" balign="left"> + getResult() : Block </td></tr>
		</table></td></tr>
		</table>>, URL="./BlockThread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.JobThread
	c44142 [label=<<table title="sorcer.core.dispatch.JobThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./JobThread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JobThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + JobThread(job : Job, provider : Provider, dispatcherFactory : DispatcherFactory) </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> + getJob() : Job </td></tr>
<tr><td align="left" balign="left"> + getResult() : Job </td></tr>
		</table></td></tr>
		</table>>, URL="./JobThread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ProvisionManager
	c44143 [label=<<table title="sorcer.core.dispatch.ProvisionManager" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./ProvisionManager.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProvisionManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ProvisionManager(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + deployServices() : boolean </td></tr>
<tr><td align="left" balign="left"> + undeploy() </td></tr>
<tr><td align="left" balign="left"> + getOperationalStringManager() : OperationalStringManager </td></tr>
		</table></td></tr>
		</table>>, URL="./ProvisionManager.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.dispatch.CatalogBlockDispatcher extends sorcer.core.dispatch.CatalogSequentialDispatcher
	c44132:p -> c44124:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.ExertionDispatcherFactory implements sorcer.core.dispatch.DispatcherFactory
	c44139:p -> c44125:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.dispatch.SpaceSequentialDispatcher extends sorcer.core.dispatch.SpaceParallelDispatcher
	c44140:p -> c44127:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.CatalogExertDispatcher extends sorcer.core.dispatch.ExertDispatcher
	c44137:p -> c44131:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.CatalogSequentialDispatcher extends sorcer.core.dispatch.CatalogExertDispatcher
	c44131:p -> c44132:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.SpaceTaskDispatcher extends sorcer.core.dispatch.SpaceParallelDispatcher
	c44140:p -> c44133:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.CatalogParallelDispatcher extends sorcer.core.dispatch.CatalogExertDispatcher
	c44131:p -> c44134:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.SpaceParallelDispatcher extends sorcer.core.dispatch.ExertDispatcher
	c44137:p -> c44140:p [dir=back,arrowtail=empty];
}

