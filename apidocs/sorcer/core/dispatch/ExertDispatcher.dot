#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.core.Dispatcher
	c195318 [label=<<table title="sorcer.core.Dispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../Dispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Dispatcher </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + dispatchExertions() </td></tr>
<tr><td align="left" balign="left"> + collectResults() </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + getExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setProvider(provider : Provider) </td></tr>
		</table></td></tr>
		</table>>, URL="../Dispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Exec
	c195505 [label=<<table title="sorcer.service.Exec" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Exec.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Exec </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FAILED : int </td></tr>
<tr><td align="left" balign="left"> + INITIAL : int </td></tr>
<tr><td align="left" balign="left"> + INSPACE : int </td></tr>
<tr><td align="left" balign="left"> + RUNNING : int </td></tr>
<tr><td align="left" balign="left"> + DONE : int </td></tr>
<tr><td align="left" balign="left"> + STOPPED : int </td></tr>
<tr><td align="left" balign="left"> + SUSPENDED : int </td></tr>
<tr><td align="left" balign="left"> + RESUMED : int </td></tr>
<tr><td align="left" balign="left"> + NEXT_STEP : int </td></tr>
<tr><td align="left" balign="left"> + INSPACE_FOR_SLA : int </td></tr>
<tr><td align="left" balign="left"> + RETURNED : int </td></tr>
<tr><td align="left" balign="left"> + UPDATED : int </td></tr>
<tr><td align="left" balign="left"> + ASYNC : int </td></tr>
<tr><td align="left" balign="left"> + NULL : int </td></tr>
<tr><td align="left" balign="left"> + ASIS : int </td></tr>
<tr><td align="left" balign="left"> + ERROR : int </td></tr>
<tr><td align="left" balign="left"> + POISONED : int </td></tr>
<tr><td align="left" balign="left"> + INVALID_CMD : int </td></tr>
<tr><td align="left" balign="left"> + TRANSACTION_ERROR : int </td></tr>
<tr><td align="left" balign="left"> + LOCK_ERROR : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Exec.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.SpaceExertDispatcher
	c195646 [label=<<table title="sorcer.core.dispatch.SpaceExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SpaceExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SpaceExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # space : JavaSpace05 </td></tr>
<tr><td align="left" balign="left"> # doneExertionIndex : int </td></tr>
<tr><td align="left" balign="left"> # myMemberUtil : LokiMemberUtil </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SpaceExertDispatcher() </td></tr>
<tr><td align="left" balign="left"> + SpaceExertDispatcher(exertion : Exertion, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, memUtil : LokiMemberUtil, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> + SpaceExertDispatcher(job : Job, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider) </td></tr>
<tr><td align="left" balign="left"> # addPoison(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # changeDoneExertionIndex(index : int) </td></tr>
<tr><td align="left" balign="left"> # preExecExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # writeEnvelop(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # takeEnvelop(template : Entry) : ExertionEnvelop </td></tr>
<tr><td align="left" balign="left"> # postExecExertion(ex : Exertion, result : Exertion) </td></tr>
<tr><td align="left" balign="left"> + collectFails() </td></tr>
<tr><td align="left" balign="left"> + collectErrors() </td></tr>
<tr><td align="left" balign="left"> # handleError(exertion : Exertion, state : int) </td></tr>
<tr><td align="left" balign="left"> # executeMasterExertion() </td></tr>
		</table></td></tr>
		</table>>, URL="./SpaceExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.CatalogExertDispatcher
	c195656 [label=<<table title="sorcer.core.dispatch.CatalogExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./CatalogExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> CatalogExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CatalogExertDispatcher(job : Exertion, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # preExecExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # runExertion(ex : ServiceExertion) : CatalogExertDispatcher.ExertionThread </td></tr>
<tr><td align="left" balign="left"> # execExertion(ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> # postExecExertion(ex : Exertion, result : Exertion) </td></tr>
<tr><td align="left" balign="left"> # execTask(task : Task) : Task </td></tr>
<tr><td align="left" balign="left"> # execServiceTask(task : Task) : Task </td></tr>
<tr><td align="left" balign="left"> # execJob(job : Job) : Job </td></tr>
		</table></td></tr>
		</table>>, URL="./CatalogExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.SWIFExertDispatcher
	c195663 [label=<<table title="sorcer.core.dispatch.SWIFExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./SWIFExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SWIFExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SWIFExertDispatcher(job : Job, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # preExecExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # runExertion(ex : ServiceExertion) : SWIFExertDispatcher.ExertionThread </td></tr>
<tr><td align="left" balign="left"> # execExertion(ex : Exertion) : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> # postExecExertion(ex : Exertion, result : Exertion) </td></tr>
		</table></td></tr>
		</table>>, URL="./SWIFExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.ExertDispatcher
	c195665 [label=<<table title="sorcer.core.dispatch.ExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> ExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # xrt : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> # masterXrt : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> # inputXrts : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> # state : int </td></tr>
<tr><td align="left" balign="left"> # isMonitored : boolean </td></tr>
<tr><td align="left" balign="left"> # sharedContexts : Set&lt;Context&lt;&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> # isSpawned : boolean </td></tr>
<tr><td align="left" balign="left"> # runningExertionIDs : Vector&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> # subject : Subject </td></tr>
<tr><td align="left" balign="left"> # provider : Provider </td></tr>
<tr><td align="left" balign="left"> # catalog : Cataloger </td></tr>
<tr><td align="left" balign="left"> # dispatchers : Hashtable&lt;Uuid, ExertDispatcher&gt; </td></tr>
<tr><td align="left" balign="left"> # disatchGroup : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> # dThread : ExertDispatcher.DispatchThread </td></tr>
<tr><td align="left" balign="left"> # providerProvisionManager : ProviderProvisionManager </td></tr>
<tr><td align="left" balign="left"> # provisionManager : ProvisionManager </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ExertDispatcher() </td></tr>
<tr><td align="left" balign="left"> + ExertDispatcher(exertion : Exertion, sharedContexts : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> + getDispatchers() : Hashtable&lt;Uuid, ExertDispatcher&gt; </td></tr>
<tr><td align="left" balign="left"> + setDispatchers(dispatchers : Hashtable&lt;Uuid, ExertDispatcher&gt;) </td></tr>
<tr><td align="left" balign="left"> + getProvider() : Provider </td></tr>
<tr><td align="left" balign="left"> + setProvider(provider : Provider) </td></tr>
<tr><td align="left" balign="left"> # initialize() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + dispatchExertions() </font></td></tr>
<tr><td align="left" balign="left"> # checkAndDispatchExertions() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + collectResults() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # preExecExertion(ex : Exertion) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> # postExecExertion(input : Exertion, result : Exertion) </font></td></tr>
<tr><td align="left" balign="left"> + getExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + getDispatcher(jobID : String) : ExertDispatcher </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + setState(state : int) </td></tr>
<tr><td align="left" balign="left"> + createExertionID(ex : ServiceExertion) : String </td></tr>
<tr><td align="left" balign="left"> # collectSharedContexts(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # collectOutputs(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # updateInputs(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # updateInputs(toContext : ServiceContext&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> # getSharedContext(path : String, id : String) : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + sendMail(message : String, to : String) </td></tr>
<tr><td align="left" balign="left"> + sendMailWithSubject(message : String, subject : String, to : String) </td></tr>
<tr><td align="left" balign="left"> + notifyExertionExecution(inex : Exertion, outex : Exertion) </td></tr>
<tr><td align="left" balign="left"> + notifyExertionExecution(parent : Exertion, inex : Exertion, outex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # getDataURL(filename : String) : String </td></tr>
<tr><td align="left" balign="left"> # getDataFilename(filename : String) : String </td></tr>
<tr><td align="left" balign="left"> + isMonitorable() : boolean </td></tr>
<tr><td align="left" balign="left"> # notifyFailure(msg : String, t : ServiceExertion, seqNum : long) </td></tr>
<tr><td align="left" balign="left"> # notifyException(msg : String, t : ServiceExertion, seqNum : long) </td></tr>
<tr><td align="left" balign="left"> # notifyInformation(msg : String, t : ServiceExertion, seqNum : long) </td></tr>
<tr><td align="left" balign="left"> # notifyWarning(msg : String, t : ServiceExertion, seqNum : long) </td></tr>
<tr><td align="left" balign="left"> + stopJob() : NetJob </td></tr>
<tr><td align="left" balign="left"> + suspendJob() : NetJob </td></tr>
<tr><td align="left" balign="left"> # isInterupted(ex : Exertion) : boolean </td></tr>
<tr><td align="left" balign="left"> + resumeJob() : NetJob </td></tr>
<tr><td align="left" balign="left"> + stepJob() : NetJob </td></tr>
<tr><td align="left" balign="left"> # getCatalog() : Cataloger </td></tr>
<tr><td align="left" balign="left"> + getProviderProvisionManager() : ProviderProvisionManager </td></tr>
<tr><td align="left" balign="left"> + getProvisionManager() : ProvisionManager </td></tr>
<tr><td align="left" balign="left"> + sendCheckPointEmail(task : ServiceExertion, job : NetJob) </td></tr>
<tr><td align="left" balign="left"> # reconcileInputExertions(ex : Exertion) </td></tr>
<tr><td align="left" balign="left"> # prepareJob() </td></tr>
		</table></td></tr>
		</table>>, URL="./ExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.dispatch.MonitoredExertDispatcher
	c195672 [label=<<table title="sorcer.core.dispatch.MonitoredExertDispatcher" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./MonitoredExertDispatcher.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> MonitoredExertDispatcher </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + sessionMonitor : MonitorSessionManagement </td></tr>
<tr><td align="left" balign="left"> + lrm : LeaseRenewalManager </td></tr>
<tr><td align="left" balign="left"> + LEASE_RENEWAL_PERIOD : long </td></tr>
<tr><td align="left" balign="left"> + DEFAULT_TIMEOUT_PERIOD : long </td></tr>
<tr><td align="left" balign="left"> # doneExertionIndex : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MonitoredExertDispatcher(exertion : Exertion, sharedContext : Set&lt;Context&lt;&gt;&gt;, isSpawned : boolean, provider : Provider, provisionManager : ProvisionManager, providerProvisionManager : ProviderProvisionManager) </td></tr>
<tr><td align="left" balign="left"> # preExecExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # postExecExertion(result : Exertion) </td></tr>
<tr><td align="left" balign="left"> # execExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> # postExecExertion(ex : Exertion, result : Exertion) </td></tr>
		</table></td></tr>
		</table>>, URL="./MonitoredExertDispatcher.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.dispatch.SpaceExertDispatcher extends sorcer.core.dispatch.ExertDispatcher
	c195665:p -> c195646:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.CatalogExertDispatcher extends sorcer.core.dispatch.ExertDispatcher
	c195665:p -> c195656:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.SWIFExertDispatcher extends sorcer.core.dispatch.ExertDispatcher
	c195665:p -> c195663:p [dir=back,arrowtail=empty];
	//sorcer.core.dispatch.ExertDispatcher implements sorcer.core.Dispatcher
	c195318:p -> c195665:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.dispatch.ExertDispatcher implements sorcer.service.Exec
	c195505:p -> c195665:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.dispatch.MonitoredExertDispatcher extends sorcer.core.dispatch.ExertDispatcher
	c195665:p -> c195672:p [dir=back,arrowtail=empty];
}

