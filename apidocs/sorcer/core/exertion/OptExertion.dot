#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.service.Task
	c371610 [label=<<table title="sorcer.service.Task" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Task.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Task </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> + argsPath : String </td></tr>
<tr><td align="left" balign="left"> # innerTask : Task </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Task() </td></tr>
<tr><td align="left" balign="left"> + Task(name : String) </td></tr>
<tr><td align="left" balign="left"> + Task(name : String, signature : Signature) </td></tr>
<tr><td align="left" balign="left"> + Task(name : String, signature : Signature, context : Context&lt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + Task(name : String, description : String) </td></tr>
<tr><td align="left" balign="left"> + Task(name : String, signatures : List&lt;Signature&gt;) </td></tr>
<tr><td align="left" balign="left"> + Task(name : String, description : String, signatures : List&lt;Signature&gt;) </td></tr>
<tr><td align="left" balign="left"> + newTask(name : String, signature : Signature, context : Context&lt;&gt;) : Task </td></tr>
<tr><td align="left" balign="left"> + doTask() : Task </td></tr>
<tr><td align="left" balign="left"> + doTask(txn : Transaction) : Task </td></tr>
<tr><td align="left" balign="left"> + undoTask() </td></tr>
<tr><td align="left" balign="left"> + setIndex(i : int) </td></tr>
<tr><td align="left" balign="left"> + isTask() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCmd() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasChild(childName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + isJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + setOwnerId(oid : String) </td></tr>
<tr><td align="left" balign="left"> + doIt() : ServiceContext&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + equals(task : Task) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + describe() : String </td></tr>
<tr><td align="left" balign="left"> + isTree(visited : Set&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getUpdatedExertion(type : int) : Exertion </td></tr>
<tr><td align="left" balign="left"> + linkContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + linkControlContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getExertions(exs : List&lt;Exertion&gt;) : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + addExertion(component : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getInnerTask() : Task </td></tr>
<tr><td align="left" balign="left"> + setInnerTask(innerTask : Task) </td></tr>
<tr><td align="left" balign="left"> + isContinous() : boolean </td></tr>
<tr><td align="left" balign="left"> + setContinous(isContinous : boolean) </td></tr>
<tr><td align="left" balign="left"> # doBatchTask(txn : Transaction) : Task </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + reset(state : int) </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Task.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.ConditionalExertion
	c371686 [label=<<table title="sorcer.service.ConditionalExertion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/ConditionalExertion.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ConditionalExertion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getConditions() : List&lt;Conditional&gt; </td></tr>
<tr><td align="left" balign="left"> + getTargets() : List&lt;Exertion&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/ConditionalExertion.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.OptExertion
	c371900 [label=<<table title="sorcer.core.exertion.OptExertion" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./OptExertion.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OptExertion </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # condition : Condition </td></tr>
<tr><td align="left" balign="left"> # target : Exertion </td></tr>
<tr><td align="left" balign="left"> # isActive : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OptExertion(name : String) </td></tr>
<tr><td align="left" balign="left"> + OptExertion(name : String, exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + OptExertion(condition : Condition, exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + OptExertion(name : String, condition : Condition, exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + getTarget() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setTarget(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + doTask(txn : Transaction) : Task </td></tr>
<tr><td align="left" balign="left"> + isActive() : boolean </td></tr>
<tr><td align="left" balign="left"> + getCondition() : Condition </td></tr>
<tr><td align="left" balign="left"> + isConditional() : boolean </td></tr>
<tr><td align="left" balign="left"> + reset(state : int) </td></tr>
<tr><td align="left" balign="left"> + getConditions() : List&lt;Conditional&gt; </td></tr>
<tr><td align="left" balign="left"> + getExertions(exs : List&lt;Exertion&gt;) : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptions(exceptions : List&lt;ThrowableTrace&gt;) : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + getTargets() : List&lt;Exertion&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="./OptExertion.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.exertion.OptExertion extends sorcer.service.Task
	c371610:p -> c371900:p [dir=back,arrowtail=empty];
	//sorcer.core.exertion.OptExertion implements sorcer.service.ConditionalExertion
	c371686:p -> c371900:p [dir=back,arrowtail=empty,style=dashed];
}

