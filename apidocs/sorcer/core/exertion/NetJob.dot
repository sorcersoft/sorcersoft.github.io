#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// sorcer.service.Job
	c373245 [label=<<table title="sorcer.service.Job" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Job.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Job </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # logger : Logger </td></tr>
<tr><td align="left" balign="left"> # exertions : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + state : Integer </td></tr>
<tr><td align="left" balign="left"> # delegate : Job </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Job() </td></tr>
<tr><td align="left" balign="left"> + Job(name : String) </td></tr>
<tr><td align="left" balign="left"> + Job(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + Job(name : String, description : String) </td></tr>
<tr><td align="left" balign="left"> + Job(name : String, description : String, fidelity : ServiceFidelity) </td></tr>
<tr><td align="left" balign="left"> + getFidelity() : ServiceFidelity </td></tr>
<tr><td align="left" balign="left"> + isJob() : boolean </td></tr>
<tr><td align="left" balign="left"> + isCompound() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasChild(childName : String) : boolean </td></tr>
<tr><td align="left" balign="left"> + getChild(childName : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getLsbID() : long </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + indexOf(ex : Exertion) : int </td></tr>
<tr><td align="left" balign="left"> + setExertionAt(ex : Exertion, i : int) </td></tr>
<tr><td align="left" balign="left"> + getMasterExertion() : Exertion </td></tr>
<tr><td align="left" balign="left"> + setRendezvousName(jobberName : String) </td></tr>
<tr><td align="left" balign="left"> + getProcessSignature() : Signature </td></tr>
<tr><td align="left" balign="left"> + addExertion(ex : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + addExertions(exertions : List&lt;Exertion&gt;) </td></tr>
<tr><td align="left" balign="left"> + setExertions(exertions : List&lt;Exertion&gt;) </td></tr>
<tr><td align="left" balign="left"> + addExertion(exertion : Exertion, priority : int) : Job </td></tr>
<tr><td align="left" balign="left"> + removeExertion(exertion : Exertion) : Exertion </td></tr>
<tr><td align="left" balign="left"> + remove(index : int) </td></tr>
<tr><td align="left" balign="left"> + get(index : int) : Exertion </td></tr>
<tr><td align="left" balign="left"> + doJob(txn : Transaction) : Job </td></tr>
<tr><td align="left" balign="left"> + undoJob() </td></tr>
<tr><td align="left" balign="left"> + setState(state : int) </td></tr>
<tr><td align="left" balign="left"> + getState() : int </td></tr>
<tr><td align="left" balign="left"> + getPrincipalID() : String </td></tr>
<tr><td align="left" balign="left"> + setPrincipalID(id : String) </td></tr>
<tr><td align="left" balign="left"> + setSubject(subject : Subject) </td></tr>
<tr><td align="left" balign="left"> + setPrincipal(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getSubject() : Subject </td></tr>
<tr><td align="left" balign="left"> + getServiceID() : ServiceID </td></tr>
<tr><td align="left" balign="left"> + jobContextToString() : String </td></tr>
<tr><td align="left" balign="left"> + setMasterExertion(exertion : Exertion) </td></tr>
<tr><td align="left" balign="left"> + setOwnerId(id : String) </td></tr>
<tr><td align="left" balign="left"> + getContextName() : String </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getExertions() : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getExertions(exs : List&lt;Exertion&gt;) : List&lt;Exertion&gt; </td></tr>
<tr><td align="left" balign="left"> + getExceptions() : List&lt;ThrowableTrace&gt; </td></tr>
<tr><td align="left" balign="left"> + isTree(visited : Set&lt;&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + getExertion(index : int) : Exertion </td></tr>
<tr><td align="left" balign="left"> + getContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getJobContext() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getControlInfo() : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + linkContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + linkControlContext(context : Context&lt;&gt;, path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getJobValue(path : String) : Object </td></tr>
<tr><td align="left" balign="left"> + getValue(path : String, args : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + putValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + putJobValue(path : String, value : Object) : Object </td></tr>
<tr><td align="left" balign="left"> + getReturnPath() : Signature.ReturnPath&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getReturnValue(entries : Arg[]) : Object </td></tr>
<tr><td align="left" balign="left"> + getComponentContext(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getComponentControlContext(path : String) : Context&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getComponentExertion(path : String) : Exertion </td></tr>
<tr><td align="left" balign="left"> + applyFidelityContext(fiContext : FidelityContext) </td></tr>
<tr><td align="left" balign="left"> + reset(state : int) </td></tr>
<tr><td align="left" balign="left"> + substitute(entries : Arg[]) : ServiceExertion </td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Job.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Evaluation<T>
	c373250 [label=<<table title="sorcer.service.Evaluation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Evaluation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Evaluation&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + asis() : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getValue(entries : Arg[]) : T </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + substitute(entries : Arg[]) : Evaluation&lt;T&gt; </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Evaluation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.service.Invocation<T>
	c373287 [label=<<table title="sorcer.service.Invocation" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../service/Invocation.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Invocation&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + invoke(context : Context&lt;T&gt;, entries : Arg[]) : T </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../service/Invocation.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// sorcer.core.exertion.NetJob
	c373511 [label=<<table title="sorcer.core.exertion.NetJob" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./NetJob.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NetJob </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NetJob() </td></tr>
<tr><td align="left" balign="left"> + NetJob(name : String) </td></tr>
<tr><td align="left" balign="left"> + NetJob(principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + NetJob(name : String, principal : SorcerPrincipal) </td></tr>
<tr><td align="left" balign="left"> + getTemplate() : ServiceExertion </td></tr>
<tr><td align="left" balign="left"> + doJob(txn : Transaction) : Job </td></tr>
<tr><td align="left" balign="left"> + isNet() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="./NetJob.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//sorcer.core.exertion.NetJob extends sorcer.service.Job
	c373245:p -> c373511:p [dir=back,arrowtail=empty];
	//sorcer.core.exertion.NetJob implements sorcer.service.Evaluation<T>
	c373250:p -> c373511:p [dir=back,arrowtail=empty,style=dashed];
	//sorcer.core.exertion.NetJob implements sorcer.service.Invocation<T>
	c373287:p -> c373511:p [dir=back,arrowtail=empty,style=dashed];
}

